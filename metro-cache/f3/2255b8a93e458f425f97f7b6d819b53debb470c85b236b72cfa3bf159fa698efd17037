{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"../NativeModules/specs/NativeRedBox","data":{"isAsync":false,"locs":[]}},{"name":"../LogBox/Data/LogBoxData","data":{"isAsync":false,"locs":[]}},{"name":"./DevSettings","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":20},"end":{"line":13,"column":44}}]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}]}},{"name":"metro/src/lib/bundle-modules/HMRClient","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":23},"end":{"line":15,"column":72}}]}},{"name":"./Platform","data":{"isAsync":false,"locs":[{"start":{"line":16,"column":17},"end":{"line":16,"column":38}}]}},{"name":"pretty-format","data":{"isAsync":false,"locs":[{"start":{"line":17,"column":21},"end":{"line":17,"column":45}}]}},{"name":"./LoadingView","data":{"isAsync":false,"locs":[{"start":{"line":70,"column":24},"end":{"line":70,"column":48}},{"start":{"line":156,"column":24},"end":{"line":156,"column":48}}]}},{"name":"../Core/NativeExceptionsManager","data":{"isAsync":false,"locs":[{"start":{"line":300,"column":36},"end":{"line":300,"column":78}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _NativeRedBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../NativeModules/specs/NativeRedBox\"));\n\n  var LogBoxData = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"../LogBox/Data/LogBoxData\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var DevSettings = _$$_REQUIRE(_dependencyMap[4], \"./DevSettings\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[5], \"invariant\");\n\n  var MetroHMRClient = _$$_REQUIRE(_dependencyMap[6], \"metro/src/lib/bundle-modules/HMRClient\");\n\n  var Platform = _$$_REQUIRE(_dependencyMap[7], \"./Platform\");\n\n  var prettyFormat = _$$_REQUIRE(_dependencyMap[8], \"pretty-format\");\n\n  var pendingEntryPoints = [];\n  var hmrClient = null;\n  var hmrUnavailableReason = null;\n  var currentCompileErrorMessage = null;\n  var didConnect = false;\n  var pendingLogs = [];\n  var HMRClient = {\n    enable: function enable() {\n      if (hmrUnavailableReason !== null) {\n        throw new Error(hmrUnavailableReason);\n      }\n\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      var LoadingView = _$$_REQUIRE(_dependencyMap[9], \"./LoadingView\");\n\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n      var hasUpdates = hmrClient.hasPendingUpdates();\n\n      if (hasUpdates) {\n        LoadingView.showMessage('Refreshing...', 'refresh');\n      }\n\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.hide();\n        }\n      }\n\n      showCompileError();\n    },\n    disable: function disable() {\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle: function registerBundle(requestUrl) {\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log: function log(level, data) {\n      if (!hmrClient) {\n        pendingLogs.push([level, data]);\n\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n\n        return;\n      }\n\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level: level,\n          data: data.map(function (item) {\n            return typeof item === 'string' ? item : prettyFormat(item, {\n              escapeString: true,\n              highlight: true,\n              maxDepth: 3,\n              min: true,\n              plugins: [prettyFormat.plugins.ReactElement]\n            });\n          })\n        }));\n      } catch (error) {}\n    },\n    setup: function setup(platform, bundleEntry, host, port, isEnabled) {\n      invariant(platform, 'Missing required parameter `platform`');\n      invariant(bundleEntry, 'Missing required parameter `bundleEntry`');\n      invariant(host, 'Missing required parameter `host`');\n      invariant(!hmrClient, 'Cannot initialize hmrClient twice');\n\n      var LoadingView = _$$_REQUIRE(_dependencyMap[9], \"./LoadingView\");\n\n      var wsHost = port !== null && port !== '' ? host + \":\" + port : host;\n      var client = new MetroHMRClient(\"ws://\" + wsHost + \"/hot\");\n      hmrClient = client;\n      pendingEntryPoints.push(\"ws://\" + wsHost + \"/hot?bundleEntry=\" + bundleEntry + \"&platform=\" + platform);\n      client.on('connection-error', function (e) {\n        var error = \"Cannot connect to the Metro server.\\n\\nTry the following to fix the issue:\\n- Ensure that the Metro server is running and available on the same network\";\n\n        if (\"android\" === 'ios') {\n          error += \"\\n- Ensure that the Metro server URL is correctly set in AppDelegate\";\n        } else {\n          error += \"\\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run 'adb devices' to see a list of connected devices\\n- If you're on a physical device connected to the same machine, run 'adb reverse tcp:8081 tcp:8081' to forward requests from your device\\n- If your device is on the same Wi-Fi network, set 'Debug server host & port for device' in 'Dev settings' to your machine's IP address and the port of the local dev server - e.g. 10.0.1.1:8081\";\n        }\n\n        error += \"\\n\\nURL: \" + host + \":\" + port + \"\\n\\nError: \" + e.message;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', function (_ref) {\n        var isInitialUpdate = _ref.isInitialUpdate;\n        currentCompileErrorMessage = null;\n        didConnect = true;\n\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', function (_ref2) {\n        var isInitialUpdate = _ref2.isInitialUpdate;\n\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          LogBoxData.clear();\n        }\n      });\n      client.on('update-done', function () {\n        LoadingView.hide();\n      });\n      client.on('error', function (data) {\n        LoadingView.hide();\n\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('The Metro server has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('The Metro server and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = data.type + \" \" + data.message;\n\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', function (data) {\n        LoadingView.hide();\n        setHMRUnavailableReason('Disconnected from the Metro server.');\n      });\n\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs(hmrClient);\n    }\n  };\n\n  function setHMRUnavailableReason(reason) {\n    invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n    if (hmrUnavailableReason !== null) {\n      return;\n    }\n\n    hmrUnavailableReason = reason;\n\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n    }\n  }\n\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason) {\n      DevSettings.reload('Bundle Splitting â€“ Metro disconnected');\n      return;\n    }\n\n    if (pendingEntryPoints.length > 0) {\n      client.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n\n  function flushEarlyLogs(client) {\n    try {\n      pendingLogs.forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n            level = _ref4[0],\n            data = _ref4[1];\n\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n\n  function dismissRedbox() {\n    if (\"android\" === 'ios' && _NativeRedBox.default != null && _NativeRedBox.default.dismiss != null) {\n      _NativeRedBox.default.dismiss();\n    } else {\n      var NativeExceptionsManager = _$$_REQUIRE(_dependencyMap[10], \"../Core/NativeExceptionsManager\").default;\n\n      NativeExceptionsManager && NativeExceptionsManager.dismissRedbox && NativeExceptionsManager.dismissRedbox();\n    }\n  }\n\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    dismissRedbox();\n    var message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    var error = new Error(message);\n    error.preventSymbolication = true;\n    throw error;\n  }\n\n  module.exports = HMRClient;\n});","lineCount":241,"map":[[2,0,11,0],[8,0,19,0],[10,0,20,0],[16,0,13,0],[16,6,13,6,"DevSettings"],[16,17,13,17],[16,20,13,20,"require"],[16,31,13,27],[16,67,13,0],[18,0,14,0],[18,6,14,6,"invariant"],[18,15,14,15],[18,18,14,18,"require"],[18,29,14,25],[18,61,14,0],[20,0,15,0],[20,6,15,6,"MetroHMRClient"],[20,20,15,20],[20,23,15,23,"require"],[20,34,15,30],[20,95,15,0],[22,0,16,0],[22,6,16,6,"Platform"],[22,14,16,14],[22,17,16,17,"require"],[22,28,16,24],[22,61,16,0],[24,0,17,0],[24,6,17,6,"prettyFormat"],[24,18,17,18],[24,21,17,21,"require"],[24,32,17,28],[24,68,17,0],[26,0,23,0],[26,6,23,6,"pendingEntryPoints"],[26,24,23,24],[26,27,23,27],[26,29,23,0],[27,0,24,0],[27,6,24,4,"hmrClient"],[27,15,24,13],[27,18,24,16],[27,22,24,0],[28,0,25,0],[28,6,25,4,"hmrUnavailableReason"],[28,26,25,39],[28,29,25,42],[28,33,25,0],[29,0,26,0],[29,6,26,4,"currentCompileErrorMessage"],[29,32,26,45],[29,35,26,48],[29,39,26,0],[30,0,27,0],[30,6,27,4,"didConnect"],[30,16,27,23],[30,19,27,26],[30,24,27,0],[31,0,28,0],[31,6,28,4,"pendingLogs"],[31,17,28,48],[31,20,28,51],[31,22,28,0],[32,0,59,0],[32,6,59,6,"HMRClient"],[32,15,59,41],[32,18,59,44],[33,0,60,2,"enable"],[33,4,60,2,"enable"],[33,10,59,44],[33,30,60,11],[34,0,61,4],[34,10,61,8,"hmrUnavailableReason"],[34,30,61,28],[34,35,61,33],[34,39,61,4],[34,41,61,39],[35,0,66,6],[35,14,66,12],[35,18,66,16,"Error"],[35,23,66,12],[35,24,66,22,"hmrUnavailableReason"],[35,44,66,12],[35,45,66,6],[36,0,67,5],[38,0,69,4,"invariant"],[38,6,69,4,"invariant"],[38,15,69,13],[38,16,69,14,"hmrClient"],[38,25,69,13],[38,27,69,25],[38,72,69,13],[38,73,69,4],[40,0,70,4],[40,10,70,10,"LoadingView"],[40,21,70,21],[40,24,70,24,"require"],[40,35,70,31],[40,71,70,4],[42,0,74,4,"hmrClient"],[42,6,74,4,"hmrClient"],[42,15,74,13],[42,16,74,14,"send"],[42,20,74,4],[42,21,74,19,"JSON"],[42,25,74,23],[42,26,74,24,"stringify"],[42,35,74,19],[42,36,74,34],[43,0,74,35,"type"],[43,8,74,35,"type"],[43,12,74,39],[43,14,74,41],[44,0,74,34],[44,7,74,19],[44,8,74,4],[45,0,78,4],[45,10,78,10,"hasUpdates"],[45,20,78,20],[45,23,78,23,"hmrClient"],[45,32,78,32],[45,33,78,33,"hasPendingUpdates"],[45,50,78,23],[45,52,78,4],[47,0,80,4],[47,10,80,8,"hasUpdates"],[47,20,80,4],[47,22,80,20],[48,0,81,6,"LoadingView"],[48,8,81,6,"LoadingView"],[48,19,81,17],[48,20,81,18,"showMessage"],[48,31,81,6],[48,32,81,30],[48,47,81,6],[48,49,81,47],[48,58,81,6],[49,0,82,5],[51,0,83,4],[51,10,83,8],[52,0,84,6,"hmrClient"],[52,8,84,6,"hmrClient"],[52,17,84,15],[52,18,84,16,"enable"],[52,24,84,6],[53,0,85,5],[53,7,83,4],[53,16,85,14],[54,0,86,6],[54,12,86,10,"hasUpdates"],[54,22,86,6],[54,24,86,22],[55,0,87,8,"LoadingView"],[55,10,87,8,"LoadingView"],[55,21,87,19],[55,22,87,20,"hide"],[55,26,87,8],[56,0,88,7],[57,0,89,5],[59,0,93,4,"showCompileError"],[59,6,93,4,"showCompileError"],[59,22,93,20],[60,0,94,3],[60,5,59,44],[61,0,96,2,"disable"],[61,4,96,2,"disable"],[61,11,59,44],[61,32,96,12],[62,0,97,4,"invariant"],[62,6,97,4,"invariant"],[62,15,97,13],[62,16,97,14,"hmrClient"],[62,25,97,13],[62,27,97,25],[62,72,97,13],[62,73,97,4],[63,0,98,4,"hmrClient"],[63,6,98,4,"hmrClient"],[63,15,98,13],[63,16,98,14,"disable"],[63,23,98,4],[64,0,99,3],[64,5,59,44],[65,0,101,2,"registerBundle"],[65,4,101,2,"registerBundle"],[65,18,59,44],[65,44,101,17,"requestUrl"],[65,54,59,44],[65,56,101,37],[66,0,102,4,"invariant"],[66,6,102,4,"invariant"],[66,15,102,13],[66,16,102,14,"hmrClient"],[66,25,102,13],[66,27,102,25],[66,72,102,13],[66,73,102,4],[67,0,103,4,"pendingEntryPoints"],[67,6,103,4,"pendingEntryPoints"],[67,24,103,22],[67,25,103,23,"push"],[67,29,103,4],[67,30,103,28,"requestUrl"],[67,40,103,4],[68,0,104,4,"registerBundleEntryPoints"],[68,6,104,4,"registerBundleEntryPoints"],[68,31,104,29],[68,32,104,30,"hmrClient"],[68,41,104,29],[68,42,104,4],[69,0,105,3],[69,5,59,44],[70,0,107,2,"log"],[70,4,107,2,"log"],[70,7,59,44],[70,22,107,6,"level"],[70,27,59,44],[70,29,107,23,"data"],[70,33,59,44],[70,35,107,43],[71,0,108,4],[71,10,108,8],[71,11,108,9,"hmrClient"],[71,20,108,4],[71,22,108,20],[72,0,111,6,"pendingLogs"],[72,8,111,6,"pendingLogs"],[72,19,111,17],[72,20,111,18,"push"],[72,24,111,6],[72,25,111,23],[72,26,111,24,"level"],[72,31,111,23],[72,33,111,31,"data"],[72,37,111,23],[72,38,111,6],[74,0,112,6],[74,12,112,10,"pendingLogs"],[74,23,112,21],[74,24,112,22,"length"],[74,30,112,10],[74,33,112,31],[74,36,112,6],[74,38,112,36],[75,0,113,8,"pendingLogs"],[75,10,113,8,"pendingLogs"],[75,21,113,19],[75,22,113,20,"shift"],[75,27,113,8],[76,0,114,7],[78,0,115,6],[79,0,116,5],[81,0,117,4],[81,10,117,8],[82,0,118,6,"hmrClient"],[82,8,118,6,"hmrClient"],[82,17,118,15],[82,18,118,16,"send"],[82,22,118,6],[82,23,119,8,"JSON"],[82,27,119,12],[82,28,119,13,"stringify"],[82,37,119,8],[82,38,119,23],[83,0,120,10,"type"],[83,10,120,10,"type"],[83,14,120,14],[83,16,120,16],[83,21,119,23],[84,0,121,10,"level"],[84,10,121,10,"level"],[84,15,121,15],[84,17,121,10,"level"],[84,22,119,23],[85,0,122,10,"data"],[85,10,122,10,"data"],[85,14,122,14],[85,16,122,16,"data"],[85,20,122,20],[85,21,122,21,"map"],[85,24,122,16],[85,25,122,25],[85,35,122,25,"item"],[85,39,122,29],[86,0,122,29],[86,19,123,12],[86,26,123,19,"item"],[86,30,123,12],[86,35,123,28],[86,43,123,12],[86,46,124,16,"item"],[86,50,123,12],[86,53,125,16,"prettyFormat"],[86,65,125,28],[86,66,125,29,"item"],[86,70,125,28],[86,72,125,35],[87,0,126,18,"escapeString"],[87,14,126,18,"escapeString"],[87,26,126,30],[87,28,126,32],[87,32,125,35],[88,0,127,18,"highlight"],[88,14,127,18,"highlight"],[88,23,127,27],[88,25,127,29],[88,29,125,35],[89,0,128,18,"maxDepth"],[89,14,128,18,"maxDepth"],[89,22,128,26],[89,24,128,28],[89,25,125,35],[90,0,129,18,"min"],[90,14,129,18,"min"],[90,17,129,21],[90,19,129,23],[90,23,125,35],[91,0,130,18,"plugins"],[91,14,130,18,"plugins"],[91,21,130,25],[91,23,130,27],[91,24,130,28,"prettyFormat"],[91,36,130,40],[91,37,130,41,"plugins"],[91,44,130,28],[91,45,130,49,"ReactElement"],[91,57,130,27],[92,0,125,35],[92,13,125,28],[92,14,122,29],[93,0,122,29],[93,11,122,16],[94,0,119,23],[94,9,119,8],[94,10,118,6],[95,0,135,5],[95,7,117,4],[95,8,135,6],[95,15,135,13,"error"],[95,20,135,6],[95,22,135,20],[95,23,138,5],[96,0,139,3],[96,5,59,44],[97,0,143,2,"setup"],[97,4,143,2,"setup"],[97,9,59,44],[97,26,144,4,"platform"],[97,34,59,44],[97,36,145,4,"bundleEntry"],[97,47,59,44],[97,49,146,4,"host"],[97,53,59,44],[97,55,147,4,"port"],[97,59,59,44],[97,61,148,4,"isEnabled"],[97,70,59,44],[97,72,149,4],[98,0,150,4,"invariant"],[98,6,150,4,"invariant"],[98,15,150,13],[98,16,150,14,"platform"],[98,24,150,13],[98,26,150,24],[98,65,150,13],[98,66,150,4],[99,0,151,4,"invariant"],[99,6,151,4,"invariant"],[99,15,151,13],[99,16,151,14,"bundleEntry"],[99,27,151,13],[99,29,151,27],[99,71,151,13],[99,72,151,4],[100,0,152,4,"invariant"],[100,6,152,4,"invariant"],[100,15,152,13],[100,16,152,14,"host"],[100,20,152,13],[100,22,152,20],[100,57,152,13],[100,58,152,4],[101,0,153,4,"invariant"],[101,6,153,4,"invariant"],[101,15,153,13],[101,16,153,14],[101,17,153,15,"hmrClient"],[101,26,153,13],[101,28,153,26],[101,63,153,13],[101,64,153,4],[103,0,156,4],[103,10,156,10,"LoadingView"],[103,21,156,21],[103,24,156,24,"require"],[103,35,156,31],[103,71,156,4],[105,0,158,4],[105,10,158,10,"wsHost"],[105,16,158,16],[105,19,158,19,"port"],[105,23,158,23],[105,28,158,28],[105,32,158,19],[105,36,158,36,"port"],[105,40,158,40],[105,45,158,45],[105,47,158,19],[105,50,158,53,"host"],[105,54,158,19],[105,63,158,61,"port"],[105,67,158,19],[105,70,158,70,"host"],[105,74,158,4],[106,0,159,4],[106,10,159,10,"client"],[106,16,159,16],[106,19,159,19],[106,23,159,23,"MetroHMRClient"],[106,37,159,19],[106,48,159,46,"wsHost"],[106,54,159,19],[106,64,159,4],[107,0,160,4,"hmrClient"],[107,6,160,4,"hmrClient"],[107,15,160,13],[107,18,160,16,"client"],[107,24,160,4],[108,0,162,4,"pendingEntryPoints"],[108,6,162,4,"pendingEntryPoints"],[108,24,162,22],[108,25,162,23,"push"],[108,29,162,4],[108,40,163,14,"wsHost"],[108,46,162,4],[108,71,163,40,"bundleEntry"],[108,82,162,4],[108,100,163,64,"platform"],[108,108,162,4],[109,0,166,4,"client"],[109,6,166,4,"client"],[109,12,166,10],[109,13,166,11,"on"],[109,15,166,4],[109,16,166,14],[109,34,166,4],[109,36,166,34],[109,46,166,34,"e"],[109,47,166,35],[109,49,166,39],[110,0,167,6],[110,12,167,10,"error"],[110,17,167,15],[110,173,167,6],[112,0,172,6],[112,12,172,10],[112,26,172,26],[112,31,172,6],[112,33,172,33],[113,0,173,8,"error"],[113,10,173,8,"error"],[113,15,173,13],[113,89,173,8],[114,0,175,7],[114,9,172,6],[114,15,175,13],[115,0,176,8,"error"],[115,10,176,8,"error"],[115,15,176,13],[115,504,176,8],[116,0,180,7],[118,0,182,6,"error"],[118,8,182,6,"error"],[118,13,182,11],[118,31,184,7,"host"],[118,35,182,11],[118,44,184,15,"port"],[118,48,182,11],[118,67,186,9,"e"],[118,68,186,10],[118,69,186,11,"message"],[118,76,182,6],[119,0,188,6,"setHMRUnavailableReason"],[119,8,188,6,"setHMRUnavailableReason"],[119,31,188,29],[119,32,188,30,"error"],[119,37,188,29],[119,38,188,6],[120,0,189,5],[120,7,166,4],[121,0,191,4,"client"],[121,6,191,4,"client"],[121,12,191,10],[121,13,191,11,"on"],[121,15,191,4],[121,16,191,14],[121,30,191,4],[121,32,191,30],[121,48,191,53],[122,0,191,53],[122,12,191,32,"isInitialUpdate"],[122,27,191,53],[122,35,191,32,"isInitialUpdate"],[122,50,191,53],[123,0,192,6,"currentCompileErrorMessage"],[123,8,192,6,"currentCompileErrorMessage"],[123,34,192,32],[123,37,192,35],[123,41,192,6],[124,0,193,6,"didConnect"],[124,8,193,6,"didConnect"],[124,18,193,16],[124,21,193,19],[124,25,193,6],[126,0,195,6],[126,12,195,10,"client"],[126,18,195,16],[126,19,195,17,"isEnabled"],[126,28,195,10],[126,34,195,32],[126,35,195,33,"isInitialUpdate"],[126,50,195,6],[126,52,195,50],[127,0,196,8,"LoadingView"],[127,10,196,8,"LoadingView"],[127,21,196,19],[127,22,196,20,"showMessage"],[127,33,196,8],[127,34,196,32],[127,49,196,8],[127,51,196,49],[127,60,196,8],[128,0,197,7],[129,0,198,5],[129,7,191,4],[130,0,200,4,"client"],[130,6,200,4,"client"],[130,12,200,10],[130,13,200,11,"on"],[130,15,200,4],[130,16,200,14],[130,24,200,4],[130,26,200,24],[130,43,200,47],[131,0,200,47],[131,12,200,26,"isInitialUpdate"],[131,27,200,47],[131,36,200,26,"isInitialUpdate"],[131,51,200,47],[133,0,201,6],[133,12,201,10,"client"],[133,18,201,16],[133,19,201,17,"isEnabled"],[133,28,201,10],[133,34,201,32],[133,35,201,33,"isInitialUpdate"],[133,50,201,6],[133,52,201,50],[134,0,202,8,"dismissRedbox"],[134,10,202,8,"dismissRedbox"],[134,23,202,21],[135,0,203,8,"LogBoxData"],[135,10,203,8,"LogBoxData"],[135,20,203,18],[135,21,203,19,"clear"],[135,26,203,8],[136,0,204,7],[137,0,205,5],[137,7,200,4],[138,0,207,4,"client"],[138,6,207,4,"client"],[138,12,207,10],[138,13,207,11,"on"],[138,15,207,4],[138,16,207,14],[138,29,207,4],[138,31,207,29],[138,43,207,35],[139,0,208,6,"LoadingView"],[139,8,208,6,"LoadingView"],[139,19,208,17],[139,20,208,18,"hide"],[139,24,208,6],[140,0,209,5],[140,7,207,4],[141,0,211,4,"client"],[141,6,211,4,"client"],[141,12,211,10],[141,13,211,11,"on"],[141,15,211,4],[141,16,211,14],[141,23,211,4],[141,25,211,23],[141,35,211,23,"data"],[141,39,211,27],[141,41,211,31],[142,0,212,6,"LoadingView"],[142,8,212,6,"LoadingView"],[142,19,212,17],[142,20,212,18,"hide"],[142,24,212,6],[144,0,214,6],[144,12,214,10,"data"],[144,16,214,14],[144,17,214,15,"type"],[144,21,214,10],[144,26,214,24],[144,46,214,6],[144,48,214,46],[145,0,215,8,"client"],[145,10,215,8,"client"],[145,16,215,14],[145,17,215,15,"close"],[145,22,215,8],[146,0,216,8,"setHMRUnavailableReason"],[146,10,216,8,"setHMRUnavailableReason"],[146,33,216,31],[146,34,217,10],[146,108,216,31],[146,109,216,8],[147,0,219,7],[147,9,214,6],[147,15,219,13],[147,19,219,17,"data"],[147,23,219,21],[147,24,219,22,"type"],[147,28,219,17],[147,33,219,31],[147,56,219,13],[147,58,219,56],[148,0,220,8,"client"],[148,10,220,8,"client"],[148,16,220,14],[148,17,220,15,"close"],[148,22,220,8],[149,0,221,8,"setHMRUnavailableReason"],[149,10,221,8,"setHMRUnavailableReason"],[149,33,221,31],[149,34,222,10],[149,105,221,31],[149,106,221,8],[150,0,224,7],[150,9,219,13],[150,15,224,13],[151,0,225,8,"currentCompileErrorMessage"],[151,10,225,8,"currentCompileErrorMessage"],[151,36,225,34],[151,39,225,40,"data"],[151,43,225,44],[151,44,225,45,"type"],[151,48,225,34],[151,57,225,53,"data"],[151,61,225,57],[151,62,225,58,"message"],[151,69,225,8],[153,0,226,8],[153,14,226,12,"client"],[153,20,226,18],[153,21,226,19,"isEnabled"],[153,30,226,12],[153,32,226,8],[153,34,226,32],[154,0,227,10,"showCompileError"],[154,12,227,10,"showCompileError"],[154,28,227,26],[155,0,228,9],[156,0,229,7],[157,0,230,5],[157,7,211,4],[158,0,232,4,"client"],[158,6,232,4,"client"],[158,12,232,10],[158,13,232,11,"on"],[158,15,232,4],[158,16,232,14],[158,23,232,4],[158,25,232,23],[158,35,232,23,"data"],[158,39,232,27],[158,41,232,31],[159,0,233,6,"LoadingView"],[159,8,233,6,"LoadingView"],[159,19,233,17],[159,20,233,18,"hide"],[159,24,233,6],[160,0,234,6,"setHMRUnavailableReason"],[160,8,234,6,"setHMRUnavailableReason"],[160,31,234,29],[160,32,234,30],[160,69,234,29],[160,70,234,6],[161,0,235,5],[161,7,232,4],[163,0,237,4],[163,10,237,8,"isEnabled"],[163,19,237,4],[163,21,237,19],[164,0,238,6,"HMRClient"],[164,8,238,6,"HMRClient"],[164,17,238,15],[164,18,238,16,"enable"],[164,24,238,6],[165,0,239,5],[165,7,237,4],[165,13,239,11],[166,0,240,6,"HMRClient"],[166,8,240,6,"HMRClient"],[166,17,240,15],[166,18,240,16,"disable"],[166,25,240,6],[167,0,241,5],[169,0,243,4,"registerBundleEntryPoints"],[169,6,243,4,"registerBundleEntryPoints"],[169,31,243,29],[169,32,243,30,"hmrClient"],[169,41,243,29],[169,42,243,4],[170,0,244,4,"flushEarlyLogs"],[170,6,244,4,"flushEarlyLogs"],[170,20,244,18],[170,21,244,19,"hmrClient"],[170,30,244,18],[170,31,244,4],[171,0,245,3],[172,0,59,44],[172,3,59,0],[174,0,248,0],[174,11,248,9,"setHMRUnavailableReason"],[174,34,248,0],[174,35,248,33,"reason"],[174,41,248,0],[174,43,248,41],[175,0,249,2,"invariant"],[175,4,249,2,"invariant"],[175,13,249,11],[175,14,249,12,"hmrClient"],[175,23,249,11],[175,25,249,23],[175,70,249,11],[175,71,249,2],[177,0,250,2],[177,8,250,6,"hmrUnavailableReason"],[177,28,250,26],[177,33,250,31],[177,37,250,2],[177,39,250,37],[178,0,252,4],[179,0,253,3],[181,0,254,2,"hmrUnavailableReason"],[181,4,254,2,"hmrUnavailableReason"],[181,24,254,22],[181,27,254,25,"reason"],[181,33,254,2],[183,0,259,2],[183,8,259,6,"hmrClient"],[183,17,259,15],[183,18,259,16,"isEnabled"],[183,27,259,6],[183,33,259,31,"didConnect"],[183,43,259,2],[183,45,259,43],[184,0,260,4,"console"],[184,6,260,4,"console"],[184,13,260,11],[184,14,260,12,"warn"],[184,18,260,4],[184,19,260,17,"reason"],[184,25,260,4],[185,0,262,3],[186,0,263,1],[188,0,265,0],[188,11,265,9,"registerBundleEntryPoints"],[188,36,265,0],[188,37,265,35,"client"],[188,43,265,0],[188,45,265,43],[189,0,266,2],[189,8,266,6,"hmrUnavailableReason"],[189,28,266,2],[189,30,266,28],[190,0,267,4,"DevSettings"],[190,6,267,4,"DevSettings"],[190,17,267,15],[190,18,267,16,"reload"],[190,24,267,4],[190,25,267,23],[190,64,267,4],[191,0,268,4],[192,0,269,3],[194,0,271,2],[194,8,271,6,"pendingEntryPoints"],[194,26,271,24],[194,27,271,25,"length"],[194,33,271,6],[194,36,271,34],[194,37,271,2],[194,39,271,37],[195,0,272,4,"client"],[195,6,272,4,"client"],[195,12,272,10],[195,13,272,11,"send"],[195,17,272,4],[195,18,273,6,"JSON"],[195,22,273,10],[195,23,273,11,"stringify"],[195,32,273,6],[195,33,273,21],[196,0,274,8,"type"],[196,8,274,8,"type"],[196,12,274,12],[196,14,274,14],[196,36,273,21],[197,0,275,8,"entryPoints"],[197,8,275,8,"entryPoints"],[197,19,275,19],[197,21,275,21,"pendingEntryPoints"],[198,0,273,21],[198,7,273,6],[198,8,272,4],[199,0,278,4,"pendingEntryPoints"],[199,6,278,4,"pendingEntryPoints"],[199,24,278,22],[199,25,278,23,"length"],[199,31,278,4],[199,34,278,32],[199,35,278,4],[200,0,279,3],[201,0,280,1],[203,0,282,0],[203,11,282,9,"flushEarlyLogs"],[203,25,282,0],[203,26,282,24,"client"],[203,32,282,0],[203,34,282,32],[204,0,283,2],[204,8,283,6],[205,0,284,4,"pendingLogs"],[205,6,284,4,"pendingLogs"],[205,17,284,15],[205,18,284,16,"forEach"],[205,25,284,4],[205,26,284,24],[205,43,284,67],[206,0,284,67],[207,0,284,67],[207,12,284,26,"level"],[207,17,284,67],[208,0,284,67],[208,12,284,43,"data"],[208,16,284,67],[210,0,285,6,"HMRClient"],[210,8,285,6,"HMRClient"],[210,17,285,15],[210,18,285,16,"log"],[210,21,285,6],[210,22,285,20,"level"],[210,27,285,6],[210,29,285,27,"data"],[210,33,285,6],[211,0,286,5],[211,7,284,4],[212,0,287,3],[212,5,283,2],[212,14,287,12],[213,0,288,4,"pendingLogs"],[213,6,288,4,"pendingLogs"],[213,17,288,15],[213,18,288,16,"length"],[213,24,288,4],[213,27,288,25],[213,28,288,4],[214,0,289,3],[215,0,290,1],[217,0,292,0],[217,11,292,9,"dismissRedbox"],[217,24,292,0],[217,27,292,25],[218,0,293,2],[218,8,294,4],[218,22,294,20],[218,27,294,4],[218,31,295,4,"NativeRedBox"],[218,56,295,20],[218,60,294,4],[218,64,296,4,"NativeRedBox"],[218,86,296,17,"dismiss"],[218,93,296,4],[218,97,296,28],[218,101,293,2],[218,103,297,4],[219,0,298,4,"NativeRedBox"],[219,28,298,17,"dismiss"],[219,35,298,4],[220,0,299,3],[220,5,293,2],[220,11,299,9],[221,0,300,4],[221,10,300,10,"NativeExceptionsManager"],[221,33,300,33],[221,36,300,36,"require"],[221,47,300,43],[221,102,300,36],[221,103,301,7,"default"],[221,110,300,4],[223,0,302,4,"NativeExceptionsManager"],[223,6,302,4,"NativeExceptionsManager"],[223,29,302,27],[223,33,303,6,"NativeExceptionsManager"],[223,56,303,29],[223,57,303,30,"dismissRedbox"],[223,70,302,4],[223,74,304,6,"NativeExceptionsManager"],[223,97,304,29],[223,98,304,30,"dismissRedbox"],[223,111,304,6],[223,113,302,4],[224,0,305,3],[225,0,306,1],[227,0,308,0],[227,11,308,9,"showCompileError"],[227,27,308,0],[227,30,308,28],[228,0,309,2],[228,8,309,6,"currentCompileErrorMessage"],[228,34,309,32],[228,39,309,37],[228,43,309,2],[228,45,309,43],[229,0,310,4],[230,0,311,3],[232,0,315,2,"dismissRedbox"],[232,4,315,2,"dismissRedbox"],[232,17,315,15],[233,0,317,2],[233,8,317,8,"message"],[233,15,317,15],[233,18,317,18,"currentCompileErrorMessage"],[233,44,317,2],[234,0,318,2,"currentCompileErrorMessage"],[234,4,318,2,"currentCompileErrorMessage"],[234,30,318,28],[234,33,318,31],[234,37,318,2],[235,0,320,2],[235,8,320,8,"error"],[235,13,320,28],[235,16,320,31],[235,20,320,35,"Error"],[235,25,320,31],[235,26,320,41,"message"],[235,33,320,31],[235,34,320,2],[236,0,323,2,"error"],[236,4,323,2,"error"],[236,9,323,7],[236,10,323,8,"preventSymbolication"],[236,30,323,2],[236,33,323,31],[236,37,323,2],[237,0,324,2],[237,10,324,8,"error"],[237,15,324,2],[238,0,325,1],[240,0,327,0,"module"],[240,2,327,0,"module"],[240,8,327,6],[240,9,327,7,"exports"],[240,16,327,0],[240,19,327,17,"HMRClient"],[240,28,327,0]],"functionMap":{"names":["<global>","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;EC2D;GDkC;EEE;GFG;EGE;GHI;EIE;yBCe;kBDS;GJQ;EMI;kCCuB;KDuB;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDmB;uBCE;KDG;GNU;AQG;CRe;ASE;CTe;AUE;wBCE;KDE;CVI;AYE;CZc;AaE;CbiB"}},"type":"js/module"}]}