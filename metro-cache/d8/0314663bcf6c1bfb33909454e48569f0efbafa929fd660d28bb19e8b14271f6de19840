{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"nanoid/non-secure","data":{"isAsync":false,"locs":[]}},{"name":"./TabRouter","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[4], \"nanoid/non-secure\");\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"./TabRouter\"));\n\n  var _excluded = [\"openByDefault\"];\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread(_objectSpread({}, _TabRouter.TabActions), {}, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.some(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(_ref) {\n    var openByDefault = _ref.openByDefault,\n        rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    var router = (0, _TabRouter.default)(rest);\n    return _objectSpread(_objectSpread({}, router), {}, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList,\n            routeGetIdList = _ref2.routeGetIdList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList,\n            routeGetIdList = _ref3.routeGetIdList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (partialState.history ? isDrawerOpen(partialState) : openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n\n        if (openByDefault) {\n          return openDrawer(result);\n        }\n\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (openByDefault) {\n              if (!isDrawerOpen(state)) {\n                return openDrawer(state);\n              }\n            } else {\n              if (isDrawerOpen(state)) {\n                return closeDrawer(state);\n              }\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":176,"map":[[16,0,1,0],[18,0,8,0],[30,0,61,7],[30,6,61,13,"DrawerActions"],[30,19,61,26],[30,54,62,5,"TabActions"],[30,75,61,26],[31,0,63,2,"openDrawer"],[31,4,63,2,"openDrawer"],[31,14,61,26],[31,38,63,33],[32,0,64,4],[32,13,64,11],[33,0,64,13,"type"],[33,8,64,13,"type"],[33,12,64,17],[33,14,64,19],[34,0,64,11],[34,7,64,4],[35,0,65,3],[35,5,61,26],[36,0,66,2,"closeDrawer"],[36,4,66,2,"closeDrawer"],[36,15,61,26],[36,40,66,34],[37,0,67,4],[37,13,67,11],[38,0,67,13,"type"],[38,8,67,13,"type"],[38,12,67,17],[38,14,67,19],[39,0,67,11],[39,7,67,4],[40,0,68,3],[40,5,61,26],[41,0,69,2,"toggleDrawer"],[41,4,69,2,"toggleDrawer"],[41,16,61,26],[41,42,69,35],[42,0,70,4],[42,13,70,11],[43,0,70,13,"type"],[43,8,70,13,"type"],[43,12,70,17],[43,14,70,19],[44,0,70,11],[44,7,70,4],[45,0,71,3],[46,0,61,26],[46,4,61,7],[50,0,74,0],[50,6,74,6,"isDrawerOpen"],[50,18,74,18],[50,21,74,21],[50,30,74,6,"isDrawerOpen"],[50,42,74,21],[50,43,75,2,"state"],[50,48,74,21],[51,0,74,21],[53,0,74,21],[53,11,78,5,"Boolean"],[53,18,78,12],[53,37,78,13,"state"],[53,42,78,18],[53,43,78,19,"history"],[53,50,78,12],[53,71,78,13],[53,86,78,28,"some"],[53,90,78,13],[53,91,78,33],[53,101,78,34,"it"],[53,103,78,33],[54,0,78,33],[54,13,78,41,"it"],[54,15,78,43],[54,16,78,44,"type"],[54,20,78,41],[54,25,78,53],[54,33,78,33],[55,0,78,33],[55,5,78,13],[55,6,78,12],[55,7,74,21],[56,0,74,21],[56,3,74,0],[58,0,80,0],[58,6,80,6,"openDrawer"],[58,16,80,16],[58,19,80,19],[58,28,80,6,"openDrawer"],[58,38,80,19],[58,39,81,2,"state"],[58,44,80,19],[58,46,82,43],[59,0,83,2],[59,8,83,6,"isDrawerOpen"],[59,20,83,18],[59,21,83,19,"state"],[59,26,83,18],[59,27,83,2],[59,29,83,27],[60,0,84,4],[60,13,84,11,"state"],[60,18,84,4],[61,0,85,3],[63,0,87,2],[63,43,88,7,"state"],[63,48,87,2],[64,0,89,4,"history"],[64,6,89,4,"history"],[64,13,89,11],[64,58,89,17,"state"],[64,63,89,22],[64,64,89,23,"history"],[64,71,89,11],[64,75,89,32],[65,0,89,34,"type"],[65,8,89,34,"type"],[65,12,89,38],[65,14,89,40],[66,0,89,32],[66,7,89,11],[67,0,87,2],[68,0,91,1],[68,3,80,0],[70,0,93,0],[70,6,93,6,"closeDrawer"],[70,17,93,17],[70,20,93,20],[70,29,93,6,"closeDrawer"],[70,40,93,20],[70,41,94,2,"state"],[70,46,93,20],[70,48,95,43],[71,0,96,2],[71,8,96,6],[71,9,96,7,"isDrawerOpen"],[71,21,96,19],[71,22,96,20,"state"],[71,27,96,19],[71,28,96,2],[71,30,96,28],[72,0,97,4],[72,13,97,11,"state"],[72,18,97,4],[73,0,98,3],[75,0,100,2],[75,43,101,7,"state"],[75,48,100,2],[76,0,102,4,"history"],[76,6,102,4,"history"],[76,13,102,11],[76,15,102,13,"state"],[76,20,102,18],[76,21,102,19,"history"],[76,28,102,13],[76,29,102,27,"filter"],[76,35,102,13],[76,36,102,34],[76,46,102,35,"it"],[76,48,102,34],[77,0,102,34],[77,15,102,42,"it"],[77,17,102,44],[77,18,102,45,"type"],[77,22,102,42],[77,27,102,54],[77,35,102,34],[78,0,102,34],[78,7,102,13],[79,0,100,2],[80,0,104,1],[80,3,93,0],[82,0,106,15],[82,11,106,24,"DrawerRouter"],[82,23,106,15],[82,30,112,2],[83,0,112,2],[83,8,107,2,"openByDefault"],[83,21,112,2],[83,29,107,2,"openByDefault"],[83,42,112,2],[84,0,112,2],[84,8,108,5,"rest"],[84,12,112,2],[85,0,113,2],[85,8,113,8,"router"],[85,14,113,14],[85,17,113,18],[85,41,113,28,"rest"],[85,45,113,18],[85,46,113,2],[86,0,118,2],[86,43,119,7,"router"],[86,49,118,2],[87,0,121,4,"type"],[87,6,121,4,"type"],[87,10,121,8],[87,12,121,10],[87,20,118,2],[88,0,123,4,"getInitialState"],[88,6,123,4,"getInitialState"],[88,21,118,2],[88,55,123,68],[89,0,123,68],[89,12,123,22,"routeNames"],[89,22,123,68],[89,31,123,22,"routeNames"],[89,41,123,68],[90,0,123,68],[90,12,123,34,"routeParamList"],[90,26,123,68],[90,35,123,34,"routeParamList"],[90,49,123,68],[91,0,123,68],[91,12,123,50,"routeGetIdList"],[91,26,123,68],[91,35,123,50,"routeGetIdList"],[91,49,123,68],[92,0,124,6],[92,12,124,10,"state"],[92,17,124,15],[92,20,124,18,"router"],[92,26,124,24],[92,27,124,25,"getInitialState"],[92,42,124,18],[92,43,124,41],[93,0,125,8,"routeNames"],[93,10,125,8,"routeNames"],[93,20,125,18],[93,22,125,8,"routeNames"],[93,32,124,41],[94,0,126,8,"routeParamList"],[94,10,126,8,"routeParamList"],[94,24,126,22],[94,26,126,8,"routeParamList"],[94,40,124,41],[95,0,127,8,"routeGetIdList"],[95,10,127,8,"routeGetIdList"],[95,24,127,22],[95,26,127,8,"routeGetIdList"],[96,0,124,41],[96,9,124,18],[96,10,124,6],[98,0,130,6],[98,12,130,10,"openByDefault"],[98,25,130,6],[98,27,130,25],[99,0,131,8,"state"],[99,10,131,8,"state"],[99,15,131,13],[99,18,131,16,"openDrawer"],[99,28,131,26],[99,29,131,27,"state"],[99,34,131,26],[99,35,131,8],[100,0,132,7],[102,0,134,6],[102,47,135,11,"state"],[102,52,134,6],[103,0,136,8,"stale"],[103,10,136,8,"stale"],[103,15,136,13],[103,17,136,15],[103,22,134,6],[104,0,137,8,"type"],[104,10,137,8,"type"],[104,14,137,12],[104,16,137,14],[104,24,134,6],[105,0,138,8,"key"],[105,10,138,8,"key"],[105,13,138,11],[105,27,138,23],[106,0,134,6],[107,0,140,5],[107,7,118,2],[108,0,142,4,"getRehydratedState"],[108,6,142,4,"getRehydratedState"],[108,24,118,2],[108,54,143,6,"partialState"],[108,66,118,2],[108,75,145,6],[109,0,145,6],[109,12,144,8,"routeNames"],[109,22,145,6],[109,31,144,8,"routeNames"],[109,41,145,6],[110,0,145,6],[110,12,144,20,"routeParamList"],[110,26,145,6],[110,35,144,20,"routeParamList"],[110,49,145,6],[111,0,145,6],[111,12,144,36,"routeGetIdList"],[111,26,145,6],[111,35,144,36,"routeGetIdList"],[111,49,145,6],[113,0,146,6],[113,12,146,10,"partialState"],[113,24,146,22],[113,25,146,23,"stale"],[113,30,146,10],[113,35,146,33],[113,40,146,6],[113,42,146,40],[114,0,147,8],[114,17,147,15,"partialState"],[114,29,147,8],[115,0,148,7],[117,0,150,6],[117,12,150,10,"state"],[117,17,150,15],[117,20,150,18,"router"],[117,26,150,24],[117,27,150,25,"getRehydratedState"],[117,45,150,18],[117,46,150,44,"partialState"],[117,58,150,18],[117,60,150,58],[118,0,151,8,"routeNames"],[118,10,151,8,"routeNames"],[118,20,151,18],[118,22,151,8,"routeNames"],[118,32,150,58],[119,0,152,8,"routeParamList"],[119,10,152,8,"routeParamList"],[119,24,152,22],[119,26,152,8,"routeParamList"],[119,40,150,58],[120,0,153,8,"routeGetIdList"],[120,10,153,8,"routeGetIdList"],[120,24,153,22],[120,26,153,8,"routeGetIdList"],[121,0,150,58],[121,9,150,18],[121,10,150,6],[123,0,156,6],[123,12,156,10,"partialState"],[123,24,156,22],[123,25,156,23,"history"],[123,32,156,10],[123,35,156,33,"isDrawerOpen"],[123,47,156,45],[123,48,156,46,"partialState"],[123,60,156,45],[123,61,156,10],[123,64,156,62,"openByDefault"],[123,77,156,6],[123,79,156,77],[124,0,157,8,"state"],[124,10,157,8,"state"],[124,15,157,13],[124,18,157,16,"openDrawer"],[124,28,157,26],[124,29,157,27,"state"],[124,34,157,26],[124,35,157,8],[125,0,158,7],[127,0,160,6],[127,47,161,11,"state"],[127,52,160,6],[128,0,162,8,"type"],[128,10,162,8,"type"],[128,14,162,12],[128,16,162,14],[128,24,160,6],[129,0,163,8,"key"],[129,10,163,8,"key"],[129,13,163,11],[129,27,163,23],[130,0,160,6],[131,0,165,5],[131,7,118,2],[132,0,167,4,"getStateForRouteFocus"],[132,6,167,4,"getStateForRouteFocus"],[132,27,118,2],[132,60,167,26,"state"],[132,65,118,2],[132,67,167,33,"key"],[132,70,118,2],[132,72,167,38],[133,0,168,6],[133,12,168,12,"result"],[133,18,168,18],[133,21,168,21,"router"],[133,27,168,27],[133,28,168,28,"getStateForRouteFocus"],[133,49,168,21],[133,50,168,50,"state"],[133,55,168,21],[133,57,168,57,"key"],[133,60,168,21],[133,61,168,6],[135,0,170,6],[135,12,170,10,"openByDefault"],[135,25,170,6],[135,27,170,25],[136,0,171,8],[136,17,171,15,"openDrawer"],[136,27,171,25],[136,28,171,26,"result"],[136,34,171,25],[136,35,171,8],[137,0,172,7],[139,0,174,6],[139,15,174,13,"closeDrawer"],[139,26,174,24],[139,27,174,25,"result"],[139,33,174,24],[139,34,174,6],[140,0,175,5],[140,7,118,2],[141,0,177,4,"getStateForAction"],[141,6,177,4,"getStateForAction"],[141,23,118,2],[141,52,177,22,"state"],[141,57,118,2],[141,59,177,29,"action"],[141,65,118,2],[141,67,177,37,"options"],[141,74,118,2],[141,76,177,46],[142,0,178,6],[142,16,178,14,"action"],[142,22,178,20],[142,23,178,21,"type"],[142,27,178,6],[143,0,179,8],[143,15,179,13],[143,28,179,8],[144,0,180,10],[144,19,180,17,"openDrawer"],[144,29,180,27],[144,30,180,28,"state"],[144,35,180,27],[144,36,180,10],[146,0,182,8],[146,15,182,13],[146,29,182,8],[147,0,183,10],[147,19,183,17,"closeDrawer"],[147,30,183,28],[147,31,183,29,"state"],[147,36,183,28],[147,37,183,10],[149,0,185,8],[149,15,185,13],[149,30,185,8],[150,0,186,10],[150,16,186,14,"isDrawerOpen"],[150,28,186,26],[150,29,186,27,"state"],[150,34,186,26],[150,35,186,10],[150,37,186,35],[151,0,187,12],[151,21,187,19,"closeDrawer"],[151,32,187,30],[151,33,187,31,"state"],[151,38,187,30],[151,39,187,12],[152,0,188,11],[154,0,190,10],[154,19,190,17,"openDrawer"],[154,29,190,27],[154,30,190,28,"state"],[154,35,190,27],[154,36,190,10],[156,0,192,8],[156,15,192,13],[156,24,192,8],[157,0,193,10],[157,16,193,14,"openByDefault"],[157,29,193,10],[157,31,193,29],[158,0,194,12],[158,18,194,16],[158,19,194,17,"isDrawerOpen"],[158,31,194,29],[158,32,194,30,"state"],[158,37,194,29],[158,38,194,12],[158,40,194,38],[159,0,195,14],[159,23,195,21,"openDrawer"],[159,33,195,31],[159,34,195,32,"state"],[159,39,195,31],[159,40,195,14],[160,0,196,13],[161,0,197,11],[161,13,193,10],[161,19,197,17],[162,0,198,12],[162,18,198,16,"isDrawerOpen"],[162,30,198,28],[162,31,198,29,"state"],[162,36,198,28],[162,37,198,12],[162,39,198,37],[163,0,199,14],[163,23,199,21,"closeDrawer"],[163,34,199,32],[163,35,199,33,"state"],[163,40,199,32],[163,41,199,14],[164,0,200,13],[165,0,201,11],[167,0,203,10],[167,19,203,17,"router"],[167,25,203,23],[167,26,203,24,"getStateForAction"],[167,43,203,17],[167,44,203,42,"state"],[167,49,203,17],[167,51,203,49,"action"],[167,57,203,17],[167,59,203,57,"options"],[167,66,203,17],[167,67,203,10],[169,0,205,8],[170,0,206,10],[170,19,206,17,"router"],[170,25,206,23],[170,26,206,24,"getStateForAction"],[170,43,206,17],[170,44,206,42,"state"],[170,49,206,17],[170,51,206,49,"action"],[170,57,206,17],[170,59,206,57,"options"],[170,66,206,17],[170,67,206,10],[171,0,178,6],[172,0,208,5],[172,7,118,2],[173,0,210,4,"actionCreators"],[173,6,210,4,"actionCreators"],[173,20,210,18],[173,22,210,20,"DrawerActions"],[174,0,118,2],[175,0,212,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC8D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCI,4BD,EJ;mBME;CNW;oBOE;kCCS,4BD;CPE;eSE;ICiB;KDiB;IEE;KFuB;IGE;KHQ;IIE;KJ+B;CTI"}},"type":"js/module"}]}