{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"../Utilities/Platform","data":{"isAsync":false,"locs":[]}},{"name":"../Utilities/RCTLog","data":{"isAsync":false,"locs":[]}},{"name":"./Data/LogBoxData","data":{"isAsync":false,"locs":[]}},{"name":"./Data/parseLogBoxLog","data":{"isAsync":false,"locs":[]}},{"name":"../NativeModules/specs/NativeLogBox","data":{"isAsync":false,"locs":[{"start":{"line":56,"column":6},"end":{"line":56,"column":52}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../Utilities/Platform\"));\n\n  var _RCTLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Utilities/RCTLog\"));\n\n  var LogBoxData = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"./Data/LogBoxData\"));\n\n  var _parseLogBoxLog3 = _$$_REQUIRE(_dependencyMap[4], \"./Data/parseLogBoxLog\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var LogBox;\n\n  if (__DEV__) {\n    var _console = console,\n        error = _console.error,\n        warn = _console.warn;\n    var errorImpl = error.bind(console);\n    var warnImpl = warn.bind(console);\n\n    console.error = function () {\n      errorImpl.apply(void 0, arguments);\n    };\n\n    console.warn = function () {\n      warnImpl.apply(void 0, arguments);\n    };\n\n    LogBox = {\n      ignoreLogs: function ignoreLogs(patterns) {\n        LogBoxData.addIgnorePatterns(patterns);\n      },\n      ignoreAllLogs: function ignoreAllLogs(value) {\n        LogBoxData.setDisabled(value == null ? true : value);\n      },\n      uninstall: function uninstall() {\n        errorImpl = error;\n        warnImpl = warn;\n        delete console.disableLogBox;\n      },\n      install: function install() {\n        _$$_REQUIRE(_dependencyMap[5], \"../NativeModules/specs/NativeLogBox\");\n\n        errorImpl = function errorImpl() {\n          registerError.apply(void 0, arguments);\n        };\n\n        warnImpl = function warnImpl() {\n          registerWarning.apply(void 0, arguments);\n        };\n\n        if (console.disableYellowBox === true) {\n          LogBoxData.setDisabled(true);\n          console.warn('console.disableYellowBox has been deprecated and will be removed in a future release. Please use LogBox.ignoreAllLogs(value) instead.');\n        }\n\n        Object.defineProperty(console, 'disableYellowBox', {\n          configurable: true,\n          get: function get() {\n            return LogBoxData.isDisabled();\n          },\n          set: function set(value) {\n            LogBoxData.setDisabled(value);\n            console.warn('console.disableYellowBox has been deprecated and will be removed in a future release. Please use LogBox.ignoreAllLogs(value) instead.');\n          }\n        });\n\n        if (_Platform.default.isTesting) {\n          LogBoxData.setDisabled(true);\n        }\n\n        _RCTLog.default.setWarningHandler(function () {\n          registerWarning.apply(void 0, arguments);\n        });\n      }\n    };\n\n    var isRCTLogAdviceWarning = function isRCTLogAdviceWarning() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return typeof args[0] === 'string' && args[0].startsWith('(ADVICE)');\n    };\n\n    var isWarningModuleWarning = function isWarningModuleWarning() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n    };\n\n    var registerWarning = function registerWarning() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      if (LogBoxData.isLogBoxErrorMessage(String(args[0]))) {\n        error.call.apply(error, [console].concat(args));\n        return;\n      }\n\n      try {\n        if (!isRCTLogAdviceWarning.apply(void 0, args)) {\n          var _parseLogBoxLog = (0, _parseLogBoxLog3.parseLogBoxLog)(args),\n              category = _parseLogBoxLog.category,\n              message = _parseLogBoxLog.message,\n              componentStack = _parseLogBoxLog.componentStack;\n\n          if (!LogBoxData.isMessageIgnored(message.content)) {\n            warn.call.apply(warn, [console].concat(args));\n            LogBoxData.addLog({\n              level: 'warn',\n              category: category,\n              message: message,\n              componentStack: componentStack\n            });\n          }\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n\n    var registerError = function registerError() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n        error.call.apply(error, [console].concat(args));\n        return;\n      }\n\n      try {\n        if (!isWarningModuleWarning.apply(void 0, args)) {\n          error.call.apply(error, [console].concat(args));\n          return;\n        }\n\n        var format = args[0].replace('Warning: ', '');\n        var filterResult = LogBoxData.checkWarningFilter(format);\n\n        if (filterResult.suppressCompletely) {\n          return;\n        }\n\n        var level = 'error';\n\n        if (filterResult.suppressDialog_LEGACY === true) {\n          level = 'warn';\n        } else if (filterResult.forceDialogImmediately === true) {\n          level = 'fatal';\n        }\n\n        args[0] = \"Warning: \" + filterResult.finalFormat;\n\n        var _parseLogBoxLog2 = (0, _parseLogBoxLog3.parseLogBoxLog)(args),\n            category = _parseLogBoxLog2.category,\n            message = _parseLogBoxLog2.message,\n            componentStack = _parseLogBoxLog2.componentStack;\n\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          var interpolated = (0, _parseLogBoxLog3.parseInterpolation)(args);\n          error.call(console, interpolated.message.content);\n          LogBoxData.addLog({\n            level: level,\n            category: category,\n            message: message,\n            componentStack: componentStack\n          });\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n  } else {\n    LogBox = {\n      ignoreLogs: function ignoreLogs(patterns) {},\n      ignoreAllLogs: function ignoreAllLogs(value) {},\n      install: function install() {},\n      uninstall: function uninstall() {}\n    };\n  }\n\n  module.exports = LogBox;\n});","lineCount":194,"map":[[2,0,11,0],[6,0,13,0],[8,0,14,0],[10,0,15,0],[12,0,16,0],[18,0,20,0],[18,6,20,4,"LogBox"],[18,12,20,0],[20,0,25,0],[20,6,25,4,"__DEV__"],[20,13,25,0],[20,15,25,13],[21,0,28,2],[21,19,28,24,"console"],[21,26,28,2],[22,0,28,2],[22,8,28,9,"error"],[22,13,28,2],[22,25,28,9,"error"],[22,30,28,2],[23,0,28,2],[23,8,28,16,"warn"],[23,12,28,2],[23,24,28,16,"warn"],[23,28,28,2],[24,0,29,2],[24,8,29,6,"errorImpl"],[24,17,29,15],[24,20,29,18,"error"],[24,25,29,23],[24,26,29,24,"bind"],[24,30,29,18],[24,31,29,29,"console"],[24,38,29,18],[24,39,29,2],[25,0,30,2],[25,8,30,6,"warnImpl"],[25,16,30,14],[25,19,30,17,"warn"],[25,23,30,21],[25,24,30,22,"bind"],[25,28,30,17],[25,29,30,27,"console"],[25,36,30,17],[25,37,30,2],[27,0,32,3,"console"],[27,4,32,3,"console"],[27,11,32,2],[27,12,32,17,"error"],[27,17,32,2],[27,20,32,25],[27,32,32,43],[28,0,33,4,"errorImpl"],[28,6,33,4,"errorImpl"],[28,15,33,13],[28,21,33,4],[29,0,34,3],[29,5,32,2],[31,0,35,3,"console"],[31,4,35,3,"console"],[31,11,35,2],[31,12,35,17,"warn"],[31,16,35,2],[31,19,35,24],[31,31,35,42],[32,0,36,4,"warnImpl"],[32,6,36,4,"warnImpl"],[32,14,36,12],[32,20,36,4],[33,0,37,3],[33,5,35,2],[35,0,39,2,"LogBox"],[35,4,39,2,"LogBox"],[35,10,39,8],[35,13,39,11],[36,0,40,4,"ignoreLogs"],[36,6,40,4,"ignoreLogs"],[36,16,40,14],[36,18,40,16],[36,38,40,17,"patterns"],[36,46,40,16],[36,48,40,67],[37,0,41,6,"LogBoxData"],[37,8,41,6,"LogBoxData"],[37,18,41,16],[37,19,41,17,"addIgnorePatterns"],[37,36,41,6],[37,37,41,35,"patterns"],[37,45,41,6],[38,0,42,5],[38,7,39,11],[39,0,44,4,"ignoreAllLogs"],[39,6,44,4,"ignoreAllLogs"],[39,19,44,17],[39,21,44,19],[39,44,44,20,"value"],[39,49,44,19],[39,51,44,47],[40,0,45,6,"LogBoxData"],[40,8,45,6,"LogBoxData"],[40,18,45,16],[40,19,45,17,"setDisabled"],[40,30,45,6],[40,31,45,29,"value"],[40,36,45,34],[40,40,45,38],[40,44,45,29],[40,47,45,45],[40,51,45,29],[40,54,45,52,"value"],[40,59,45,6],[41,0,46,5],[41,7,39,11],[42,0,48,4,"uninstall"],[42,6,48,4,"uninstall"],[42,15,48,13],[42,17,48,15],[42,38,48,27],[43,0,49,6,"errorImpl"],[43,8,49,6,"errorImpl"],[43,17,49,15],[43,20,49,18,"error"],[43,25,49,6],[44,0,50,6,"warnImpl"],[44,8,50,6,"warnImpl"],[44,16,50,14],[44,19,50,17,"warn"],[44,23,50,6],[45,0,51,6],[45,15,51,14,"console"],[45,22,51,13],[45,23,51,28,"disableLogBox"],[45,36,51,6],[46,0,52,5],[46,7,39,11],[47,0,54,4,"install"],[47,6,54,4,"install"],[47,13,54,11],[47,15,54,13],[47,34,54,25],[48,0,56,6,"require"],[48,8,56,6,"require"],[48,19,56,13],[48,77,56,6],[50,0,58,6,"errorImpl"],[50,8,58,6,"errorImpl"],[50,17,58,15],[50,20,58,18],[50,41,58,36],[51,0,59,8,"registerError"],[51,10,59,8,"registerError"],[51,23,59,21],[51,29,59,8],[52,0,60,7],[52,9,58,6],[54,0,62,6,"warnImpl"],[54,8,62,6,"warnImpl"],[54,16,62,14],[54,19,62,17],[54,39,62,35],[55,0,63,8,"registerWarning"],[55,10,63,8,"registerWarning"],[55,25,63,23],[55,31,63,8],[56,0,64,7],[56,9,62,6],[58,0,66,6],[58,12,66,11,"console"],[58,19,66,10],[58,20,66,25,"disableYellowBox"],[58,36,66,10],[58,41,66,46],[58,45,66,6],[58,47,66,52],[59,0,67,8,"LogBoxData"],[59,10,67,8,"LogBoxData"],[59,20,67,18],[59,21,67,19,"setDisabled"],[59,32,67,8],[59,33,67,31],[59,37,67,8],[60,0,68,8,"console"],[60,10,68,8,"console"],[60,17,68,15],[60,18,68,16,"warn"],[60,22,68,8],[60,23,69,10],[60,158,68,8],[61,0,71,7],[63,0,73,7,"Object"],[63,8,73,7,"Object"],[63,14,73,13],[63,15,73,14,"defineProperty"],[63,29,73,6],[63,30,73,35,"console"],[63,37,73,6],[63,39,73,44],[63,57,73,6],[63,59,73,64],[64,0,74,8,"configurable"],[64,10,74,8,"configurable"],[64,22,74,20],[64,24,74,22],[64,28,73,64],[65,0,75,8,"get"],[65,10,75,8,"get"],[65,13,75,11],[65,15,75,13],[66,0,75,13],[66,19,75,19,"LogBoxData"],[66,29,75,29],[66,30,75,30,"isDisabled"],[66,40,75,19],[66,42,75,13],[67,0,75,13],[67,11,73,64],[68,0,76,8,"set"],[68,10,76,8,"set"],[68,13,76,11],[68,15,76,13],[68,28,76,13,"value"],[68,33,76,18],[68,35,76,22],[69,0,77,10,"LogBoxData"],[69,12,77,10,"LogBoxData"],[69,22,77,20],[69,23,77,21,"setDisabled"],[69,34,77,10],[69,35,77,33,"value"],[69,40,77,10],[70,0,78,10,"console"],[70,12,78,10,"console"],[70,19,78,17],[70,20,78,18,"warn"],[70,24,78,10],[70,25,79,12],[70,160,78,10],[71,0,81,9],[72,0,73,64],[72,9,73,6],[74,0,84,6],[74,12,84,10,"Platform"],[74,30,84,19,"isTesting"],[74,39,84,6],[74,41,84,30],[75,0,85,8,"LogBoxData"],[75,10,85,8,"LogBoxData"],[75,20,85,18],[75,21,85,19,"setDisabled"],[75,32,85,8],[75,33,85,31],[75,37,85,8],[76,0,86,7],[78,0,88,6,"RCTLog"],[78,24,88,13,"setWarningHandler"],[78,41,88,6],[78,42,88,31],[78,54,88,44],[79,0,89,8,"registerWarning"],[79,10,89,8,"registerWarning"],[79,25,89,23],[79,31,89,8],[80,0,90,7],[80,9,88,6],[81,0,91,5],[82,0,39,11],[82,5,39,2],[84,0,94,2],[84,8,94,8,"isRCTLogAdviceWarning"],[84,29,94,29],[84,32,94,32],[84,41,94,8,"isRCTLogAdviceWarning"],[84,62,94,32],[84,65,94,45],[85,0,94,45],[85,40,94,36,"args"],[85,44,94,45],[86,0,94,36,"args"],[86,8,94,36,"args"],[86,12,94,45],[87,0,94,45],[89,0,97,4],[89,13,97,11],[89,20,97,18,"args"],[89,24,97,22],[89,25,97,23],[89,26,97,22],[89,27,97,11],[89,32,97,30],[89,40,97,11],[89,44,97,42,"args"],[89,48,97,46],[89,49,97,47],[89,50,97,46],[89,51,97,42],[89,52,97,50,"startsWith"],[89,62,97,42],[89,63,97,61],[89,73,97,42],[89,74,97,4],[90,0,98,3],[90,5,94,2],[92,0,100,2],[92,8,100,8,"isWarningModuleWarning"],[92,30,100,30],[92,33,100,33],[92,42,100,8,"isWarningModuleWarning"],[92,64,100,33],[92,67,100,46],[93,0,100,46],[93,41,100,37,"args"],[93,45,100,46],[94,0,100,37,"args"],[94,8,100,37,"args"],[94,12,100,46],[95,0,100,46],[97,0,101,4],[97,13,101,11],[97,20,101,18,"args"],[97,24,101,22],[97,25,101,23],[97,26,101,22],[97,27,101,11],[97,32,101,30],[97,40,101,11],[97,44,101,42,"args"],[97,48,101,46],[97,49,101,47],[97,50,101,46],[97,51,101,42],[97,52,101,50,"startsWith"],[97,62,101,42],[97,63,101,61],[97,74,101,42],[97,75,101,4],[98,0,102,3],[98,5,100,2],[100,0,104,2],[100,8,104,8,"registerWarning"],[100,23,104,23],[100,26,104,26],[100,35,104,8,"registerWarning"],[100,50,104,26],[100,53,104,45],[101,0,104,45],[101,41,104,30,"args"],[101,45,104,45],[102,0,104,30,"args"],[102,8,104,30,"args"],[102,12,104,45],[103,0,104,45],[105,0,106,4],[105,10,106,8,"LogBoxData"],[105,20,106,18],[105,21,106,19,"isLogBoxErrorMessage"],[105,41,106,8],[105,42,106,40,"String"],[105,48,106,46],[105,49,106,47,"args"],[105,53,106,51],[105,54,106,52],[105,55,106,51],[105,56,106,46],[105,57,106,8],[105,58,106,4],[105,60,106,58],[106,0,107,6,"error"],[106,8,107,6,"error"],[106,13,107,11],[106,14,107,12,"call"],[106,18,107,6],[106,25,107,6,"error"],[106,30,107,11],[106,33,107,17,"console"],[106,40,107,11],[106,49,107,29,"args"],[106,53,107,11],[106,55,107,6],[107,0,108,6],[108,0,109,5],[110,0,111,4],[110,10,111,8],[111,0,112,6],[111,12,112,10],[111,13,112,11,"isRCTLogAdviceWarning"],[111,34,112,32],[111,40,112,11],[111,49,112,36,"args"],[111,53,112,11],[111,54,112,6],[111,56,112,43],[112,0,113,8],[112,32,113,52],[112,69,113,67,"args"],[112,73,113,52],[112,74,113,8],[113,0,113,8],[113,14,113,15,"category"],[113,22,113,8],[113,41,113,15,"category"],[113,49,113,8],[114,0,113,8],[114,14,113,25,"message"],[114,21,113,8],[114,40,113,25,"message"],[114,47,113,8],[115,0,113,8],[115,14,113,34,"componentStack"],[115,28,113,8],[115,47,113,34,"componentStack"],[115,61,113,8],[117,0,115,8],[117,14,115,12],[117,15,115,13,"LogBoxData"],[117,25,115,23],[117,26,115,24,"isMessageIgnored"],[117,42,115,13],[117,43,115,41,"message"],[117,50,115,48],[117,51,115,49,"content"],[117,58,115,13],[117,59,115,8],[117,61,115,59],[118,0,117,10,"warn"],[118,12,117,10,"warn"],[118,16,117,14],[118,17,117,15,"call"],[118,21,117,10],[118,28,117,10,"warn"],[118,32,117,14],[118,35,117,20,"console"],[118,42,117,14],[118,51,117,32,"args"],[118,55,117,14],[118,57,117,10],[119,0,119,10,"LogBoxData"],[119,12,119,10,"LogBoxData"],[119,22,119,20],[119,23,119,21,"addLog"],[119,29,119,10],[119,30,119,28],[120,0,120,12,"level"],[120,14,120,12,"level"],[120,19,120,17],[120,21,120,19],[120,27,119,28],[121,0,121,12,"category"],[121,14,121,12,"category"],[121,22,121,20],[121,24,121,12,"category"],[121,32,119,28],[122,0,122,12,"message"],[122,14,122,12,"message"],[122,21,122,19],[122,23,122,12,"message"],[122,30,119,28],[123,0,123,12,"componentStack"],[123,14,123,12,"componentStack"],[123,28,123,26],[123,30,123,12,"componentStack"],[124,0,119,28],[124,13,119,10],[125,0,125,9],[126,0,126,7],[127,0,127,5],[127,7,111,4],[127,8,127,6],[127,15,127,13,"err"],[127,18,127,6],[127,20,127,18],[128,0,128,6,"LogBoxData"],[128,8,128,6,"LogBoxData"],[128,18,128,16],[128,19,128,17,"reportLogBoxError"],[128,36,128,6],[128,37,128,35,"err"],[128,40,128,6],[129,0,129,5],[130,0,130,3],[130,5,104,2],[132,0,132,2],[132,8,132,8,"registerError"],[132,21,132,21],[132,24,132,24],[132,33,132,8,"registerError"],[132,46,132,24],[132,49,132,43],[133,0,132,43],[133,41,132,28,"args"],[133,45,132,43],[134,0,132,28,"args"],[134,8,132,28,"args"],[134,12,132,43],[135,0,132,43],[137,0,134,4],[137,10,134,8,"LogBoxData"],[137,20,134,18],[137,21,134,19,"isLogBoxErrorMessage"],[137,41,134,8],[137,42,134,40,"args"],[137,46,134,44],[137,47,134,45],[137,48,134,44],[137,49,134,8],[137,50,134,4],[137,52,134,50],[138,0,135,6,"error"],[138,8,135,6,"error"],[138,13,135,11],[138,14,135,12,"call"],[138,18,135,6],[138,25,135,6,"error"],[138,30,135,11],[138,33,135,17,"console"],[138,40,135,11],[138,49,135,29,"args"],[138,53,135,11],[138,55,135,6],[139,0,136,6],[140,0,137,5],[142,0,139,4],[142,10,139,8],[143,0,140,6],[143,12,140,10],[143,13,140,11,"isWarningModuleWarning"],[143,35,140,33],[143,41,140,11],[143,50,140,37,"args"],[143,54,140,11],[143,55,140,6],[143,57,140,44],[144,0,148,8,"error"],[144,10,148,8,"error"],[144,15,148,13],[144,16,148,14,"call"],[144,20,148,8],[144,27,148,8,"error"],[144,32,148,13],[144,35,148,19,"console"],[144,42,148,13],[144,51,148,31,"args"],[144,55,148,13],[144,57,148,8],[145,0,149,8],[146,0,150,7],[148,0,152,6],[148,12,152,12,"format"],[148,18,152,18],[148,21,152,21,"args"],[148,25,152,25],[148,26,152,26],[148,27,152,25],[148,28,152,21],[148,29,152,29,"replace"],[148,36,152,21],[148,37,152,37],[148,48,152,21],[148,50,152,50],[148,52,152,21],[148,53,152,6],[149,0,153,6],[149,12,153,12,"filterResult"],[149,24,153,24],[149,27,153,27,"LogBoxData"],[149,37,153,37],[149,38,153,38,"checkWarningFilter"],[149,56,153,27],[149,57,153,57,"format"],[149,63,153,27],[149,64,153,6],[151,0,154,6],[151,12,154,10,"filterResult"],[151,24,154,22],[151,25,154,23,"suppressCompletely"],[151,43,154,6],[151,45,154,43],[152,0,155,8],[153,0,156,7],[155,0,158,6],[155,12,158,10,"level"],[155,17,158,15],[155,20,158,18],[155,27,158,6],[157,0,159,6],[157,12,159,10,"filterResult"],[157,24,159,22],[157,25,159,23,"suppressDialog_LEGACY"],[157,46,159,10],[157,51,159,49],[157,55,159,6],[157,57,159,55],[158,0,160,8,"level"],[158,10,160,8,"level"],[158,15,160,13],[158,18,160,16],[158,24,160,8],[159,0,161,7],[159,9,159,6],[159,15,161,13],[159,19,161,17,"filterResult"],[159,31,161,29],[159,32,161,30,"forceDialogImmediately"],[159,54,161,17],[159,59,161,57],[159,63,161,13],[159,65,161,63],[160,0,162,8,"level"],[160,10,162,8,"level"],[160,15,162,13],[160,18,162,16],[160,25,162,8],[161,0,163,7],[163,0,166,6,"args"],[163,8,166,6,"args"],[163,12,166,10],[163,13,166,11],[163,14,166,10],[163,15,166,6],[163,32,166,28,"filterResult"],[163,44,166,40],[163,45,166,41,"finalFormat"],[163,56,166,6],[165,0,167,6],[165,31,167,50],[165,68,167,65,"args"],[165,72,167,50],[165,73,167,6],[166,0,167,6],[166,12,167,13,"category"],[166,20,167,6],[166,40,167,13,"category"],[166,48,167,6],[167,0,167,6],[167,12,167,23,"message"],[167,19,167,6],[167,39,167,23,"message"],[167,46,167,6],[168,0,167,6],[168,12,167,32,"componentStack"],[168,26,167,6],[168,46,167,32,"componentStack"],[168,60,167,6],[170,0,169,6],[170,12,169,10],[170,13,169,11,"LogBoxData"],[170,23,169,21],[170,24,169,22,"isMessageIgnored"],[170,40,169,11],[170,41,169,39,"message"],[170,48,169,46],[170,49,169,47,"content"],[170,56,169,11],[170,57,169,6],[170,59,169,57],[171,0,172,8],[171,14,172,14,"interpolated"],[171,26,172,26],[171,29,172,29],[171,70,172,48,"args"],[171,74,172,29],[171,75,172,8],[172,0,173,8,"error"],[172,10,173,8,"error"],[172,15,173,13],[172,16,173,14,"call"],[172,20,173,8],[172,21,173,19,"console"],[172,28,173,8],[172,30,173,28,"interpolated"],[172,42,173,40],[172,43,173,41,"message"],[172,50,173,28],[172,51,173,49,"content"],[172,58,173,8],[173,0,175,8,"LogBoxData"],[173,10,175,8,"LogBoxData"],[173,20,175,18],[173,21,175,19,"addLog"],[173,27,175,8],[173,28,175,26],[174,0,176,10,"level"],[174,12,176,10,"level"],[174,17,176,15],[174,19,176,10,"level"],[174,24,175,26],[175,0,177,10,"category"],[175,12,177,10,"category"],[175,20,177,18],[175,22,177,10,"category"],[175,30,175,26],[176,0,178,10,"message"],[176,12,178,10,"message"],[176,19,178,17],[176,21,178,10,"message"],[176,28,175,26],[177,0,179,10,"componentStack"],[177,12,179,10,"componentStack"],[177,26,179,24],[177,28,179,10,"componentStack"],[178,0,175,26],[178,11,175,8],[179,0,181,7],[180,0,182,5],[180,7,139,4],[180,8,182,6],[180,15,182,13,"err"],[180,18,182,6],[180,20,182,18],[181,0,183,6,"LogBoxData"],[181,8,183,6,"LogBoxData"],[181,18,183,16],[181,19,183,17,"reportLogBoxError"],[181,36,183,6],[181,37,183,35,"err"],[181,40,183,6],[182,0,184,5],[183,0,185,3],[183,5,132,2],[184,0,186,1],[184,3,25,0],[184,9,186,7],[185,0,187,2,"LogBox"],[185,4,187,2,"LogBox"],[185,10,187,8],[185,13,187,11],[186,0,188,4,"ignoreLogs"],[186,6,188,4,"ignoreLogs"],[186,16,188,14],[186,18,188,16],[186,38,188,17,"patterns"],[186,46,188,16],[186,48,188,67],[186,49,190,5],[186,50,187,11],[187,0,192,4,"ignoreAllLogs"],[187,6,192,4,"ignoreAllLogs"],[187,19,192,17],[187,21,192,19],[187,44,192,20,"value"],[187,49,192,19],[187,51,192,47],[187,52,194,5],[187,53,187,11],[188,0,196,4,"install"],[188,6,196,4,"install"],[188,13,196,11],[188,15,196,13],[188,34,196,25],[188,35,198,5],[188,36,187,11],[189,0,200,4,"uninstall"],[189,6,200,4,"uninstall"],[189,15,200,13],[189,17,200,15],[189,38,200,27],[189,39,202,5],[190,0,187,11],[190,5,187,2],[191,0,204,1],[193,0,206,0,"module"],[193,2,206,0,"module"],[193,8,206,6],[193,9,206,7,"exports"],[193,16,206,0],[193,19,206,18,"LogBox"],[193,25,206,0]],"functionMap":{"names":["<global>","console.error","console.warn","ignoreLogs","ignoreAllLogs","uninstall","install","errorImpl","warnImpl","Object.defineProperty$argument_2.get","Object.defineProperty$argument_2.set","RCTLog.setWarningHandler$argument_0","isRCTLogAdviceWarning","isWarningModuleWarning","registerWarning","registerError"],"mappings":"AAA;yBC+B;GDE;wBEC;GFE;gBGG;KHE;mBIE;KJE;eKE;KLI;aME;kBCI;ODE;iBEE;OFE;aGW,6BH;aIC;SJK;+BKO;OLE;KNC;gCYG;GZI;iCaE;GbE;0BcE;Gd0B;wBeE;GfqD;gBGG;KHE;mBIE;KJE;aME;KNE;eKE;KLE"}},"type":"js/module"}]}