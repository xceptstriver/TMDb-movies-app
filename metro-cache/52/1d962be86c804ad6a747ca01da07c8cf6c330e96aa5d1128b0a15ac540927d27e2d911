{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var ViewabilityHelper = function () {\n    function ViewabilityHelper() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        viewAreaCoveragePercentThreshold: 0\n      };\n\n      _classCallCheck(this, ViewabilityHelper);\n\n      this._hasInteracted = false;\n      this._timers = new Set();\n      this._viewableIndices = [];\n      this._viewableItems = new Map();\n      this._config = config;\n    }\n\n    _createClass(ViewabilityHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this._timers.forEach(clearTimeout);\n      }\n    }, {\n      key: \"computeViewableItems\",\n      value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n        var _this$_config = this._config,\n            itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n            viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n        var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n        invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n        var viewableIndices = [];\n\n        if (itemCount === 0) {\n          return viewableIndices;\n        }\n\n        var firstVisible = -1;\n\n        var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n            first = _ref.first,\n            last = _ref.last;\n\n        if (last >= itemCount) {\n          console.warn('Invalid render range computing viewability ' + JSON.stringify({\n            renderRange: renderRange,\n            itemCount: itemCount\n          }));\n          return [];\n        }\n\n        for (var idx = first; idx <= last; idx++) {\n          var metrics = getFrameMetrics(idx);\n\n          if (!metrics) {\n            continue;\n          }\n\n          var top = metrics.offset - scrollOffset;\n          var bottom = top + metrics.length;\n\n          if (top < viewportHeight && bottom > 0) {\n            firstVisible = idx;\n\n            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n              viewableIndices.push(idx);\n            }\n          } else if (firstVisible >= 0) {\n            break;\n          }\n        }\n\n        return viewableIndices;\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n        var _this = this;\n\n        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n          return;\n        }\n\n        var viewableIndices = [];\n\n        if (itemCount) {\n          viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n        }\n\n        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n          return v === viewableIndices[ii];\n        })) {\n          return;\n        }\n\n        this._viewableIndices = viewableIndices;\n\n        if (this._config.minimumViewTime) {\n          var handle = setTimeout(function () {\n            _this._timers.delete(handle);\n\n            _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n          }, this._config.minimumViewTime);\n\n          this._timers.add(handle);\n        } else {\n          this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }\n      }\n    }, {\n      key: \"resetViewableIndices\",\n      value: function resetViewableIndices() {\n        this._viewableIndices = [];\n      }\n    }, {\n      key: \"recordInteraction\",\n      value: function recordInteraction() {\n        this._hasInteracted = true;\n      }\n    }, {\n      key: \"_onUpdateSync\",\n      value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n        var _this2 = this;\n\n        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n          return _this2._viewableIndices.includes(ii);\n        });\n        var prevItems = this._viewableItems;\n        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n          var viewable = createViewToken(ii, true);\n          return [viewable.key, viewable];\n        }));\n        var changed = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n          var _ref2 = _step.value;\n\n          var _ref3 = _slicedToArray(_ref2, 2);\n\n          var key = _ref3[0];\n          var viewable = _ref3[1];\n\n          if (!prevItems.has(key)) {\n            changed.push(viewable);\n          }\n        }\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n          var _ref4 = _step2.value;\n\n          var _ref5 = _slicedToArray(_ref4, 2);\n\n          var _key = _ref5[0];\n          var _viewable = _ref5[1];\n\n          if (!nextItems.has(_key)) {\n            changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n              isViewable: false\n            }));\n          }\n        }\n\n        if (changed.length > 0) {\n          this._viewableItems = nextItems;\n          onViewableItemsChanged({\n            viewableItems: Array.from(nextItems.values()),\n            changed: changed,\n            viewabilityConfig: this._config\n          });\n        }\n      }\n    }]);\n\n    return ViewabilityHelper;\n  }();\n\n  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n    if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n      return true;\n    } else {\n      var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n      return percent >= viewablePercentThreshold;\n    }\n  }\n\n  function _getPixelsVisible(top, bottom, viewportHeight) {\n    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n    return Math.max(0, visibleHeight);\n  }\n\n  function _isEntirelyVisible(top, bottom, viewportHeight) {\n    return top >= 0 && bottom <= viewportHeight && bottom > top;\n  }\n\n  module.exports = ViewabilityHelper;\n});","lineCount":222,"map":[[2,0,11,0],[22,0,13,0],[22,6,13,6,"invariant"],[22,15,13,15],[22,18,13,18,"require"],[22,29,13,25],[22,61,13,0],[24,6,75,6,"ViewabilityHelper"],[24,23],[25,0,82,2],[25,33,84,4],[26,0,84,4],[26,10,83,4,"config"],[26,16,84,4],[26,87,83,32],[27,0,83,33,"viewAreaCoveragePercentThreshold"],[27,8,83,33,"viewAreaCoveragePercentThreshold"],[27,40,83,65],[27,42,83,67],[28,0,83,32],[28,7,84,4],[30,0,84,4],[32,0,84,4],[32,11,77,2,"_hasInteracted"],[32,25,84,4],[32,28,77,28],[32,33,84,4],[33,0,84,4],[33,11,78,2,"_timers"],[33,18,84,4],[33,21,78,25],[33,25,78,29,"Set"],[33,28,78,25],[33,30,84,4],[34,0,84,4],[34,11,79,2,"_viewableIndices"],[34,27,84,4],[34,30,79,36],[34,32,84,4],[35,0,84,4],[35,11,80,2,"_viewableItems"],[35,25,84,4],[35,28,80,43],[35,32,80,47,"Map"],[35,35,80,43],[35,37,84,4],[36,0,85,4],[36,11,85,9,"_config"],[36,18,85,4],[36,21,85,19,"config"],[36,27,85,4],[37,0,86,3],[41,13,91,2],[41,32,91,12],[42,0,95,4],[42,13,95,9,"_timers"],[42,20,95,4],[42,21,95,17,"forEach"],[42,28,95,4],[42,29,95,25,"clearTimeout"],[42,41,95,4],[43,0,96,3],[46,13,101,2],[46,43,102,4,"itemCount"],[46,52,101,2],[46,54,103,4,"scrollOffset"],[46,66,101,2],[46,68,104,4,"viewportHeight"],[46,82,101,2],[46,84,105,4,"getFrameMetrics"],[46,99,101,2],[46,101,113,4,"renderRange"],[46,112,101,2],[46,114,118,19],[47,0,119,4],[47,28,122,8],[47,33,122,13,"_config"],[47,40,119,4],[48,0,119,4],[48,12,120,6,"itemVisiblePercentThreshold"],[48,39,119,4],[48,56,120,6,"itemVisiblePercentThreshold"],[48,83,119,4],[49,0,119,4],[49,12,121,6,"viewAreaCoveragePercentThreshold"],[49,44,119,4],[49,61,121,6,"viewAreaCoveragePercentThreshold"],[49,93,119,4],[50,0,123,4],[50,12,123,10,"viewAreaMode"],[50,24,123,22],[50,27,123,25,"viewAreaCoveragePercentThreshold"],[50,59,123,57],[50,63,123,61],[50,67,123,4],[51,0,124,4],[51,12,124,10,"viewablePercentThreshold"],[51,36,124,34],[51,39,124,37,"viewAreaMode"],[51,51,124,49],[51,54,125,8,"viewAreaCoveragePercentThreshold"],[51,86,124,49],[51,89,126,8,"itemVisiblePercentThreshold"],[51,116,124,4],[52,0,127,4,"invariant"],[52,8,127,4,"invariant"],[52,17,127,13],[52,18,128,6,"viewablePercentThreshold"],[52,42,128,30],[52,46,128,34],[52,50,128,6],[52,54,129,9,"itemVisiblePercentThreshold"],[52,81,129,36],[52,85,129,40],[52,89,129,8],[52,95,130,11,"viewAreaCoveragePercentThreshold"],[52,127,130,43],[52,131,130,47],[52,135,129,8],[52,136,127,13],[52,138,131,6],[52,227,127,13],[52,228,127,4],[53,0,133,4],[53,12,133,10,"viewableIndices"],[53,27,133,25],[53,30,133,28],[53,32,133,4],[55,0,134,4],[55,12,134,8,"itemCount"],[55,21,134,17],[55,26,134,22],[55,27,134,4],[55,29,134,25],[56,0,135,6],[56,17,135,13,"viewableIndices"],[56,32,135,6],[57,0,136,5],[59,0,137,4],[59,12,137,8,"firstVisible"],[59,24,137,20],[59,27,137,23],[59,28,137,24],[59,29,137,4],[61,0,138,4],[61,19,138,26,"renderRange"],[61,30,138,37],[61,34,138,41],[62,0,138,42,"first"],[62,10,138,42,"first"],[62,15,138,47],[62,17,138,49],[62,18,138,41],[63,0,138,52,"last"],[63,10,138,52,"last"],[63,14,138,56],[63,16,138,58,"itemCount"],[63,25,138,67],[63,28,138,70],[64,0,138,41],[64,9,138,4],[65,0,138,4],[65,12,138,11,"first"],[65,17,138,4],[65,25,138,11,"first"],[65,30,138,4],[66,0,138,4],[66,12,138,18,"last"],[66,16,138,4],[66,24,138,18,"last"],[66,28,138,4],[68,0,139,4],[68,12,139,8,"last"],[68,16,139,12],[68,20,139,16,"itemCount"],[68,29,139,4],[68,31,139,27],[69,0,140,6,"console"],[69,10,140,6,"console"],[69,17,140,13],[69,18,140,14,"warn"],[69,22,140,6],[69,23,141,8],[69,71,142,10,"JSON"],[69,75,142,14],[69,76,142,15,"stringify"],[69,85,142,10],[69,86,142,25],[70,0,142,26,"renderRange"],[70,12,142,26,"renderRange"],[70,23,142,37],[70,25,142,26,"renderRange"],[70,36,142,25],[71,0,142,39,"itemCount"],[71,12,142,39,"itemCount"],[71,21,142,48],[71,23,142,39,"itemCount"],[72,0,142,25],[72,11,142,10],[72,12,140,6],[73,0,144,6],[73,17,144,13],[73,19,144,6],[74,0,145,5],[76,0,146,4],[76,13,146,9],[76,17,146,13,"idx"],[76,20,146,16],[76,23,146,19,"first"],[76,28,146,4],[76,30,146,26,"idx"],[76,33,146,29],[76,37,146,33,"last"],[76,41,146,4],[76,43,146,39,"idx"],[76,46,146,42],[76,48,146,4],[76,50,146,46],[77,0,147,6],[77,14,147,12,"metrics"],[77,21,147,19],[77,24,147,22,"getFrameMetrics"],[77,39,147,37],[77,40,147,38,"idx"],[77,43,147,37],[77,44,147,6],[79,0,148,6],[79,14,148,10],[79,15,148,11,"metrics"],[79,22,148,6],[79,24,148,20],[80,0,149,8],[81,0,150,7],[83,0,151,6],[83,14,151,12,"top"],[83,17,151,15],[83,20,151,18,"metrics"],[83,27,151,25],[83,28,151,26,"offset"],[83,34,151,18],[83,37,151,35,"scrollOffset"],[83,49,151,6],[84,0,152,6],[84,14,152,12,"bottom"],[84,20,152,18],[84,23,152,21,"top"],[84,26,152,24],[84,29,152,27,"metrics"],[84,36,152,34],[84,37,152,35,"length"],[84,43,152,6],[86,0,153,6],[86,14,153,10,"top"],[86,17,153,13],[86,20,153,16,"viewportHeight"],[86,34,153,10],[86,38,153,34,"bottom"],[86,44,153,40],[86,47,153,43],[86,48,153,6],[86,50,153,46],[87,0,154,8,"firstVisible"],[87,12,154,8,"firstVisible"],[87,24,154,20],[87,27,154,23,"idx"],[87,30,154,8],[89,0,155,8],[89,16,156,10,"_isViewable"],[89,27,156,21],[89,28,157,12,"viewAreaMode"],[89,40,156,21],[89,42,158,12,"viewablePercentThreshold"],[89,66,156,21],[89,68,159,12,"top"],[89,71,156,21],[89,73,160,12,"bottom"],[89,79,156,21],[89,81,161,12,"viewportHeight"],[89,95,156,21],[89,97,162,12,"metrics"],[89,104,162,19],[89,105,162,20,"length"],[89,111,156,21],[89,112,155,8],[89,114,164,10],[90,0,165,10,"viewableIndices"],[90,14,165,10,"viewableIndices"],[90,29,165,25],[90,30,165,26,"push"],[90,34,165,10],[90,35,165,31,"idx"],[90,38,165,10],[91,0,166,9],[92,0,167,7],[92,11,153,6],[92,17,167,13],[92,21,167,17,"firstVisible"],[92,33,167,29],[92,37,167,33],[92,38,167,13],[92,40,167,36],[93,0,168,8],[94,0,169,7],[95,0,170,5],[97,0,171,4],[97,15,171,11,"viewableIndices"],[97,30,171,4],[98,0,172,3],[101,13,178,2],[101,31,179,4,"itemCount"],[101,40,178,2],[101,42,180,4,"scrollOffset"],[101,54,178,2],[101,56,181,4,"viewportHeight"],[101,70,178,2],[101,72,182,4,"getFrameMetrics"],[101,87,178,2],[101,89,189,4,"createViewToken"],[101,104,178,2],[101,106,190,4,"onViewableItemsChanged"],[101,128,178,2],[101,130,196,4,"renderRange"],[101,141,178,2],[101,143,201,10],[102,0,201,10],[104,0,202,4],[104,12,203,7],[104,17,203,12,"_config"],[104,24,203,7],[104,25,203,20,"waitForInteraction"],[104,43,203,7],[104,47,203,42],[104,48,203,43],[104,53,203,48,"_hasInteracted"],[104,67,203,6],[104,71,204,6,"itemCount"],[104,80,204,15],[104,85,204,20],[104,86,203,6],[104,90,205,6],[104,91,205,7,"getFrameMetrics"],[104,106,205,22],[104,107,205,23],[104,108,205,22],[104,109,202,4],[104,111,206,6],[105,0,207,6],[106,0,208,5],[108,0,209,4],[108,12,209,8,"viewableIndices"],[108,27,209,23],[108,30,209,26],[108,32,209,4],[110,0,210,4],[110,12,210,8,"itemCount"],[110,21,210,4],[110,23,210,19],[111,0,211,6,"viewableIndices"],[111,10,211,6,"viewableIndices"],[111,25,211,21],[111,28,211,24],[111,33,211,29,"computeViewableItems"],[111,53,211,24],[111,54,212,8,"itemCount"],[111,63,211,24],[111,65,213,8,"scrollOffset"],[111,77,211,24],[111,79,214,8,"viewportHeight"],[111,93,211,24],[111,95,215,8,"getFrameMetrics"],[111,110,211,24],[111,112,216,8,"renderRange"],[111,123,211,24],[111,124,211,6],[112,0,218,5],[114,0,219,4],[114,12,220,6],[114,17,220,11,"_viewableIndices"],[114,33,220,6],[114,34,220,28,"length"],[114,40,220,6],[114,45,220,39,"viewableIndices"],[114,60,220,54],[114,61,220,55,"length"],[114,67,220,6],[114,71,221,6],[114,76,221,11,"_viewableIndices"],[114,92,221,6],[114,93,221,28,"every"],[114,98,221,6],[114,99,221,34],[114,109,221,35,"v"],[114,110,221,34],[114,112,221,38,"ii"],[114,114,221,34],[115,0,221,34],[115,17,221,45,"v"],[115,18,221,46],[115,23,221,51,"viewableIndices"],[115,38,221,66],[115,39,221,67,"ii"],[115,41,221,66],[115,42,221,34],[116,0,221,34],[116,9,221,6],[116,10,219,4],[116,12,222,6],[117,0,225,6],[118,0,226,5],[120,0,227,4],[120,13,227,9,"_viewableIndices"],[120,29,227,4],[120,32,227,28,"viewableIndices"],[120,47,227,4],[122,0,228,4],[122,12,228,8],[122,17,228,13,"_config"],[122,24,228,8],[122,25,228,21,"minimumViewTime"],[122,40,228,4],[122,42,228,38],[123,0,229,6],[123,14,229,12,"handle"],[123,20,229,18],[123,23,229,21,"setTimeout"],[123,33,229,31],[123,34,229,32],[123,46,229,38],[124,0,233,8],[124,12,233,8],[124,17,233,12],[124,18,233,13,"_timers"],[124,25,233,8],[124,26,233,21,"delete"],[124,32,233,8],[124,33,233,28,"handle"],[124,39,233,8],[126,0,234,8],[126,12,234,8],[126,17,234,12],[126,18,234,13,"_onUpdateSync"],[126,31,234,8],[126,32,235,10,"viewableIndices"],[126,47,234,8],[126,49,236,10,"onViewableItemsChanged"],[126,71,234,8],[126,73,237,10,"createViewToken"],[126,88,234,8],[127,0,239,7],[127,11,229,31],[127,13,239,9],[127,18,239,14,"_config"],[127,25,239,9],[127,26,239,22,"minimumViewTime"],[127,41,229,31],[127,42,229,6],[129,0,243,6],[129,15,243,11,"_timers"],[129,22,243,6],[129,23,243,19,"add"],[129,26,243,6],[129,27,243,23,"handle"],[129,33,243,6],[130,0,244,5],[130,9,228,4],[130,15,244,11],[131,0,245,6],[131,15,245,11,"_onUpdateSync"],[131,28,245,6],[131,29,246,8,"viewableIndices"],[131,44,245,6],[131,46,247,8,"onViewableItemsChanged"],[131,68,245,6],[131,70,248,8,"createViewToken"],[131,85,245,6],[132,0,250,5],[133,0,251,3],[136,13,256,2],[136,45,256,25],[137,0,257,4],[137,13,257,9,"_viewableIndices"],[137,29,257,4],[137,32,257,28],[137,34,257,4],[138,0,258,3],[141,13,263,2],[141,42,263,22],[142,0,264,4],[142,13,264,9,"_hasInteracted"],[142,27,264,4],[142,30,264,26],[142,34,264,4],[143,0,265,3],[146,13,267,2],[146,36,268,4,"viewableIndicesToCheck"],[146,58,267,2],[146,60,269,4,"onViewableItemsChanged"],[146,82,267,2],[146,84,270,4,"createViewToken"],[146,99,267,2],[146,101,271,4],[147,0,271,4],[149,0,273,4,"viewableIndicesToCheck"],[149,8,273,4,"viewableIndicesToCheck"],[149,30,273,26],[149,33,273,29,"viewableIndicesToCheck"],[149,55,273,51],[149,56,273,52,"filter"],[149,62,273,29],[149,63,273,59],[149,73,273,59,"ii"],[149,75,273,61],[150,0,273,61],[150,17,274,6],[150,23,274,10],[150,24,274,11,"_viewableIndices"],[150,40,274,6],[150,41,274,28,"includes"],[150,49,274,6],[150,50,274,37,"ii"],[150,52,274,6],[150,53,273,61],[151,0,273,61],[151,9,273,29],[151,10,273,4],[152,0,276,4],[152,12,276,10,"prevItems"],[152,21,276,19],[152,24,276,22],[152,29,276,27,"_viewableItems"],[152,43,276,4],[153,0,277,4],[153,12,277,10,"nextItems"],[153,21,277,19],[153,24,277,22],[153,28,277,26,"Map"],[153,31,277,22],[153,32,278,6,"viewableIndicesToCheck"],[153,54,278,28],[153,55,278,29,"map"],[153,58,278,6],[153,59,278,33],[153,69,278,33,"ii"],[153,71,278,35],[153,73,278,39],[154,0,279,8],[154,14,279,14,"viewable"],[154,22,279,22],[154,25,279,25,"createViewToken"],[154,40,279,40],[154,41,279,41,"ii"],[154,43,279,40],[154,45,279,45],[154,49,279,40],[154,50,279,8],[155,0,280,8],[155,17,280,15],[155,18,280,16,"viewable"],[155,26,280,24],[155,27,280,25,"key"],[155,30,280,15],[155,32,280,30,"viewable"],[155,40,280,15],[155,41,280,8],[156,0,281,7],[156,9,278,6],[156,10,277,22],[156,11,277,4],[157,0,284,4],[157,12,284,10,"changed"],[157,19,284,17],[157,22,284,20],[157,24,284,4],[159,0,285,4],[159,61,285,34,"nextItems"],[159,70,285,4],[159,110,285,45],[160,0,285,45],[162,0,285,45],[164,0,285,45],[164,14,285,16,"key"],[164,17,285,45],[165,0,285,45],[165,14,285,21,"viewable"],[165,22,285,45],[167,0,286,6],[167,14,286,10],[167,15,286,11,"prevItems"],[167,24,286,20],[167,25,286,21,"has"],[167,28,286,11],[167,29,286,25,"key"],[167,32,286,11],[167,33,286,6],[167,35,286,31],[168,0,287,8,"changed"],[168,12,287,8,"changed"],[168,19,287,15],[168,20,287,16,"push"],[168,24,287,8],[168,25,287,21,"viewable"],[168,33,287,8],[169,0,288,7],[170,0,289,5],[172,0,290,4],[172,62,290,34,"prevItems"],[172,71,290,4],[172,114,290,45],[173,0,290,45],[175,0,290,45],[177,0,290,45],[177,14,290,16,"key"],[177,18,290,45],[178,0,290,45],[178,14,290,21,"viewable"],[178,23,290,45],[180,0,291,6],[180,14,291,10],[180,15,291,11,"nextItems"],[180,24,291,20],[180,25,291,21,"has"],[180,28,291,11],[180,29,291,25,"key"],[180,33,291,11],[180,34,291,6],[180,36,291,31],[181,0,292,8,"changed"],[181,12,292,8,"changed"],[181,19,292,15],[181,20,292,16,"push"],[181,24,292,8],[181,57,292,25,"viewable"],[181,66,292,8],[182,0,292,35,"isViewable"],[182,14,292,35,"isViewable"],[182,24,292,45],[182,26,292,47],[183,0,292,8],[184,0,293,7],[185,0,294,5],[187,0,295,4],[187,12,295,8,"changed"],[187,19,295,15],[187,20,295,16,"length"],[187,26,295,8],[187,29,295,25],[187,30,295,4],[187,32,295,28],[188,0,296,6],[188,15,296,11,"_viewableItems"],[188,29,296,6],[188,32,296,28,"nextItems"],[188,41,296,6],[189,0,297,6,"onViewableItemsChanged"],[189,10,297,6,"onViewableItemsChanged"],[189,32,297,28],[189,33,297,29],[190,0,298,8,"viewableItems"],[190,12,298,8,"viewableItems"],[190,25,298,21],[190,27,298,23,"Array"],[190,32,298,28],[190,33,298,29,"from"],[190,37,298,23],[190,38,298,34,"nextItems"],[190,47,298,43],[190,48,298,44,"values"],[190,54,298,34],[190,56,298,23],[190,57,297,29],[191,0,299,8,"changed"],[191,12,299,8,"changed"],[191,19,299,15],[191,21,299,8,"changed"],[191,28,297,29],[192,0,300,8,"viewabilityConfig"],[192,12,300,8,"viewabilityConfig"],[192,29,300,25],[192,31,300,27],[192,36,300,32,"_config"],[193,0,297,29],[193,11,297,28],[193,12,297,6],[194,0,302,5],[195,0,303,3],[201,0,306,0],[201,11,306,9,"_isViewable"],[201,22,306,0],[201,23,307,2,"viewAreaMode"],[201,35,306,0],[201,37,308,2,"viewablePercentThreshold"],[201,61,306,0],[201,63,309,2,"top"],[201,66,306,0],[201,68,310,2,"bottom"],[201,74,306,0],[201,76,311,2,"viewportHeight"],[201,90,306,0],[201,92,312,2,"itemLength"],[201,102,306,0],[201,104,313,11],[202,0,314,2],[202,8,314,6,"_isEntirelyVisible"],[202,26,314,24],[202,27,314,25,"top"],[202,30,314,24],[202,32,314,30,"bottom"],[202,38,314,24],[202,40,314,38,"viewportHeight"],[202,54,314,24],[202,55,314,2],[202,57,314,55],[203,0,315,4],[203,13,315,11],[203,17,315,4],[204,0,316,3],[204,5,314,2],[204,11,316,9],[205,0,317,4],[205,10,317,10,"pixels"],[205,16,317,16],[205,19,317,19,"_getPixelsVisible"],[205,36,317,36],[205,37,317,37,"top"],[205,40,317,36],[205,42,317,42,"bottom"],[205,48,317,36],[205,50,317,50,"viewportHeight"],[205,64,317,36],[205,65,317,4],[207,0,318,4],[207,10,318,10,"percent"],[207,17,318,17],[207,20,319,6],[207,27,319,13,"viewAreaMode"],[207,39,319,25],[207,42,319,28,"pixels"],[207,48,319,34],[207,51,319,37,"viewportHeight"],[207,65,319,25],[207,68,319,54,"pixels"],[207,74,319,60],[207,77,319,63,"itemLength"],[207,87,319,6],[207,88,318,4],[208,0,320,4],[208,13,320,11,"percent"],[208,20,320,18],[208,24,320,22,"viewablePercentThreshold"],[208,48,320,4],[209,0,321,3],[210,0,322,1],[212,0,324,0],[212,11,324,9,"_getPixelsVisible"],[212,28,324,0],[212,29,325,2,"top"],[212,32,324,0],[212,34,326,2,"bottom"],[212,40,324,0],[212,42,327,2,"viewportHeight"],[212,56,324,0],[212,58,328,10],[213,0,329,2],[213,8,329,8,"visibleHeight"],[213,21,329,21],[213,24,329,24,"Math"],[213,28,329,28],[213,29,329,29,"min"],[213,32,329,24],[213,33,329,33,"bottom"],[213,39,329,24],[213,41,329,41,"viewportHeight"],[213,55,329,24],[213,59,329,59,"Math"],[213,63,329,63],[213,64,329,64,"max"],[213,67,329,59],[213,68,329,68,"top"],[213,71,329,59],[213,73,329,73],[213,74,329,59],[213,75,329,2],[214,0,330,2],[214,11,330,9,"Math"],[214,15,330,13],[214,16,330,14,"max"],[214,19,330,9],[214,20,330,18],[214,21,330,9],[214,23,330,21,"visibleHeight"],[214,36,330,9],[214,37,330,2],[215,0,331,1],[217,0,333,0],[217,11,333,9,"_isEntirelyVisible"],[217,29,333,0],[217,30,334,2,"top"],[217,33,333,0],[217,35,335,2,"bottom"],[217,41,333,0],[217,43,336,2,"viewportHeight"],[217,57,333,0],[217,59,337,11],[218,0,338,2],[218,11,338,9,"top"],[218,14,338,12],[218,18,338,16],[218,19,338,9],[218,23,338,21,"bottom"],[218,29,338,27],[218,33,338,31,"viewportHeight"],[218,47,338,9],[218,51,338,49,"bottom"],[218,57,338,55],[218,60,338,58,"top"],[218,63,338,2],[219,0,339,1],[221,0,341,0,"module"],[221,2,341,0,"module"],[221,8,341,6],[221,9,341,7,"exports"],[221,16,341,0],[221,19,341,17,"ViewabilityHelper"],[221,36,341,0]],"functionMap":{"names":["<global>","ViewabilityHelper","constructor","dispose","computeViewableItems","onUpdate","_viewableIndices.every$argument_0","setTimeout$argument_0","resetViewableIndices","recordInteraction","_onUpdateSync","viewableIndicesToCheck.filter$argument_0","viewableIndicesToCheck.map$argument_0","_isViewable","_getPixelsVisible","_isEntirelyVisible"],"mappings":"AAA;AC0E;ECO;GDI;EEK;GFK;EGK;GHuE;EIM;kCC2C,oCD;gCEQ;OFU;GJY;EOK;GPE;EQK;GRE;ESE;2DCM;wCDC;iCEI;OFG;GTsB;CDC;AaE;CbgB;AcE;CdO;AeE;CfM"}},"type":"js/module"}]}