{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"./createHandler","data":{"isAsync":false,"locs":[]}},{"name":"../PlatformConstants","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RotationGestureHandler = exports.PinchGestureHandler = exports.PanGestureHandler = exports.LongPressGestureHandler = exports.ForceTouchGestureHandler = exports.FlingGestureHandler = exports.TapGestureHandler = exports.baseProps = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _createHandler = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./createHandler\"));\n\n  var _PlatformConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../PlatformConstants\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var baseProps = ['id', 'enabled', 'minPointers', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'onGestureEvent', 'onHandlerStateChange'];\n  exports.baseProps = baseProps;\n  var TapGestureHandler = (0, _createHandler.default)({\n    name: 'TapGestureHandler',\n    allowedProps: [].concat(baseProps, ['maxDurationMs', 'maxDelayMs', 'numberOfTaps', 'maxDeltaX', 'maxDeltaY', 'maxDist', 'minPointers']),\n    config: {}\n  });\n  exports.TapGestureHandler = TapGestureHandler;\n  var FlingGestureHandler = (0, _createHandler.default)({\n    name: 'FlingGestureHandler',\n    allowedProps: [].concat(baseProps, ['numberOfPointers', 'direction']),\n    config: {}\n  });\n  exports.FlingGestureHandler = FlingGestureHandler;\n\n  var ForceTouchFallback = function (_React$Component) {\n    (0, _inherits2.default)(ForceTouchFallback, _React$Component);\n\n    var _super = _createSuper(ForceTouchFallback);\n\n    function ForceTouchFallback() {\n      (0, _classCallCheck2.default)(this, ForceTouchFallback);\n      return _super.apply(this, arguments);\n    }\n\n    (0, _createClass2.default)(ForceTouchFallback, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return this.props.children;\n      }\n    }]);\n    return ForceTouchFallback;\n  }(React.Component);\n\n  ForceTouchFallback.forceTouchAvailable = false;\n  var ForceTouchGestureHandler = _PlatformConstants.default != null && _PlatformConstants.default.forceTouchAvailable ? (0, _createHandler.default)({\n    name: 'ForceTouchGestureHandler',\n    allowedProps: [].concat(baseProps, ['minForce', 'maxForce', 'feedbackOnActivation']),\n    config: {}\n  }) : ForceTouchFallback;\n  exports.ForceTouchGestureHandler = ForceTouchGestureHandler;\n  ForceTouchGestureHandler.forceTouchAvailable = (_PlatformConstants.default == null ? void 0 : _PlatformConstants.default.forceTouchAvailable) || false;\n  var LongPressGestureHandler = (0, _createHandler.default)({\n    name: 'LongPressGestureHandler',\n    allowedProps: [].concat(baseProps, ['minDurationMs', 'maxDist']),\n    config: {}\n  });\n  exports.LongPressGestureHandler = LongPressGestureHandler;\n\n  function validatePanGestureHandlerProps(props) {\n    if (props.minDeltaX && props.activeOffsetX) {\n      throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n    }\n\n    if (props.maxDeltaX && props.failOffsetX) {\n      throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n    }\n\n    if (props.minDeltaY && props.activeOffsetY) {\n      throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n    }\n\n    if (props.maxDeltaY && props.failOffsetY) {\n      throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n    }\n\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n    }\n\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n    }\n\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n    }\n\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n    }\n  }\n\n  function transformPanGestureHandlerProps(props) {\n    var res = _objectSpread({}, props);\n\n    if (props.minDeltaX !== undefined) {\n      delete res.minDeltaX;\n      res.activeOffsetXStart = -props.minDeltaX;\n      res.activeOffsetXEnd = props.minDeltaX;\n    }\n\n    if (props.maxDeltaX !== undefined) {\n      delete res.maxDeltaX;\n      res.failOffsetXStart = -props.maxDeltaX;\n      res.failOffsetXEnd = props.maxDeltaX;\n    }\n\n    if (props.minOffsetX !== undefined) {\n      delete res.minOffsetX;\n\n      if (props.minOffsetX < 0) {\n        res.activeOffsetXStart = props.minOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.minOffsetX;\n      }\n    }\n\n    if (props.minDeltaY !== undefined) {\n      delete res.minDeltaY;\n      res.activeOffsetYStart = -props.minDeltaY;\n      res.activeOffsetYEnd = props.minDeltaY;\n    }\n\n    if (props.maxDeltaY !== undefined) {\n      delete res.maxDeltaY;\n      res.failOffsetYStart = -props.maxDeltaY;\n      res.failOffsetYEnd = props.maxDeltaY;\n    }\n\n    if (props.minOffsetY !== undefined) {\n      delete res.minOffsetY;\n\n      if (props.minOffsetY < 0) {\n        res.activeOffsetYStart = props.minOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.minOffsetY;\n      }\n    }\n\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n\n    return res;\n  }\n\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n\n    return transformPanGestureHandlerProps(props);\n  }\n\n  var PanGestureHandler = (0, _createHandler.default)({\n    name: 'PanGestureHandler',\n    allowedProps: [].concat(baseProps, ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture']),\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd']\n  });\n  exports.PanGestureHandler = PanGestureHandler;\n  var PinchGestureHandler = (0, _createHandler.default)({\n    name: 'PinchGestureHandler',\n    allowedProps: baseProps,\n    config: {}\n  });\n  exports.PinchGestureHandler = PinchGestureHandler;\n  var RotationGestureHandler = (0, _createHandler.default)({\n    name: 'RotationGestureHandler',\n    allowedProps: baseProps,\n    config: {}\n  });\n  exports.RotationGestureHandler = RotationGestureHandler;\n});","lineCount":257,"map":[[21,0,5,0],[23,0,7,0],[25,0,8,0],[39,0,74,7],[39,6,74,13,"baseProps"],[39,15,74,22],[39,18,74,25],[39,19,75,2],[39,23,74,25],[39,25,76,2],[39,34,74,25],[39,36,77,2],[39,49,74,25],[39,51,78,2],[39,60,74,25],[39,62,79,2],[39,84,74,25],[39,86,80,2],[39,111,74,25],[39,113,81,2],[39,122,74,25],[39,124,82,2],[39,133,74,25],[39,135,83,2],[39,145,74,25],[39,147,84,2],[39,160,74,25],[39,162,85,2],[39,175,74,25],[39,177,86,2],[39,186,74,25],[39,188,87,2],[39,204,74,25],[39,206,88,2],[39,228,74,25],[39,229,74,7],[41,0,111,7],[41,6,111,13,"TapGestureHandler"],[41,23,111,30],[41,26,111,33],[41,54,114,2],[42,0,115,2,"name"],[42,4,115,2,"name"],[42,8,115,6],[42,10,115,8],[42,29,114,2],[43,0,116,2,"allowedProps"],[43,4,116,2,"allowedProps"],[43,16,116,14],[43,28,117,7,"baseProps"],[43,37,116,14],[43,40,118,4],[43,55,116,14],[43,57,119,4],[43,69,116,14],[43,71,120,4],[43,85,116,14],[43,87,121,4],[43,98,116,14],[43,100,122,4],[43,111,116,14],[43,113,123,4],[43,122,116,14],[43,124,124,4],[43,137,116,14],[43,139,114,2],[44,0,126,2,"config"],[44,4,126,2,"config"],[44,10,126,8],[44,12,126,10],[45,0,114,2],[45,3,111,33],[45,4,111,7],[47,0,144,7],[47,6,144,13,"FlingGestureHandler"],[47,25,144,32],[47,28,144,35],[47,56,147,2],[48,0,148,2,"name"],[48,4,148,2,"name"],[48,8,148,6],[48,10,148,8],[48,31,147,2],[49,0,149,2,"allowedProps"],[49,4,149,2,"allowedProps"],[49,16,149,14],[49,28,149,20,"baseProps"],[49,37,149,14],[49,40,149,31],[49,58,149,14],[49,60,149,51],[49,71,149,14],[49,73,147,2],[50,0,150,2,"config"],[50,4,150,2,"config"],[50,10,150,8],[50,12,150,10],[51,0,147,2],[51,3,144,35],[51,4,144,7],[54,6,153,6,"ForceTouchFallback"],[54,24],[66,13,155,2],[66,42,155,22],[67,0,156,4,"console"],[67,8,156,4,"console"],[67,15,156,11],[67,16,156,12,"warn"],[67,20,156,4],[67,21,157,6],[67,243,156,4],[68,0,159,3],[71,13,160,2],[71,31,160,11],[72,0,161,4],[72,15,161,11],[72,20,161,16,"props"],[72,25,161,11],[72,26,161,22,"children"],[72,34,161,4],[73,0,162,3],[76,4,153,33,"React"],[76,9,153,38],[76,10,153,39,"Component"],[76,19],[78,0,153,6,"ForceTouchFallback"],[78,2,153,6,"ForceTouchFallback"],[78,20],[78,21,154,9,"forceTouchAvailable"],[78,40],[78,43,154,31],[78,48],[79,0,184,7],[79,6,184,13,"ForceTouchGestureHandler"],[79,30,184,37],[79,33,184,40,"PlatformConstants"],[79,98,184,59,"forceTouchAvailable"],[79,117,184,40],[79,120,185,4],[79,148,188,6],[80,0,189,6,"name"],[80,4,189,6,"name"],[80,8,189,10],[80,10,189,12],[80,36,188,6],[81,0,190,6,"allowedProps"],[81,4,190,6,"allowedProps"],[81,16,190,18],[81,28,191,11,"baseProps"],[81,37,190,18],[81,40,192,8],[81,50,190,18],[81,52,193,8],[81,62,190,18],[81,64,194,8],[81,86,190,18],[81,88,188,6],[82,0,196,6,"config"],[82,4,196,6,"config"],[82,10,196,12],[82,12,196,14],[83,0,188,6],[83,3,185,4],[83,4,184,40],[83,7,198,4,"ForceTouchFallback"],[83,25,184,7],[85,0,200,1,"ForceTouchGestureHandler"],[85,2,200,1,"ForceTouchGestureHandler"],[85,26,200,0],[85,27,200,55,"forceTouchAvailable"],[85,46,200,0],[85,49,201,2],[85,123,201,21,"forceTouchAvailable"],[85,142,201,2],[85,147,201,44],[85,152,200,0],[86,0,218,7],[86,6,218,13,"LongPressGestureHandler"],[86,29,218,36],[86,32,218,39],[86,60,221,2],[87,0,222,2,"name"],[87,4,222,2,"name"],[87,8,222,6],[87,10,222,8],[87,35,221,2],[88,0,223,2,"allowedProps"],[88,4,223,2,"allowedProps"],[88,16,223,14],[88,28,223,20,"baseProps"],[88,37,223,14],[88,40,223,31],[88,55,223,14],[88,57,223,48],[88,66,223,14],[88,68,221,2],[89,0,224,2,"config"],[89,4,224,2,"config"],[89,10,224,8],[89,12,224,10],[90,0,221,2],[90,3,218,39],[90,4,218,7],[93,0,227,0],[93,11,227,9,"validatePanGestureHandlerProps"],[93,41,227,0],[93,42,227,40,"props"],[93,47,227,0],[93,49,227,71],[94,0,228,2],[94,8,228,6,"props"],[94,13,228,11],[94,14,228,12,"minDeltaX"],[94,23,228,6],[94,27,228,25,"props"],[94,32,228,30],[94,33,228,31,"activeOffsetX"],[94,46,228,2],[94,48,228,46],[95,0,229,4],[95,12,229,10],[95,16,229,14,"Error"],[95,21,229,10],[95,101,229,4],[96,0,232,3],[98,0,233,2],[98,8,233,6,"props"],[98,13,233,11],[98,14,233,12,"maxDeltaX"],[98,23,233,6],[98,27,233,25,"props"],[98,32,233,30],[98,33,233,31,"failOffsetX"],[98,44,233,2],[98,46,233,44],[99,0,234,4],[99,12,234,10],[99,16,234,14,"Error"],[99,21,234,10],[99,101,234,4],[100,0,237,3],[102,0,238,2],[102,8,238,6,"props"],[102,13,238,11],[102,14,238,12,"minDeltaY"],[102,23,238,6],[102,27,238,25,"props"],[102,32,238,30],[102,33,238,31,"activeOffsetY"],[102,46,238,2],[102,48,238,46],[103,0,239,4],[103,12,239,10],[103,16,239,14,"Error"],[103,21,239,10],[103,101,239,4],[104,0,242,3],[106,0,243,2],[106,8,243,6,"props"],[106,13,243,11],[106,14,243,12,"maxDeltaY"],[106,23,243,6],[106,27,243,25,"props"],[106,32,243,30],[106,33,243,31,"failOffsetY"],[106,44,243,2],[106,46,243,44],[107,0,244,4],[107,12,244,10],[107,16,244,14,"Error"],[107,21,244,10],[107,101,244,4],[108,0,247,3],[110,0,248,2],[110,8,249,4,"Array"],[110,13,249,9],[110,14,249,10,"isArray"],[110,21,249,4],[110,22,249,18,"props"],[110,27,249,23],[110,28,249,24,"activeOffsetX"],[110,41,249,4],[110,47,250,5,"props"],[110,52,250,10],[110,53,250,11,"activeOffsetX"],[110,66,250,5],[110,67,250,25],[110,68,250,5],[110,72,250,30],[110,73,250,5],[110,77,250,35,"props"],[110,82,250,40],[110,83,250,41,"activeOffsetX"],[110,96,250,35],[110,97,250,55],[110,98,250,35],[110,102,250,60],[110,103,249,4],[110,104,248,2],[110,106,251,4],[111,0,252,4],[111,12,252,10],[111,16,252,14,"Error"],[111,21,252,10],[111,111,252,4],[112,0,255,3],[114,0,257,2],[114,8,258,4,"Array"],[114,13,258,9],[114,14,258,10,"isArray"],[114,21,258,4],[114,22,258,18,"props"],[114,27,258,23],[114,28,258,24,"activeOffsetY"],[114,41,258,4],[114,47,259,5,"props"],[114,52,259,10],[114,53,259,11,"activeOffsetY"],[114,66,259,5],[114,67,259,25],[114,68,259,5],[114,72,259,30],[114,73,259,5],[114,77,259,35,"props"],[114,82,259,40],[114,83,259,41,"activeOffsetY"],[114,96,259,35],[114,97,259,55],[114,98,259,35],[114,102,259,60],[114,103,258,4],[114,104,257,2],[114,106,260,4],[115,0,261,4],[115,12,261,10],[115,16,261,14,"Error"],[115,21,261,10],[115,111,261,4],[116,0,264,3],[118,0,266,2],[118,8,267,4,"Array"],[118,13,267,9],[118,14,267,10,"isArray"],[118,21,267,4],[118,22,267,18,"props"],[118,27,267,23],[118,28,267,24,"failOffsetX"],[118,39,267,4],[118,45,268,5,"props"],[118,50,268,10],[118,51,268,11,"failOffsetX"],[118,62,268,5],[118,63,268,23],[118,64,268,5],[118,68,268,28],[118,69,268,5],[118,73,268,33,"props"],[118,78,268,38],[118,79,268,39,"failOffsetX"],[118,90,268,33],[118,91,268,51],[118,92,268,33],[118,96,268,56],[118,97,267,4],[118,98,266,2],[118,100,269,4],[119,0,270,4],[119,12,270,10],[119,16,270,14,"Error"],[119,21,270,10],[119,109,270,4],[120,0,273,3],[122,0,275,2],[122,8,276,4,"Array"],[122,13,276,9],[122,14,276,10,"isArray"],[122,21,276,4],[122,22,276,18,"props"],[122,27,276,23],[122,28,276,24,"failOffsetY"],[122,39,276,4],[122,45,277,5,"props"],[122,50,277,10],[122,51,277,11,"failOffsetY"],[122,62,277,5],[122,63,277,23],[122,64,277,5],[122,68,277,28],[122,69,277,5],[122,73,277,33,"props"],[122,78,277,38],[122,79,277,39,"failOffsetY"],[122,90,277,33],[122,91,277,51],[122,92,277,33],[122,96,277,56],[122,97,276,4],[122,98,275,2],[122,100,278,4],[123,0,279,4],[123,12,279,10],[123,16,279,14,"Error"],[123,21,279,10],[123,109,279,4],[124,0,282,3],[125,0,283,1],[127,0,285,0],[127,11,285,9,"transformPanGestureHandlerProps"],[127,42,285,0],[127,43,285,41,"props"],[127,48,285,0],[127,50,285,72],[128,0,298,2],[128,8,298,8,"res"],[128,11,298,43],[128,32,298,51,"props"],[128,37,298,43],[128,38,298,2],[130,0,299,2],[130,8,299,6,"props"],[130,13,299,11],[130,14,299,12,"minDeltaX"],[130,23,299,6],[130,28,299,26,"undefined"],[130,37,299,2],[130,39,299,37],[131,0,300,4],[131,13,300,11,"res"],[131,16,300,14],[131,17,300,15,"minDeltaX"],[131,26,300,4],[132,0,301,4,"res"],[132,6,301,4,"res"],[132,9,301,7],[132,10,301,8,"activeOffsetXStart"],[132,28,301,4],[132,31,301,29],[132,32,301,30,"props"],[132,37,301,35],[132,38,301,36,"minDeltaX"],[132,47,301,4],[133,0,302,4,"res"],[133,6,302,4,"res"],[133,9,302,7],[133,10,302,8,"activeOffsetXEnd"],[133,26,302,4],[133,29,302,27,"props"],[133,34,302,32],[133,35,302,33,"minDeltaX"],[133,44,302,4],[134,0,303,3],[136,0,304,2],[136,8,304,6,"props"],[136,13,304,11],[136,14,304,12,"maxDeltaX"],[136,23,304,6],[136,28,304,26,"undefined"],[136,37,304,2],[136,39,304,37],[137,0,305,4],[137,13,305,11,"res"],[137,16,305,14],[137,17,305,15,"maxDeltaX"],[137,26,305,4],[138,0,306,4,"res"],[138,6,306,4,"res"],[138,9,306,7],[138,10,306,8,"failOffsetXStart"],[138,26,306,4],[138,29,306,27],[138,30,306,28,"props"],[138,35,306,33],[138,36,306,34,"maxDeltaX"],[138,45,306,4],[139,0,307,4,"res"],[139,6,307,4,"res"],[139,9,307,7],[139,10,307,8,"failOffsetXEnd"],[139,24,307,4],[139,27,307,25,"props"],[139,32,307,30],[139,33,307,31,"maxDeltaX"],[139,42,307,4],[140,0,308,3],[142,0,309,2],[142,8,309,6,"props"],[142,13,309,11],[142,14,309,12,"minOffsetX"],[142,24,309,6],[142,29,309,27,"undefined"],[142,38,309,2],[142,40,309,38],[143,0,310,4],[143,13,310,11,"res"],[143,16,310,14],[143,17,310,15,"minOffsetX"],[143,27,310,4],[145,0,311,4],[145,10,311,8,"props"],[145,15,311,13],[145,16,311,14,"minOffsetX"],[145,26,311,8],[145,29,311,27],[145,30,311,4],[145,32,311,30],[146,0,312,6,"res"],[146,8,312,6,"res"],[146,11,312,9],[146,12,312,10,"activeOffsetXStart"],[146,30,312,6],[146,33,312,31,"props"],[146,38,312,36],[146,39,312,37,"minOffsetX"],[146,49,312,6],[147,0,313,5],[147,7,311,4],[147,13,313,11],[148,0,314,6,"res"],[148,8,314,6,"res"],[148,11,314,9],[148,12,314,10,"activeOffsetXEnd"],[148,28,314,6],[148,31,314,29,"props"],[148,36,314,34],[148,37,314,35,"minOffsetX"],[148,47,314,6],[149,0,315,5],[150,0,316,3],[152,0,318,2],[152,8,318,6,"props"],[152,13,318,11],[152,14,318,12,"minDeltaY"],[152,23,318,6],[152,28,318,26,"undefined"],[152,37,318,2],[152,39,318,37],[153,0,319,4],[153,13,319,11,"res"],[153,16,319,14],[153,17,319,15,"minDeltaY"],[153,26,319,4],[154,0,320,4,"res"],[154,6,320,4,"res"],[154,9,320,7],[154,10,320,8,"activeOffsetYStart"],[154,28,320,4],[154,31,320,29],[154,32,320,30,"props"],[154,37,320,35],[154,38,320,36,"minDeltaY"],[154,47,320,4],[155,0,321,4,"res"],[155,6,321,4,"res"],[155,9,321,7],[155,10,321,8,"activeOffsetYEnd"],[155,26,321,4],[155,29,321,27,"props"],[155,34,321,32],[155,35,321,33,"minDeltaY"],[155,44,321,4],[156,0,322,3],[158,0,323,2],[158,8,323,6,"props"],[158,13,323,11],[158,14,323,12,"maxDeltaY"],[158,23,323,6],[158,28,323,26,"undefined"],[158,37,323,2],[158,39,323,37],[159,0,324,4],[159,13,324,11,"res"],[159,16,324,14],[159,17,324,15,"maxDeltaY"],[159,26,324,4],[160,0,325,4,"res"],[160,6,325,4,"res"],[160,9,325,7],[160,10,325,8,"failOffsetYStart"],[160,26,325,4],[160,29,325,27],[160,30,325,28,"props"],[160,35,325,33],[160,36,325,34,"maxDeltaY"],[160,45,325,4],[161,0,326,4,"res"],[161,6,326,4,"res"],[161,9,326,7],[161,10,326,8,"failOffsetYEnd"],[161,24,326,4],[161,27,326,25,"props"],[161,32,326,30],[161,33,326,31,"maxDeltaY"],[161,42,326,4],[162,0,327,3],[164,0,329,2],[164,8,329,6,"props"],[164,13,329,11],[164,14,329,12,"minOffsetY"],[164,24,329,6],[164,29,329,27,"undefined"],[164,38,329,2],[164,40,329,38],[165,0,330,4],[165,13,330,11,"res"],[165,16,330,14],[165,17,330,15,"minOffsetY"],[165,27,330,4],[167,0,331,4],[167,10,331,8,"props"],[167,15,331,13],[167,16,331,14,"minOffsetY"],[167,26,331,8],[167,29,331,27],[167,30,331,4],[167,32,331,30],[168,0,332,6,"res"],[168,8,332,6,"res"],[168,11,332,9],[168,12,332,10,"activeOffsetYStart"],[168,30,332,6],[168,33,332,31,"props"],[168,38,332,36],[168,39,332,37,"minOffsetY"],[168,49,332,6],[169,0,333,5],[169,7,331,4],[169,13,333,11],[170,0,334,6,"res"],[170,8,334,6,"res"],[170,11,334,9],[170,12,334,10,"activeOffsetYEnd"],[170,28,334,6],[170,31,334,29,"props"],[170,36,334,34],[170,37,334,35,"minOffsetY"],[170,47,334,6],[171,0,335,5],[172,0,336,3],[174,0,338,2],[174,8,338,6,"props"],[174,13,338,11],[174,14,338,12,"activeOffsetX"],[174,27,338,6],[174,32,338,30,"undefined"],[174,41,338,2],[174,43,338,41],[175,0,339,4],[175,13,339,11,"res"],[175,16,339,14],[175,17,339,15,"activeOffsetX"],[175,30,339,4],[177,0,340,4],[177,10,340,8,"Array"],[177,15,340,13],[177,16,340,14,"isArray"],[177,23,340,8],[177,24,340,22,"props"],[177,29,340,27],[177,30,340,28,"activeOffsetX"],[177,43,340,8],[177,44,340,4],[177,46,340,44],[178,0,341,6,"res"],[178,8,341,6,"res"],[178,11,341,9],[178,12,341,10,"activeOffsetXStart"],[178,30,341,6],[178,33,341,31,"props"],[178,38,341,36],[178,39,341,37,"activeOffsetX"],[178,52,341,31],[178,53,341,51],[178,54,341,31],[178,55,341,6],[179,0,342,6,"res"],[179,8,342,6,"res"],[179,11,342,9],[179,12,342,10,"activeOffsetXEnd"],[179,28,342,6],[179,31,342,29,"props"],[179,36,342,34],[179,37,342,35,"activeOffsetX"],[179,50,342,29],[179,51,342,49],[179,52,342,29],[179,53,342,6],[180,0,343,5],[180,7,340,4],[180,13,343,11],[180,17,343,15,"props"],[180,22,343,20],[180,23,343,21,"activeOffsetX"],[180,36,343,15],[180,39,343,37],[180,40,343,11],[180,42,343,40],[181,0,344,6,"res"],[181,8,344,6,"res"],[181,11,344,9],[181,12,344,10,"activeOffsetXStart"],[181,30,344,6],[181,33,344,31,"props"],[181,38,344,36],[181,39,344,37,"activeOffsetX"],[181,52,344,6],[182,0,345,5],[182,7,343,11],[182,13,345,11],[183,0,346,6,"res"],[183,8,346,6,"res"],[183,11,346,9],[183,12,346,10,"activeOffsetXEnd"],[183,28,346,6],[183,31,346,29,"props"],[183,36,346,34],[183,37,346,35,"activeOffsetX"],[183,50,346,6],[184,0,347,5],[185,0,348,3],[187,0,350,2],[187,8,350,6,"props"],[187,13,350,11],[187,14,350,12,"activeOffsetY"],[187,27,350,6],[187,32,350,30,"undefined"],[187,41,350,2],[187,43,350,41],[188,0,351,4],[188,13,351,11,"res"],[188,16,351,14],[188,17,351,15,"activeOffsetY"],[188,30,351,4],[190,0,352,4],[190,10,352,8,"Array"],[190,15,352,13],[190,16,352,14,"isArray"],[190,23,352,8],[190,24,352,22,"props"],[190,29,352,27],[190,30,352,28,"activeOffsetY"],[190,43,352,8],[190,44,352,4],[190,46,352,44],[191,0,353,6,"res"],[191,8,353,6,"res"],[191,11,353,9],[191,12,353,10,"activeOffsetYStart"],[191,30,353,6],[191,33,353,31,"props"],[191,38,353,36],[191,39,353,37,"activeOffsetY"],[191,52,353,31],[191,53,353,51],[191,54,353,31],[191,55,353,6],[192,0,354,6,"res"],[192,8,354,6,"res"],[192,11,354,9],[192,12,354,10,"activeOffsetYEnd"],[192,28,354,6],[192,31,354,29,"props"],[192,36,354,34],[192,37,354,35,"activeOffsetY"],[192,50,354,29],[192,51,354,49],[192,52,354,29],[192,53,354,6],[193,0,355,5],[193,7,352,4],[193,13,355,11],[193,17,355,15,"props"],[193,22,355,20],[193,23,355,21,"activeOffsetY"],[193,36,355,15],[193,39,355,37],[193,40,355,11],[193,42,355,40],[194,0,356,6,"res"],[194,8,356,6,"res"],[194,11,356,9],[194,12,356,10,"activeOffsetYStart"],[194,30,356,6],[194,33,356,31,"props"],[194,38,356,36],[194,39,356,37,"activeOffsetY"],[194,52,356,6],[195,0,357,5],[195,7,355,11],[195,13,357,11],[196,0,358,6,"res"],[196,8,358,6,"res"],[196,11,358,9],[196,12,358,10,"activeOffsetYEnd"],[196,28,358,6],[196,31,358,29,"props"],[196,36,358,34],[196,37,358,35,"activeOffsetY"],[196,50,358,6],[197,0,359,5],[198,0,360,3],[200,0,362,2],[200,8,362,6,"props"],[200,13,362,11],[200,14,362,12,"failOffsetX"],[200,25,362,6],[200,30,362,28,"undefined"],[200,39,362,2],[200,41,362,39],[201,0,363,4],[201,13,363,11,"res"],[201,16,363,14],[201,17,363,15,"failOffsetX"],[201,28,363,4],[203,0,364,4],[203,10,364,8,"Array"],[203,15,364,13],[203,16,364,14,"isArray"],[203,23,364,8],[203,24,364,22,"props"],[203,29,364,27],[203,30,364,28,"failOffsetX"],[203,41,364,8],[203,42,364,4],[203,44,364,42],[204,0,365,6,"res"],[204,8,365,6,"res"],[204,11,365,9],[204,12,365,10,"failOffsetXStart"],[204,28,365,6],[204,31,365,29,"props"],[204,36,365,34],[204,37,365,35,"failOffsetX"],[204,48,365,29],[204,49,365,47],[204,50,365,29],[204,51,365,6],[205,0,366,6,"res"],[205,8,366,6,"res"],[205,11,366,9],[205,12,366,10,"failOffsetXEnd"],[205,26,366,6],[205,29,366,27,"props"],[205,34,366,32],[205,35,366,33,"failOffsetX"],[205,46,366,27],[205,47,366,45],[205,48,366,27],[205,49,366,6],[206,0,367,5],[206,7,364,4],[206,13,367,11],[206,17,367,15,"props"],[206,22,367,20],[206,23,367,21,"failOffsetX"],[206,34,367,15],[206,37,367,35],[206,38,367,11],[206,40,367,38],[207,0,368,6,"res"],[207,8,368,6,"res"],[207,11,368,9],[207,12,368,10,"failOffsetXStart"],[207,28,368,6],[207,31,368,29,"props"],[207,36,368,34],[207,37,368,35,"failOffsetX"],[207,48,368,6],[208,0,369,5],[208,7,367,11],[208,13,369,11],[209,0,370,6,"res"],[209,8,370,6,"res"],[209,11,370,9],[209,12,370,10,"failOffsetXEnd"],[209,26,370,6],[209,29,370,27,"props"],[209,34,370,32],[209,35,370,33,"failOffsetX"],[209,46,370,6],[210,0,371,5],[211,0,372,3],[213,0,374,2],[213,8,374,6,"props"],[213,13,374,11],[213,14,374,12,"failOffsetY"],[213,25,374,6],[213,30,374,28,"undefined"],[213,39,374,2],[213,41,374,39],[214,0,375,4],[214,13,375,11,"res"],[214,16,375,14],[214,17,375,15,"failOffsetY"],[214,28,375,4],[216,0,376,4],[216,10,376,8,"Array"],[216,15,376,13],[216,16,376,14,"isArray"],[216,23,376,8],[216,24,376,22,"props"],[216,29,376,27],[216,30,376,28,"failOffsetY"],[216,41,376,8],[216,42,376,4],[216,44,376,42],[217,0,377,6,"res"],[217,8,377,6,"res"],[217,11,377,9],[217,12,377,10,"failOffsetYStart"],[217,28,377,6],[217,31,377,29,"props"],[217,36,377,34],[217,37,377,35,"failOffsetY"],[217,48,377,29],[217,49,377,47],[217,50,377,29],[217,51,377,6],[218,0,378,6,"res"],[218,8,378,6,"res"],[218,11,378,9],[218,12,378,10,"failOffsetYEnd"],[218,26,378,6],[218,29,378,27,"props"],[218,34,378,32],[218,35,378,33,"failOffsetY"],[218,46,378,27],[218,47,378,45],[218,48,378,27],[218,49,378,6],[219,0,379,5],[219,7,376,4],[219,13,379,11],[219,17,379,15,"props"],[219,22,379,20],[219,23,379,21,"failOffsetY"],[219,34,379,15],[219,37,379,35],[219,38,379,11],[219,40,379,38],[220,0,380,6,"res"],[220,8,380,6,"res"],[220,11,380,9],[220,12,380,10,"failOffsetYStart"],[220,28,380,6],[220,31,380,29,"props"],[220,36,380,34],[220,37,380,35,"failOffsetY"],[220,48,380,6],[221,0,381,5],[221,7,379,11],[221,13,381,11],[222,0,382,6,"res"],[222,8,382,6,"res"],[222,11,382,9],[222,12,382,10,"failOffsetYEnd"],[222,26,382,6],[222,29,382,27,"props"],[222,34,382,32],[222,35,382,33,"failOffsetY"],[222,46,382,6],[223,0,383,5],[224,0,384,3],[226,0,386,2],[226,11,386,9,"res"],[226,14,386,2],[227,0,387,1],[229,0,389,0],[229,11,389,9,"managePanProps"],[229,25,389,0],[229,26,389,24,"props"],[229,31,389,0],[229,33,389,55],[230,0,390,2],[230,8,390,6,"__DEV__"],[230,15,390,2],[230,17,390,15],[231,0,391,4,"validatePanGestureHandlerProps"],[231,6,391,4,"validatePanGestureHandlerProps"],[231,36,391,34],[231,37,391,35,"props"],[231,42,391,34],[231,43,391,4],[232,0,392,3],[234,0,393,2],[234,11,393,9,"transformPanGestureHandlerProps"],[234,42,393,40],[234,43,393,41,"props"],[234,48,393,40],[234,49,393,2],[235,0,394,1],[237,0,437,7],[237,6,437,13,"PanGestureHandler"],[237,23,437,30],[237,26,437,33],[237,54,440,2],[238,0,441,2,"name"],[238,4,441,2,"name"],[238,8,441,6],[238,10,441,8],[238,29,440,2],[239,0,442,2,"allowedProps"],[239,4,442,2,"allowedProps"],[239,16,442,14],[239,28,443,7,"baseProps"],[239,37,442,14],[239,40,444,4],[239,55,442,14],[239,57,445,4],[239,72,442,14],[239,74,446,4],[239,87,442,14],[239,89,447,4],[239,102,442,14],[239,104,448,4],[239,113,442,14],[239,115,449,4],[239,128,442,14],[239,130,450,4],[239,144,442,14],[239,146,451,4],[239,160,442,14],[239,162,452,4],[239,175,442,14],[239,177,453,4],[239,190,442,14],[239,192,454,4],[239,204,442,14],[239,206,455,4],[239,238,442,14],[239,240,440,2],[240,0,457,2,"config"],[240,4,457,2,"config"],[240,10,457,8],[240,12,457,10],[240,14,440,2],[241,0,458,2,"transformProps"],[241,4,458,2,"transformProps"],[241,18,458,16],[241,20,458,18,"managePanProps"],[241,34,440,2],[242,0,459,2,"customNativeProps"],[242,4,459,2,"customNativeProps"],[242,21,459,19],[242,23,459,21],[242,24,460,4],[242,44,459,21],[242,46,461,4],[242,64,459,21],[242,66,462,4],[242,86,459,21],[242,88,463,4],[242,106,459,21],[242,108,464,4],[242,126,459,21],[242,128,465,4],[242,144,459,21],[242,146,466,4],[242,164,459,21],[242,166,467,4],[242,182,459,21],[243,0,440,2],[243,3,437,33],[243,4,437,7],[245,0,483,7],[245,6,483,13,"PinchGestureHandler"],[245,25,483,32],[245,28,483,35],[245,56,486,2],[246,0,487,2,"name"],[246,4,487,2,"name"],[246,8,487,6],[246,10,487,8],[246,31,486,2],[247,0,488,2,"allowedProps"],[247,4,488,2,"allowedProps"],[247,16,488,14],[247,18,488,16,"baseProps"],[247,27,486,2],[248,0,489,2,"config"],[248,4,489,2,"config"],[248,10,489,8],[248,12,489,10],[249,0,486,2],[249,3,483,35],[249,4,483,7],[251,0,504,7],[251,6,504,13,"RotationGestureHandler"],[251,28,504,35],[251,31,504,38],[251,59,507,2],[252,0,508,2,"name"],[252,4,508,2,"name"],[252,8,508,6],[252,10,508,8],[252,34,507,2],[253,0,509,2,"allowedProps"],[253,4,509,2,"allowedProps"],[253,16,509,14],[253,18,509,16,"baseProps"],[253,27,507,2],[254,0,510,2,"config"],[254,4,510,2,"config"],[254,10,510,8],[254,12,510,10],[255,0,507,2],[255,3,504,38],[255,4,504,7]],"functionMap":{"names":["<global>","ForceTouchFallback","ForceTouchFallback#componentDidMount","ForceTouchFallback#render","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;ACwJ;ECE;GDI;EEC;GFE;CDC;AIgE;CJwD;AKE;CLsG;AME;CNK"}},"type":"js/module"}]}