{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"fbjs/lib/performanceNow","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":23},"end":{"line":13,"column":57}}]}},{"name":"fbjs/lib/warning","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":16},"end":{"line":14,"column":43}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var performanceNow = _$$_REQUIRE(_dependencyMap[3], \"fbjs/lib/performanceNow\");\n\n  var warning = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/warning\");\n\n  var Info = function Info() {\n    _classCallCheck(this, Info);\n\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  };\n\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n\n  var _sampleRate = DEBUG ? 1 : null;\n\n  var FillRateHelper = function () {\n    function FillRateHelper(getFrameMetrics) {\n      _classCallCheck(this, FillRateHelper);\n\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n\n      this._resetData();\n    }\n\n    _createClass(FillRateHelper, [{\n      key: \"activate\",\n      value: function activate() {\n        if (this._enabled && this._samplesStartTime == null) {\n          DEBUG && console.debug('FillRateHelper: activate');\n          this._samplesStartTime = performanceNow();\n        }\n      }\n    }, {\n      key: \"deactivateAndFlush\",\n      value: function deactivateAndFlush() {\n        if (!this._enabled) {\n          return;\n        }\n\n        var start = this._samplesStartTime;\n\n        if (start == null) {\n          DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n          return;\n        }\n\n        if (this._info.sample_count < _minSampleCount) {\n          this._resetData();\n\n          return;\n        }\n\n        var total_time_spent = performanceNow() - start;\n\n        var info = _objectSpread(_objectSpread({}, this._info), {}, {\n          total_time_spent: total_time_spent\n        });\n\n        if (DEBUG) {\n          var derived = {\n            avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n            avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n            avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n            any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n            any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n            mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n            mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n          };\n\n          for (var key in derived) {\n            derived[key] = Math.round(1000 * derived[key]) / 1000;\n          }\n\n          console.debug('FillRateHelper deactivateAndFlush: ', {\n            derived: derived,\n            info: info\n          });\n        }\n\n        _listeners.forEach(function (listener) {\n          return listener(info);\n        });\n\n        this._resetData();\n      }\n    }, {\n      key: \"computeBlankness\",\n      value: function computeBlankness(props, state, scrollMetrics) {\n        if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n          return 0;\n        }\n\n        var dOffset = scrollMetrics.dOffset,\n            offset = scrollMetrics.offset,\n            velocity = scrollMetrics.velocity,\n            visibleLength = scrollMetrics.visibleLength;\n        this._info.sample_count++;\n        this._info.pixels_sampled += Math.round(visibleLength);\n        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n        var now = performanceNow();\n\n        if (this._anyBlankStartTime != null) {\n          this._info.any_blank_ms += now - this._anyBlankStartTime;\n        }\n\n        this._anyBlankStartTime = null;\n\n        if (this._mostlyBlankStartTime != null) {\n          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n        }\n\n        this._mostlyBlankStartTime = null;\n        var blankTop = 0;\n        var first = state.first;\n\n        var firstFrame = this._getFrameMetrics(first);\n\n        while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n          firstFrame = this._getFrameMetrics(first);\n          first++;\n        }\n\n        if (firstFrame && first > 0) {\n          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n        }\n\n        var blankBottom = 0;\n        var last = state.last;\n\n        var lastFrame = this._getFrameMetrics(last);\n\n        while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n          lastFrame = this._getFrameMetrics(last);\n          last--;\n        }\n\n        if (lastFrame && last < props.getItemCount(props.data) - 1) {\n          var bottomEdge = lastFrame.offset + lastFrame.length;\n          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n        }\n\n        var pixels_blank = Math.round(blankTop + blankBottom);\n        var blankness = pixels_blank / visibleLength;\n\n        if (blankness > 0) {\n          this._anyBlankStartTime = now;\n          this._info.any_blank_speed_sum += scrollSpeed;\n          this._info.any_blank_count++;\n          this._info.pixels_blank += pixels_blank;\n\n          if (blankness > 0.5) {\n            this._mostlyBlankStartTime = now;\n            this._info.mostly_blank_count++;\n          }\n        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n          this.deactivateAndFlush();\n        }\n\n        return blankness;\n      }\n    }, {\n      key: \"enabled\",\n      value: function enabled() {\n        return this._enabled;\n      }\n    }, {\n      key: \"_resetData\",\n      value: function _resetData() {\n        this._anyBlankStartTime = null;\n        this._info = new Info();\n        this._mostlyBlankStartTime = null;\n        this._samplesStartTime = null;\n      }\n    }], [{\n      key: \"addListener\",\n      value: function addListener(callback) {\n        warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n        _listeners.push(callback);\n\n        return {\n          remove: function remove() {\n            _listeners = _listeners.filter(function (listener) {\n              return callback !== listener;\n            });\n          }\n        };\n      }\n    }, {\n      key: \"setSampleRate\",\n      value: function setSampleRate(sampleRate) {\n        _sampleRate = sampleRate;\n      }\n    }, {\n      key: \"setMinSampleCount\",\n      value: function setMinSampleCount(minSampleCount) {\n        _minSampleCount = minSampleCount;\n      }\n    }]);\n\n    return FillRateHelper;\n  }();\n\n  module.exports = FillRateHelper;\n});","lineCount":235,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"performanceNow"],[14,20,13,20],[14,23,13,23,"require"],[14,34,13,30],[14,80,13,0],[16,0,14,0],[16,6,14,6,"warning"],[16,13,14,13],[16,16,14,16,"require"],[16,27,14,23],[16,66,14,0],[18,6,18,6,"Info"],[18,10],[21,9,19,2,"any_blank_count"],[21,24],[21,27,19,28],[21,28],[22,9,20,2,"any_blank_ms"],[22,21],[22,24,20,25],[22,25],[23,9,21,2,"any_blank_speed_sum"],[23,28],[23,31,21,32],[23,32],[24,9,22,2,"mostly_blank_count"],[24,27],[24,30,22,31],[24,31],[25,9,23,2,"mostly_blank_ms"],[25,24],[25,27,23,28],[25,28],[26,9,24,2,"pixels_blank"],[26,21],[26,24,24,25],[26,25],[27,9,25,2,"pixels_sampled"],[27,23],[27,26,25,27],[27,27],[28,9,26,2,"pixels_scrolled"],[28,24],[28,27,26,28],[28,28],[29,9,27,2,"total_time_spent"],[29,25],[29,28,27,29],[29,29],[30,9,28,2,"sample_count"],[30,21],[30,24,28,25],[30,25],[33,0,38,0],[33,6,38,6,"DEBUG"],[33,11,38,11],[33,14,38,14],[33,19,38,0],[34,0,40,0],[34,6,40,4,"_listeners"],[34,16,40,37],[34,19,40,40],[34,21,40,0],[35,0,41,0],[35,6,41,4,"_minSampleCount"],[35,21,41,19],[35,24,41,22],[35,26,41,0],[37,0,42,0],[37,6,42,4,"_sampleRate"],[37,17,42,15],[37,20,42,18,"DEBUG"],[37,25,42,23],[37,28,42,26],[37,29,42,23],[37,32,42,30],[37,36,42,0],[39,6,52,6,"FillRateHelper"],[39,20],[40,0,83,2],[40,28,83,14,"getFrameMetrics"],[40,43,83,2],[40,45,83,65],[41,0,83,65],[43,0,83,65],[43,11,53,2,"_anyBlankStartTime"],[43,29,83,65],[43,32,53,24],[43,36,83,65],[44,0,83,65],[44,11,54,2,"_enabled"],[44,19,83,65],[44,22,54,13],[44,27,83,65],[45,0,83,65],[45,11,56,2,"_info"],[45,16,83,65],[45,19,56,10],[45,23,56,14,"Info"],[45,27,56,10],[45,29,83,65],[46,0,83,65],[46,11,57,2,"_mostlyBlankStartTime"],[46,32,83,65],[46,35,57,27],[46,39,83,65],[47,0,83,65],[47,11,58,2,"_samplesStartTime"],[47,28,83,65],[47,31,58,23],[47,35,83,65],[48,0,84,4],[48,11,84,9,"_getFrameMetrics"],[48,27,84,4],[48,30,84,28,"getFrameMetrics"],[48,45,84,4],[49,0,85,4],[49,11,85,9,"_enabled"],[49,19,85,4],[49,22,85,20],[49,23,85,21,"_sampleRate"],[49,34,85,32],[49,38,85,36],[49,39,85,20],[49,43,85,41,"Math"],[49,47,85,45],[49,48,85,46,"random"],[49,54,85,41],[49,56,85,4],[51,0,86,4],[51,11,86,9,"_resetData"],[51,21,86,4],[52,0,87,3],[56,13,89,2],[56,33,89,13],[57,0,90,4],[57,12,90,8],[57,17,90,13,"_enabled"],[57,25,90,8],[57,29,90,25],[57,34,90,30,"_samplesStartTime"],[57,51,90,25],[57,55,90,51],[57,59,90,4],[57,61,90,57],[58,0,91,6,"DEBUG"],[58,10,91,6,"DEBUG"],[58,15,91,11],[58,19,91,15,"console"],[58,26,91,22],[58,27,91,23,"debug"],[58,32,91,15],[58,33,91,29],[58,59,91,15],[58,60,91,6],[59,0,92,6],[59,15,92,11,"_samplesStartTime"],[59,32,92,6],[59,35,92,31,"performanceNow"],[59,49,92,45],[59,51,92,6],[60,0,93,5],[61,0,94,3],[64,13,96,2],[64,43,96,23],[65,0,97,4],[65,12,97,8],[65,13,97,9],[65,18,97,14,"_enabled"],[65,26,97,4],[65,28,97,24],[66,0,98,6],[67,0,99,5],[69,0,100,4],[69,12,100,10,"start"],[69,17,100,15],[69,20,100,18],[69,25,100,23,"_samplesStartTime"],[69,42,100,4],[71,0,101,4],[71,12,101,8,"start"],[71,17,101,13],[71,21,101,17],[71,25,101,4],[71,27,101,23],[72,0,102,6,"DEBUG"],[72,10,102,6,"DEBUG"],[72,15,102,11],[72,19,103,8,"console"],[72,26,103,15],[72,27,103,16,"debug"],[72,32,103,8],[72,33,103,22],[72,88,103,8],[72,89,102,6],[73,0,104,6],[74,0,105,5],[76,0,106,4],[76,12,106,8],[76,17,106,13,"_info"],[76,22,106,8],[76,23,106,19,"sample_count"],[76,35,106,8],[76,38,106,34,"_minSampleCount"],[76,53,106,4],[76,55,106,51],[77,0,108,6],[77,15,108,11,"_resetData"],[77,25,108,6],[79,0,109,6],[80,0,110,5],[82,0,111,4],[82,12,111,10,"total_time_spent"],[82,28,111,26],[82,31,111,29,"performanceNow"],[82,45,111,43],[82,50,111,48,"start"],[82,55,111,4],[84,0,112,4],[84,12,112,10,"info"],[84,16,112,19],[84,51,113,9],[84,56,113,14,"_info"],[84,61,112,19],[85,0,114,6,"total_time_spent"],[85,10,114,6,"total_time_spent"],[85,26,114,22],[85,28,114,6,"total_time_spent"],[86,0,112,19],[86,10,112,4],[88,0,116,4],[88,12,116,8,"DEBUG"],[88,17,116,4],[88,19,116,15],[89,0,117,6],[89,14,117,12,"derived"],[89,21,117,19],[89,24,117,22],[90,0,118,8,"avg_blankness"],[90,12,118,8,"avg_blankness"],[90,25,118,21],[90,27,118,23],[90,32,118,28,"_info"],[90,37,118,23],[90,38,118,34,"pixels_blank"],[90,50,118,23],[90,53,118,49],[90,58,118,54,"_info"],[90,63,118,49],[90,64,118,60,"pixels_sampled"],[90,78,117,22],[91,0,119,8,"avg_speed"],[91,12,119,8,"avg_speed"],[91,21,119,17],[91,23,119,19],[91,28,119,24,"_info"],[91,33,119,19],[91,34,119,30,"pixels_scrolled"],[91,49,119,19],[91,53,119,49,"total_time_spent"],[91,69,119,65],[91,72,119,68],[91,76,119,19],[91,77,117,22],[92,0,120,8,"avg_speed_when_any_blank"],[92,12,120,8,"avg_speed_when_any_blank"],[92,36,120,32],[92,38,121,10],[92,43,121,15,"_info"],[92,48,121,10],[92,49,121,21,"any_blank_speed_sum"],[92,68,121,10],[92,71,121,43],[92,76,121,48,"_info"],[92,81,121,43],[92,82,121,54,"any_blank_count"],[92,97,117,22],[93,0,122,8,"any_blank_per_min"],[93,12,122,8,"any_blank_per_min"],[93,29,122,25],[93,31,123,10],[93,36,123,15,"_info"],[93,41,123,10],[93,42,123,21,"any_blank_count"],[93,57,123,10],[93,61,123,40,"total_time_spent"],[93,77,123,56],[93,80,123,59],[93,84,123,40],[93,87,123,66],[93,89,123,10],[93,90,117,22],[94,0,124,8,"any_blank_time_frac"],[94,12,124,8,"any_blank_time_frac"],[94,31,124,27],[94,33,124,29],[94,38,124,34,"_info"],[94,43,124,29],[94,44,124,40,"any_blank_ms"],[94,56,124,29],[94,59,124,55,"total_time_spent"],[94,75,117,22],[95,0,125,8,"mostly_blank_per_min"],[95,12,125,8,"mostly_blank_per_min"],[95,32,125,28],[95,34,126,10],[95,39,126,15,"_info"],[95,44,126,10],[95,45,126,21,"mostly_blank_count"],[95,63,126,10],[95,67,126,43,"total_time_spent"],[95,83,126,59],[95,86,126,62],[95,90,126,43],[95,93,126,69],[95,95,126,10],[95,96,117,22],[96,0,127,8,"mostly_blank_time_frac"],[96,12,127,8,"mostly_blank_time_frac"],[96,34,127,30],[96,36,127,32],[96,41,127,37,"_info"],[96,46,127,32],[96,47,127,43,"mostly_blank_ms"],[96,62,127,32],[96,65,127,61,"total_time_spent"],[97,0,117,22],[97,11,117,6],[99,0,129,6],[99,15,129,11],[99,19,129,17,"key"],[99,22,129,6],[99,26,129,24,"derived"],[99,33,129,6],[99,35,129,33],[100,0,130,8,"derived"],[100,12,130,8,"derived"],[100,19,130,15],[100,20,130,16,"key"],[100,23,130,15],[100,24,130,8],[100,27,130,23,"Math"],[100,31,130,27],[100,32,130,28,"round"],[100,37,130,23],[100,38,130,34],[100,45,130,41,"derived"],[100,52,130,48],[100,53,130,49,"key"],[100,56,130,48],[100,57,130,23],[100,61,130,57],[100,65,130,8],[101,0,131,7],[103,0,132,6,"console"],[103,10,132,6,"console"],[103,17,132,13],[103,18,132,14,"debug"],[103,23,132,6],[103,24,132,20],[103,61,132,6],[103,63,132,59],[104,0,132,60,"derived"],[104,12,132,60,"derived"],[104,19,132,67],[104,21,132,60,"derived"],[104,28,132,59],[105,0,132,69,"info"],[105,12,132,69,"info"],[105,16,132,73],[105,18,132,69,"info"],[106,0,132,59],[106,11,132,6],[107,0,133,5],[109,0,134,4,"_listeners"],[109,8,134,4,"_listeners"],[109,18,134,14],[109,19,134,15,"forEach"],[109,26,134,4],[109,27,134,23],[109,37,134,23,"listener"],[109,45,134,31],[110,0,134,31],[110,17,134,35,"listener"],[110,25,134,43],[110,26,134,44,"info"],[110,30,134,43],[110,31,134,31],[111,0,134,31],[111,9,134,4],[113,0,135,4],[113,13,135,9,"_resetData"],[113,23,135,4],[114,0,136,3],[117,13,138,2],[117,39,139,4,"props"],[117,44,138,2],[117,46,145,4,"state"],[117,51,138,2],[117,53,150,4,"scrollMetrics"],[117,66,138,2],[117,68,157,12],[118,0,158,4],[118,12,159,6],[118,13,159,7],[118,18,159,12,"_enabled"],[118,26,159,6],[118,30,160,6,"props"],[118,35,160,11],[118,36,160,12,"getItemCount"],[118,48,160,6],[118,49,160,25,"props"],[118,54,160,30],[118,55,160,31,"data"],[118,59,160,6],[118,65,160,41],[118,66,159,6],[118,70,161,6],[118,75,161,11,"_samplesStartTime"],[118,92,161,6],[118,96,161,32],[118,100,158,4],[118,102,162,6],[119,0,163,6],[119,17,163,13],[119,18,163,6],[120,0,164,5],[122,0,165,4],[122,12,165,11,"dOffset"],[122,19,165,4],[122,22,165,55,"scrollMetrics"],[122,35,165,4],[122,36,165,11,"dOffset"],[122,43,165,4],[123,0,165,4],[123,12,165,20,"offset"],[123,18,165,4],[123,21,165,55,"scrollMetrics"],[123,34,165,4],[123,35,165,20,"offset"],[123,41,165,4],[124,0,165,4],[124,12,165,28,"velocity"],[124,20,165,4],[124,23,165,55,"scrollMetrics"],[124,36,165,4],[124,37,165,28,"velocity"],[124,45,165,4],[125,0,165,4],[125,12,165,38,"visibleLength"],[125,25,165,4],[125,28,165,55,"scrollMetrics"],[125,41,165,4],[125,42,165,38,"visibleLength"],[125,55,165,4],[126,0,169,4],[126,13,169,9,"_info"],[126,18,169,4],[126,19,169,15,"sample_count"],[126,31,169,4],[127,0,170,4],[127,13,170,9,"_info"],[127,18,170,4],[127,19,170,15,"pixels_sampled"],[127,33,170,4],[127,37,170,33,"Math"],[127,41,170,37],[127,42,170,38,"round"],[127,47,170,33],[127,48,170,44,"visibleLength"],[127,61,170,33],[127,62,170,4],[128,0,171,4],[128,13,171,9,"_info"],[128,18,171,4],[128,19,171,15,"pixels_scrolled"],[128,34,171,4],[128,38,171,34,"Math"],[128,42,171,38],[128,43,171,39,"round"],[128,48,171,34],[128,49,171,45,"Math"],[128,53,171,49],[128,54,171,50,"abs"],[128,57,171,45],[128,58,171,54,"dOffset"],[128,65,171,45],[128,66,171,34],[128,67,171,4],[129,0,172,4],[129,12,172,10,"scrollSpeed"],[129,23,172,21],[129,26,172,24,"Math"],[129,30,172,28],[129,31,172,29,"round"],[129,36,172,24],[129,37,172,35,"Math"],[129,41,172,39],[129,42,172,40,"abs"],[129,45,172,35],[129,46,172,44,"velocity"],[129,54,172,35],[129,58,172,56],[129,62,172,24],[129,63,172,4],[130,0,175,4],[130,12,175,10,"now"],[130,15,175,13],[130,18,175,16,"performanceNow"],[130,32,175,30],[130,34,175,4],[132,0,176,4],[132,12,176,8],[132,17,176,13,"_anyBlankStartTime"],[132,35,176,8],[132,39,176,35],[132,43,176,4],[132,45,176,41],[133,0,177,6],[133,15,177,11,"_info"],[133,20,177,6],[133,21,177,17,"any_blank_ms"],[133,33,177,6],[133,37,177,33,"now"],[133,40,177,36],[133,43,177,39],[133,48,177,44,"_anyBlankStartTime"],[133,66,177,6],[134,0,178,5],[136,0,179,4],[136,13,179,9,"_anyBlankStartTime"],[136,31,179,4],[136,34,179,30],[136,38,179,4],[138,0,180,4],[138,12,180,8],[138,17,180,13,"_mostlyBlankStartTime"],[138,38,180,8],[138,42,180,38],[138,46,180,4],[138,48,180,44],[139,0,181,6],[139,15,181,11,"_info"],[139,20,181,6],[139,21,181,17,"mostly_blank_ms"],[139,36,181,6],[139,40,181,36,"now"],[139,43,181,39],[139,46,181,42],[139,51,181,47,"_mostlyBlankStartTime"],[139,72,181,6],[140,0,182,5],[142,0,183,4],[142,13,183,9,"_mostlyBlankStartTime"],[142,34,183,4],[142,37,183,33],[142,41,183,4],[143,0,185,4],[143,12,185,8,"blankTop"],[143,20,185,16],[143,23,185,19],[143,24,185,4],[144,0,186,4],[144,12,186,8,"first"],[144,17,186,13],[144,20,186,16,"state"],[144,25,186,21],[144,26,186,22,"first"],[144,31,186,4],[146,0,187,4],[146,12,187,8,"firstFrame"],[146,22,187,18],[146,25,187,21],[146,30,187,26,"_getFrameMetrics"],[146,46,187,21],[146,47,187,43,"first"],[146,52,187,21],[146,53,187,4],[148,0,188,4],[148,15,188,11,"first"],[148,20,188,16],[148,24,188,20,"state"],[148,29,188,25],[148,30,188,26,"last"],[148,34,188,11],[148,39,188,35],[148,40,188,36,"firstFrame"],[148,50,188,35],[148,54,188,50],[148,55,188,51,"firstFrame"],[148,65,188,61],[148,66,188,62,"inLayout"],[148,74,188,11],[148,75,188,4],[148,77,188,73],[149,0,189,6,"firstFrame"],[149,10,189,6,"firstFrame"],[149,20,189,16],[149,23,189,19],[149,28,189,24,"_getFrameMetrics"],[149,44,189,19],[149,45,189,41,"first"],[149,50,189,19],[149,51,189,6],[150,0,190,6,"first"],[150,10,190,6,"first"],[150,15,190,11],[151,0,191,5],[153,0,194,4],[153,12,194,8,"firstFrame"],[153,22,194,18],[153,26,194,22,"first"],[153,31,194,27],[153,34,194,30],[153,35,194,4],[153,37,194,33],[154,0,195,6,"blankTop"],[154,10,195,6,"blankTop"],[154,18,195,14],[154,21,195,17,"Math"],[154,25,195,21],[154,26,195,22,"min"],[154,29,195,17],[154,30,196,8,"visibleLength"],[154,43,195,17],[154,45,197,8,"Math"],[154,49,197,12],[154,50,197,13,"max"],[154,53,197,8],[154,54,197,17],[154,55,197,8],[154,57,197,20,"firstFrame"],[154,67,197,30],[154,68,197,31,"offset"],[154,74,197,20],[154,77,197,40,"offset"],[154,83,197,8],[154,84,195,17],[154,85,195,6],[155,0,199,5],[157,0,200,4],[157,12,200,8,"blankBottom"],[157,23,200,19],[157,26,200,22],[157,27,200,4],[158,0,201,4],[158,12,201,8,"last"],[158,16,201,12],[158,19,201,15,"state"],[158,24,201,20],[158,25,201,21,"last"],[158,29,201,4],[160,0,202,4],[160,12,202,8,"lastFrame"],[160,21,202,17],[160,24,202,20],[160,29,202,25,"_getFrameMetrics"],[160,45,202,20],[160,46,202,42,"last"],[160,50,202,20],[160,51,202,4],[162,0,203,4],[162,15,203,11,"last"],[162,19,203,15],[162,23,203,19,"state"],[162,28,203,24],[162,29,203,25,"first"],[162,34,203,11],[162,39,203,35],[162,40,203,36,"lastFrame"],[162,49,203,35],[162,53,203,49],[162,54,203,50,"lastFrame"],[162,63,203,59],[162,64,203,60,"inLayout"],[162,72,203,11],[162,73,203,4],[162,75,203,71],[163,0,204,6,"lastFrame"],[163,10,204,6,"lastFrame"],[163,19,204,15],[163,22,204,18],[163,27,204,23,"_getFrameMetrics"],[163,43,204,18],[163,44,204,40,"last"],[163,48,204,18],[163,49,204,6],[164,0,205,6,"last"],[164,10,205,6,"last"],[164,14,205,10],[165,0,206,5],[167,0,209,4],[167,12,209,8,"lastFrame"],[167,21,209,17],[167,25,209,21,"last"],[167,29,209,25],[167,32,209,28,"props"],[167,37,209,33],[167,38,209,34,"getItemCount"],[167,50,209,28],[167,51,209,47,"props"],[167,56,209,52],[167,57,209,53,"data"],[167,61,209,28],[167,65,209,61],[167,66,209,4],[167,68,209,64],[168,0,210,6],[168,14,210,12,"bottomEdge"],[168,24,210,22],[168,27,210,25,"lastFrame"],[168,36,210,34],[168,37,210,35,"offset"],[168,43,210,25],[168,46,210,44,"lastFrame"],[168,55,210,53],[168,56,210,54,"length"],[168,62,210,6],[169,0,211,6,"blankBottom"],[169,10,211,6,"blankBottom"],[169,21,211,17],[169,24,211,20,"Math"],[169,28,211,24],[169,29,211,25,"min"],[169,32,211,20],[169,33,212,8,"visibleLength"],[169,46,211,20],[169,48,213,8,"Math"],[169,52,213,12],[169,53,213,13,"max"],[169,56,213,8],[169,57,213,17],[169,58,213,8],[169,60,213,20,"offset"],[169,66,213,26],[169,69,213,29,"visibleLength"],[169,82,213,20],[169,85,213,45,"bottomEdge"],[169,95,213,8],[169,96,211,20],[169,97,211,6],[170,0,215,5],[172,0,216,4],[172,12,216,10,"pixels_blank"],[172,24,216,22],[172,27,216,25,"Math"],[172,31,216,29],[172,32,216,30,"round"],[172,37,216,25],[172,38,216,36,"blankTop"],[172,46,216,44],[172,49,216,47,"blankBottom"],[172,60,216,25],[172,61,216,4],[173,0,217,4],[173,12,217,10,"blankness"],[173,21,217,19],[173,24,217,22,"pixels_blank"],[173,36,217,34],[173,39,217,37,"visibleLength"],[173,52,217,4],[175,0,218,4],[175,12,218,8,"blankness"],[175,21,218,17],[175,24,218,20],[175,25,218,4],[175,27,218,23],[176,0,219,6],[176,15,219,11,"_anyBlankStartTime"],[176,33,219,6],[176,36,219,32,"now"],[176,39,219,6],[177,0,220,6],[177,15,220,11,"_info"],[177,20,220,6],[177,21,220,17,"any_blank_speed_sum"],[177,40,220,6],[177,44,220,40,"scrollSpeed"],[177,55,220,6],[178,0,221,6],[178,15,221,11,"_info"],[178,20,221,6],[178,21,221,17,"any_blank_count"],[178,36,221,6],[179,0,222,6],[179,15,222,11,"_info"],[179,20,222,6],[179,21,222,17,"pixels_blank"],[179,33,222,6],[179,37,222,33,"pixels_blank"],[179,49,222,6],[181,0,223,6],[181,14,223,10,"blankness"],[181,23,223,19],[181,26,223,22],[181,29,223,6],[181,31,223,27],[182,0,224,8],[182,17,224,13,"_mostlyBlankStartTime"],[182,38,224,8],[182,41,224,37,"now"],[182,44,224,8],[183,0,225,8],[183,17,225,13,"_info"],[183,22,225,8],[183,23,225,19,"mostly_blank_count"],[183,41,225,8],[184,0,226,7],[185,0,227,5],[185,9,218,4],[185,15,227,11],[185,19,227,15,"scrollSpeed"],[185,30,227,26],[185,33,227,29],[185,37,227,15],[185,41,227,37,"Math"],[185,45,227,41],[185,46,227,42,"abs"],[185,49,227,37],[185,50,227,46,"dOffset"],[185,57,227,37],[185,61,227,57],[185,62,227,11],[185,64,227,60],[186,0,228,6],[186,15,228,11,"deactivateAndFlush"],[186,33,228,6],[187,0,229,5],[189,0,230,4],[189,15,230,11,"blankness"],[189,24,230,4],[190,0,231,3],[193,13,233,2],[193,32,233,21],[194,0,234,4],[194,15,234,11],[194,20,234,16,"_enabled"],[194,28,234,4],[195,0,235,3],[198,13,237,2],[198,35,237,15],[199,0,238,4],[199,13,238,9,"_anyBlankStartTime"],[199,31,238,4],[199,34,238,30],[199,38,238,4],[200,0,239,4],[200,13,239,9,"_info"],[200,18,239,4],[200,21,239,17],[200,25,239,21,"Info"],[200,29,239,17],[200,31,239,4],[201,0,240,4],[201,13,240,9,"_mostlyBlankStartTime"],[201,34,240,4],[201,37,240,33],[201,41,240,4],[202,0,241,4],[202,13,241,9,"_samplesStartTime"],[202,30,241,4],[202,33,241,29],[202,37,241,4],[203,0,242,3],[206,13,60,2],[206,34,61,4,"callback"],[206,42,60,2],[206,44,62,31],[207,0,63,4,"warning"],[207,8,63,4,"warning"],[207,15,63,11],[207,16,64,6,"_sampleRate"],[207,27,64,17],[207,32,64,22],[207,36,63,11],[207,38,65,6],[207,97,63,11],[207,98,63,4],[209,0,67,4,"_listeners"],[209,8,67,4,"_listeners"],[209,18,67,14],[209,19,67,15,"push"],[209,23,67,4],[209,24,67,20,"callback"],[209,32,67,4],[211,0,68,4],[211,15,68,11],[212,0,69,6,"remove"],[212,10,69,6,"remove"],[212,16,69,12],[212,18,69,14],[212,36,69,20],[213,0,70,8,"_listeners"],[213,12,70,8,"_listeners"],[213,22,70,18],[213,25,70,21,"_listeners"],[213,35,70,31],[213,36,70,32,"filter"],[213,42,70,21],[213,43,70,39],[213,53,70,39,"listener"],[213,61,70,47],[214,0,70,47],[214,21,70,51,"callback"],[214,29,70,59],[214,34,70,64,"listener"],[214,42,70,47],[215,0,70,47],[215,13,70,21],[215,14,70,8],[216,0,71,7],[217,0,68,11],[217,9,68,4],[218,0,73,3],[221,13,75,2],[221,36,75,23,"sampleRate"],[221,46,75,2],[221,48,75,43],[222,0,76,4,"_sampleRate"],[222,8,76,4,"_sampleRate"],[222,19,76,15],[222,22,76,18,"sampleRate"],[222,32,76,4],[223,0,77,3],[226,13,79,2],[226,40,79,27,"minSampleCount"],[226,54,79,2],[226,56,79,51],[227,0,80,4,"_minSampleCount"],[227,8,80,4,"_minSampleCount"],[227,23,80,19],[227,26,80,22,"minSampleCount"],[227,40,80,4],[228,0,81,3],[234,0,245,0,"module"],[234,2,245,0,"module"],[234,8,245,6],[234,9,245,7,"exports"],[234,16,245,0],[234,19,245,17,"FillRateHelper"],[234,33,245,0]],"functionMap":{"names":["<global>","Info","FillRateHelper","addListener","remove","_listeners.filter$argument_0","setSampleRate","setMinSampleCount","constructor","activate","deactivateAndFlush","_listeners.forEach$argument_0","computeBlankness","enabled","_resetData"],"mappings":"AAA;ACiB;CDW;AEuB;ECQ;cCS;uCCC,iCD;ODC;GDE;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;uBCsC,0BD;GRE;EUE;GV6F;EWE;GXE;EYE;GZK;CFC"}},"type":"js/module"}]}