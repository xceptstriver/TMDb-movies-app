{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"anser","data":{"isAsync":false,"locs":[]}},{"name":"../../Text/Text","data":{"isAsync":false,"locs":[]}},{"name":"../../Components/View/View","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ansi;\n\n  var _anser = _$$_REQUIRE(_dependencyMap[1], \"anser\");\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../../Text/Text\"));\n\n  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Components/View/View\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _jsxFileName = \"/home/moglix/tmdb_movies_app/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var COLORS = {\n    'ansi-black': 'rgb(27, 27, 27)',\n    'ansi-red': 'rgb(187, 86, 83)',\n    'ansi-green': 'rgb(144, 157, 98)',\n    'ansi-yellow': 'rgb(234, 193, 121)',\n    'ansi-blue': 'rgb(125, 169, 199)',\n    'ansi-magenta': 'rgb(176, 101, 151)',\n    'ansi-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-black': 'rgb(98, 98, 98)',\n    'ansi-bright-red': 'rgb(187, 86, 83)',\n    'ansi-bright-green': 'rgb(144, 157, 98)',\n    'ansi-bright-yellow': 'rgb(234, 193, 121)',\n    'ansi-bright-blue': 'rgb(125, 169, 199)',\n    'ansi-bright-magenta': 'rgb(176, 101, 151)',\n    'ansi-bright-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-white': 'rgb(247, 247, 247)'\n  };\n\n  function Ansi(_ref) {\n    var _this = this;\n\n    var text = _ref.text,\n        style = _ref.style;\n    var commonWhitespaceLength = Infinity;\n    var parsedLines = text.split(/\\n/).map(function (line) {\n      return (0, _anser.ansiToJson)(line, {\n        json: true,\n        remove_empty: true,\n        use_classes: true\n      });\n    });\n    parsedLines.map(function (lines) {\n      var _lines$, _lines$$content, _match$;\n\n      var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n      var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n\n      if (whitespaceLength < commonWhitespaceLength) {\n        commonWhitespaceLength = whitespaceLength;\n      }\n    });\n\n    var getText = function getText(content, key) {\n      if (key === 1) {\n        return content.replace(/\\| $/, ' ');\n      } else if (key === 2 && commonWhitespaceLength < Infinity) {\n        return content.substr(commonWhitespaceLength);\n      } else {\n        return content;\n      }\n    };\n\n    return React.createElement(_View.default, {\n      style: {\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, parsedLines.map(function (items, i) {\n      return React.createElement(_View.default, {\n        style: {\n          flexDirection: 'row'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, items.map(function (bundle, key) {\n        var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n          backgroundColor: bundle.bg && COLORS[bundle.bg],\n          color: bundle.fg && COLORS[bundle.fg]\n        } : {\n          backgroundColor: bundle.bg && COLORS[bundle.bg]\n        };\n        return React.createElement(_Text.default, {\n          style: [style, textStyle],\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }, getText(bundle.content, key));\n      }));\n    }));\n  }\n});","lineCount":117,"map":[[9,0,11,0],[11,0,12,0],[13,0,13,0],[15,0,14,0],[23,0,19,0],[23,6,19,6,"COLORS"],[23,12,19,12],[23,15,19,15],[24,0,20,2],[24,18,20,16],[24,35,19,15],[25,0,21,2],[25,16,21,14],[25,34,19,15],[26,0,22,2],[26,18,22,16],[26,37,19,15],[27,0,23,2],[27,19,23,17],[27,39,19,15],[28,0,24,2],[28,17,24,15],[28,37,19,15],[29,0,25,2],[29,20,25,18],[29,40,19,15],[30,0,26,2],[30,17,26,15],[30,37,19,15],[31,0,29,2],[31,25,29,23],[31,42,19,15],[32,0,30,2],[32,23,30,21],[32,41,19,15],[33,0,31,2],[33,25,31,23],[33,44,19,15],[34,0,32,2],[34,26,32,24],[34,46,19,15],[35,0,33,2],[35,24,33,22],[35,44,19,15],[36,0,34,2],[36,27,34,25],[36,47,19,15],[37,0,35,2],[37,24,35,22],[37,44,19,15],[38,0,36,2],[38,25,36,23],[39,0,19,15],[39,3,19,0],[41,0,39,15],[41,11,39,24,"Ansi"],[41,15,39,15],[41,22,46,15],[42,0,46,15],[44,0,46,15],[44,8,40,2,"text"],[44,12,46,15],[44,20,40,2,"text"],[44,24,46,15],[45,0,46,15],[45,8,41,2,"style"],[45,13,46,15],[45,21,41,2,"style"],[45,26,46,15],[46,0,47,2],[46,8,47,6,"commonWhitespaceLength"],[46,30,47,28],[46,33,47,31,"Infinity"],[46,41,47,2],[47,0,48,2],[47,8,48,8,"parsedLines"],[47,19,48,19],[47,22,48,22,"text"],[47,26,48,26],[47,27,48,27,"split"],[47,32,48,22],[47,33,48,33],[47,37,48,22],[47,39,48,39,"map"],[47,42,48,22],[47,43,48,43],[47,53,48,43,"line"],[47,57,48,47],[48,0,48,47],[48,13,49,4],[48,36,49,15,"line"],[48,40,49,4],[48,42,49,21],[49,0,50,6,"json"],[49,8,50,6,"json"],[49,12,50,10],[49,14,50,12],[49,18,49,21],[50,0,51,6,"remove_empty"],[50,8,51,6,"remove_empty"],[50,20,51,18],[50,22,51,20],[50,26,49,21],[51,0,52,6,"use_classes"],[51,8,52,6,"use_classes"],[51,19,52,17],[51,21,52,19],[52,0,49,21],[52,7,49,4],[52,8,48,47],[53,0,48,47],[53,5,48,22],[53,6,48,2],[54,0,56,2,"parsedLines"],[54,4,56,2,"parsedLines"],[54,15,56,13],[54,16,56,14,"map"],[54,19,56,2],[54,20,56,18],[54,30,56,18,"lines"],[54,35,56,23],[54,37,56,27],[55,0,56,27],[57,0,60,4],[57,10,60,10,"match"],[57,15,60,15],[57,18,60,18,"lines"],[57,23,60,23],[57,24,60,24],[57,25,60,23],[57,26,60,18],[57,42,60,30,"lines"],[57,47,60,35],[57,48,60,36],[57,49,60,35],[57,50,60,18],[57,90,60,30],[57,98,60,40,"content"],[57,105,60,18],[57,126,60,30],[57,142,60,49,"match"],[57,147,60,30],[57,148,60,55],[57,153,60,30],[57,154,60,18],[57,155,60,4],[58,0,61,4],[58,10,61,10,"whitespaceLength"],[58,26,61,26],[58,29,61,30,"match"],[58,34,61,35],[58,50,61,39,"match"],[58,55,61,44],[58,56,61,45],[58,57,61,44],[58,58,61,35],[58,79,61,39],[58,87,61,49,"length"],[58,93,61,35],[58,94,61,29],[58,98,61,60],[58,99,61,4],[60,0,62,4],[60,10,62,8,"whitespaceLength"],[60,26,62,24],[60,29,62,27,"commonWhitespaceLength"],[60,51,62,4],[60,53,62,51],[61,0,63,6,"commonWhitespaceLength"],[61,8,63,6,"commonWhitespaceLength"],[61,30,63,28],[61,33,63,31,"whitespaceLength"],[61,49,63,6],[62,0,64,5],[63,0,65,3],[63,5,56,2],[65,0,67,2],[65,8,67,8,"getText"],[65,15,67,15],[65,18,67,18],[65,27,67,8,"getText"],[65,34,67,18],[65,35,67,19,"content"],[65,42,67,18],[65,44,67,28,"key"],[65,47,67,18],[65,49,67,36],[66,0,68,4],[66,10,68,8,"key"],[66,13,68,11],[66,18,68,16],[66,19,68,4],[66,21,68,19],[67,0,70,6],[67,15,70,13,"content"],[67,22,70,20],[67,23,70,21,"replace"],[67,30,70,13],[67,31,70,29],[67,37,70,13],[67,39,70,37],[67,42,70,13],[67,43,70,6],[68,0,71,5],[68,7,68,4],[68,13,71,11],[68,17,71,15,"key"],[68,20,71,18],[68,25,71,23],[68,26,71,15],[68,30,71,28,"commonWhitespaceLength"],[68,52,71,50],[68,55,71,53,"Infinity"],[68,63,71,11],[68,65,71,63],[69,0,73,6],[69,15,73,13,"content"],[69,22,73,20],[69,23,73,21,"substr"],[69,29,73,13],[69,30,73,28,"commonWhitespaceLength"],[69,52,73,13],[69,53,73,6],[70,0,74,5],[70,7,71,11],[70,13,74,11],[71,0,75,6],[71,15,75,13,"content"],[71,22,75,6],[72,0,76,5],[73,0,77,3],[73,5,67,2],[75,0,79,2],[75,11,80,4],[75,31,80,5],[75,44,80,4],[76,0,80,10],[76,6,80,10],[76,11,80,15],[76,13,80,17],[77,0,80,18,"flexDirection"],[77,8,80,18,"flexDirection"],[77,21,80,31],[77,23,80,33],[78,0,80,17],[78,7,80,4],[79,0,80,4],[80,0,80,4],[81,0,80,4],[82,0,80,4],[83,0,80,4],[84,0,80,4],[85,0,80,4],[85,7,81,7,"parsedLines"],[85,18,81,18],[85,19,81,19,"map"],[85,22,81,7],[85,23,81,23],[85,33,81,24,"items"],[85,38,81,23],[85,40,81,31,"i"],[85,41,81,23],[86,0,81,23],[86,13,82,8],[86,33,82,9],[86,46,82,8],[87,0,82,14],[87,8,82,14],[87,13,82,19],[87,15,82,21],[88,0,82,22,"flexDirection"],[88,10,82,22,"flexDirection"],[88,23,82,35],[88,25,82,37],[89,0,82,21],[89,9,82,8],[90,0,82,45],[90,8,82,45],[90,11,82,48],[90,13,82,50,"i"],[90,14,82,8],[91,0,82,8],[92,0,82,8],[93,0,82,8],[94,0,82,8],[95,0,82,8],[96,0,82,8],[97,0,82,8],[97,9,83,11,"items"],[97,14,83,16],[97,15,83,17,"map"],[97,18,83,11],[97,19,83,21],[97,29,83,22,"bundle"],[97,35,83,21],[97,37,83,30,"key"],[97,40,83,21],[97,42,83,38],[98,0,84,12],[98,12,84,18,"textStyle"],[98,21,84,27],[98,24,85,14,"bundle"],[98,30,85,20],[98,31,85,21,"fg"],[98,33,85,14],[98,37,85,27,"COLORS"],[98,43,85,33],[98,44,85,34,"bundle"],[98,50,85,40],[98,51,85,41,"fg"],[98,53,85,33],[98,54,85,14],[98,57,86,18],[99,0,87,20,"backgroundColor"],[99,10,87,20,"backgroundColor"],[99,25,87,35],[99,27,87,37,"bundle"],[99,33,87,43],[99,34,87,44,"bg"],[99,36,87,37],[99,40,87,50,"COLORS"],[99,46,87,56],[99,47,87,57,"bundle"],[99,53,87,63],[99,54,87,64,"bg"],[99,56,87,56],[99,57,86,18],[100,0,88,20,"color"],[100,10,88,20,"color"],[100,15,88,25],[100,17,88,27,"bundle"],[100,23,88,33],[100,24,88,34,"fg"],[100,26,88,27],[100,30,88,40,"COLORS"],[100,36,88,46],[100,37,88,47,"bundle"],[100,43,88,53],[100,44,88,54,"fg"],[100,46,88,46],[101,0,86,18],[101,9,85,14],[101,12,90,18],[102,0,91,20,"backgroundColor"],[102,10,91,20,"backgroundColor"],[102,25,91,35],[102,27,91,37,"bundle"],[102,33,91,43],[102,34,91,44,"bg"],[102,36,91,37],[102,40,91,50,"COLORS"],[102,46,91,56],[102,47,91,57,"bundle"],[102,53,91,63],[102,54,91,64,"bg"],[102,56,91,56],[103,0,90,18],[103,9,84,12],[104,0,93,12],[104,15,94,14],[104,35,94,15],[104,48,94,14],[105,0,94,20],[105,10,94,20],[105,15,94,25],[105,17,94,27],[105,18,94,28,"style"],[105,23,94,27],[105,25,94,35,"textStyle"],[105,34,94,27],[105,35,94,14],[106,0,94,47],[106,10,94,47],[106,13,94,50],[106,15,94,52,"key"],[106,18,94,14],[107,0,94,14],[108,0,94,14],[109,0,94,14],[110,0,94,14],[111,0,94,14],[112,0,94,14],[113,0,94,14],[113,11,95,17,"getText"],[113,18,95,24],[113,19,95,25,"bundle"],[113,25,95,31],[113,26,95,32,"content"],[113,33,95,24],[113,35,95,41,"key"],[113,38,95,24],[113,39,94,14],[113,40,93,12],[114,0,98,11],[114,7,83,11],[114,8,82,8],[114,9,81,23],[115,0,81,23],[115,5,81,7],[115,6,80,4],[115,7,79,2],[116,0,103,1]],"functionMap":{"names":["<global>","Ansi","text.split.map$argument_0","parsedLines.map$argument_0","getText","items.map$argument_0"],"mappings":"AAA;eCsC;2CCS;MDK;kBEG;GFS;kBGE;GHU;uBEI;qBEE;WFe;OFE;CDG"}},"type":"js/module"}]}