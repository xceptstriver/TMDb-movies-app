{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useIsKeyboardShown;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function useIsKeyboardShown() {\n    var _React$useState = React.useState(false),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        isKeyboardShown = _React$useState2[0],\n        setIsKeyboardShown = _React$useState2[1];\n\n    React.useEffect(function () {\n      var handleKeyboardShow = function handleKeyboardShow() {\n        return setIsKeyboardShown(true);\n      };\n\n      var handleKeyboardHide = function handleKeyboardHide() {\n        return setIsKeyboardShown(false);\n      };\n\n      if (_reactNative.Platform.OS === 'ios') {\n        _reactNative.Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        _reactNative.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n\n        _reactNative.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n      }\n\n      return function () {\n        if (_reactNative.Platform.OS === 'ios') {\n          _reactNative.Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n\n          _reactNative.Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n\n          _reactNative.Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n        }\n      };\n    }, []);\n    return isKeyboardShown;\n  }\n});","lineCount":58,"map":[[11,0,1,0],[13,0,2,0],[19,0,4,15],[19,11,4,24,"useIsKeyboardShown"],[19,29,4,15],[19,32,4,45],[20,0,5,2],[20,26,5,48,"React"],[20,31,5,53],[20,32,5,54,"useState"],[20,40,5,48],[20,41,5,63],[20,46,5,48],[20,47,5,2],[21,0,5,2],[22,0,5,2],[22,8,5,9,"isKeyboardShown"],[22,23,5,2],[23,0,5,2],[23,8,5,26,"setIsKeyboardShown"],[23,26,5,2],[25,0,7,2,"React"],[25,4,7,2,"React"],[25,9,7,7],[25,10,7,8,"useEffect"],[25,19,7,2],[25,20,7,18],[25,32,7,24],[26,0,8,4],[26,10,8,10,"handleKeyboardShow"],[26,28,8,28],[26,31,8,31],[26,40,8,10,"handleKeyboardShow"],[26,58,8,31],[27,0,8,31],[27,15,8,37,"setIsKeyboardShown"],[27,33,8,55],[27,34,8,56],[27,38,8,55],[27,39,8,31],[28,0,8,31],[28,7,8,4],[30,0,9,4],[30,10,9,10,"handleKeyboardHide"],[30,28,9,28],[30,31,9,31],[30,40,9,10,"handleKeyboardHide"],[30,58,9,31],[31,0,9,31],[31,15,9,37,"setIsKeyboardShown"],[31,33,9,55],[31,34,9,56],[31,39,9,55],[31,40,9,31],[32,0,9,31],[32,7,9,4],[34,0,11,4],[34,10,11,8,"Platform"],[34,32,11,17,"OS"],[34,34,11,8],[34,39,11,24],[34,44,11,4],[34,46,11,31],[35,0,12,6,"Keyboard"],[35,30,12,15,"addListener"],[35,41,12,6],[35,42,12,27],[35,60,12,6],[35,62,12,47,"handleKeyboardShow"],[35,80,12,6],[37,0,13,6,"Keyboard"],[37,30,13,15,"addListener"],[37,41,13,6],[37,42,13,27],[37,60,13,6],[37,62,13,47,"handleKeyboardHide"],[37,80,13,6],[38,0,14,5],[38,7,11,4],[38,13,14,11],[39,0,15,6,"Keyboard"],[39,30,15,15,"addListener"],[39,41,15,6],[39,42,15,27],[39,59,15,6],[39,61,15,46,"handleKeyboardShow"],[39,79,15,6],[41,0,16,6,"Keyboard"],[41,30,16,15,"addListener"],[41,41,16,6],[41,42,16,27],[41,59,16,6],[41,61,16,46,"handleKeyboardHide"],[41,79,16,6],[42,0,17,5],[44,0,19,4],[44,13,19,11],[44,25,19,17],[45,0,20,6],[45,12,20,10,"Platform"],[45,34,20,19,"OS"],[45,36,20,10],[45,41,20,26],[45,46,20,6],[45,48,20,33],[46,0,21,8,"Keyboard"],[46,32,21,17,"removeListener"],[46,46,21,8],[46,47,21,32],[46,65,21,8],[46,67,21,52,"handleKeyboardShow"],[46,85,21,8],[48,0,22,8,"Keyboard"],[48,32,22,17,"removeListener"],[48,46,22,8],[48,47,22,32],[48,65,22,8],[48,67,22,52,"handleKeyboardHide"],[48,85,22,8],[49,0,23,7],[49,9,20,6],[49,15,23,13],[50,0,24,8,"Keyboard"],[50,32,24,17,"removeListener"],[50,46,24,8],[50,47,24,32],[50,64,24,8],[50,66,24,51,"handleKeyboardShow"],[50,84,24,8],[52,0,25,8,"Keyboard"],[52,32,25,17,"removeListener"],[52,46,25,8],[52,47,25,32],[52,64,25,8],[52,66,25,51,"handleKeyboardHide"],[52,84,25,8],[53,0,26,7],[54,0,27,5],[54,7,19,4],[55,0,28,3],[55,5,7,2],[55,7,28,5],[55,9,7,2],[56,0,30,2],[56,11,30,9,"isKeyboardShown"],[56,26,30,2],[57,0,31,1]],"functionMap":{"names":["<global>","useIsKeyboardShown","React.useEffect$argument_0","handleKeyboardShow","handleKeyboardHide","<anonymous>"],"mappings":"AAA;eCG;kBCG;+BCC,8BD;+BEC,+BF;WGU;KHQ;GDC;CDG"}},"type":"js/module"}]}