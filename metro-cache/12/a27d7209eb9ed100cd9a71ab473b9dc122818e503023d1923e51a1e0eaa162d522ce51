{"dependencies":[{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":20,"column":18},"end":{"line":20,"column":38}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], \"invariant\");\n\n  var customBubblingEventTypes = {};\n  var customDirectEventTypes = {};\n  exports.customBubblingEventTypes = customBubblingEventTypes;\n  exports.customDirectEventTypes = customDirectEventTypes;\n  var viewConfigCallbacks = new Map();\n  var viewConfigs = new Map();\n\n  function processEventTypes(viewConfig) {\n    var bubblingEventTypes = viewConfig.bubblingEventTypes,\n        directEventTypes = viewConfig.directEventTypes;\n\n    if (__DEV__) {\n      if (bubblingEventTypes != null && directEventTypes != null) {\n        for (var topLevelType in directEventTypes) {\n          invariant(bubblingEventTypes[topLevelType] == null, 'Event cannot be both direct and bubbling: %s', topLevelType);\n        }\n      }\n    }\n\n    if (bubblingEventTypes != null) {\n      for (var _topLevelType in bubblingEventTypes) {\n        if (customBubblingEventTypes[_topLevelType] == null) {\n          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];\n        }\n      }\n    }\n\n    if (directEventTypes != null) {\n      for (var _topLevelType2 in directEventTypes) {\n        if (customDirectEventTypes[_topLevelType2] == null) {\n          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];\n        }\n      }\n    }\n  }\n\n  exports.register = function (name, callback) {\n    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);\n    invariant(typeof callback === 'function', 'View config getter callback for component `%s` must be a function (received `%s`)', name, callback === null ? 'null' : typeof callback);\n    viewConfigCallbacks.set(name, callback);\n    return name;\n  };\n\n  exports.get = function (name) {\n    var viewConfig;\n\n    if (!viewConfigs.has(name)) {\n      var callback = viewConfigCallbacks.get(name);\n\n      if (typeof callback !== 'function') {\n        invariant(false, 'View config getter callback for component `%s` must be a function (received `%s`).%s', name, callback === null ? 'null' : typeof callback, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');\n      }\n\n      viewConfig = callback();\n      processEventTypes(viewConfig);\n      viewConfigs.set(name, viewConfig);\n      viewConfigCallbacks.set(name, null);\n    } else {\n      viewConfig = viewConfigs.get(name);\n    }\n\n    invariant(viewConfig, 'View config not found for name %s', name);\n    return viewConfig;\n  };\n});","lineCount":70,"map":[[2,0,13,0],[4,0,20,0],[4,6,20,6,"invariant"],[4,15,20,15],[4,18,20,18,"require"],[4,29,20,25],[4,61,20,0],[6,0,23,0],[6,6,23,6,"customBubblingEventTypes"],[6,30,31,1],[6,33,31,4],[6,35,23,0],[7,0,32,0],[7,6,32,6,"customDirectEventTypes"],[7,28,37,1],[7,31,37,4],[7,33,32,0],[8,0,39,0,"exports"],[8,2,39,0,"exports"],[8,9,39,7],[8,10,39,8,"customBubblingEventTypes"],[8,34,39,0],[8,37,39,35,"customBubblingEventTypes"],[8,61,39,0],[9,0,40,0,"exports"],[9,2,40,0,"exports"],[9,9,40,7],[9,10,40,8,"customDirectEventTypes"],[9,32,40,0],[9,35,40,33,"customDirectEventTypes"],[9,57,40,0],[10,0,42,0],[10,6,42,6,"viewConfigCallbacks"],[10,25,42,25],[10,28,42,28],[10,32,42,32,"Map"],[10,35,42,28],[10,37,42,0],[11,0,43,0],[11,6,43,6,"viewConfigs"],[11,17,43,17],[11,20,43,20],[11,24,43,24,"Map"],[11,27,43,20],[11,29,43,0],[13,0,45,0],[13,11,45,9,"processEventTypes"],[13,28,45,0],[13,29,46,2,"viewConfig"],[13,39,45,0],[13,41,47,8],[14,0,48,2],[14,8,48,9,"bubblingEventTypes"],[14,26,48,2],[14,29,48,49,"viewConfig"],[14,39,48,2],[14,40,48,9,"bubblingEventTypes"],[14,58,48,2],[15,0,48,2],[15,8,48,29,"directEventTypes"],[15,24,48,2],[15,27,48,49,"viewConfig"],[15,37,48,2],[15,38,48,29,"directEventTypes"],[15,54,48,2],[17,0,50,2],[17,8,50,6,"__DEV__"],[17,15,50,2],[17,17,50,15],[18,0,51,4],[18,10,51,8,"bubblingEventTypes"],[18,28,51,26],[18,32,51,30],[18,36,51,8],[18,40,51,38,"directEventTypes"],[18,56,51,54],[18,60,51,58],[18,64,51,4],[18,66,51,64],[19,0,52,6],[19,13,52,11],[19,17,52,17,"topLevelType"],[19,29,52,6],[19,33,52,33,"directEventTypes"],[19,49,52,6],[19,51,52,51],[20,0,53,8,"invariant"],[20,10,53,8,"invariant"],[20,19,53,17],[20,20,54,10,"bubblingEventTypes"],[20,38,54,28],[20,39,54,29,"topLevelType"],[20,51,54,28],[20,52,54,10],[20,56,54,46],[20,60,53,17],[20,62,55,10],[20,108,53,17],[20,110,56,10,"topLevelType"],[20,122,53,17],[20,123,53,8],[21,0,58,7],[22,0,59,5],[23,0,60,3],[25,0,62,2],[25,8,62,6,"bubblingEventTypes"],[25,26,62,24],[25,30,62,28],[25,34,62,2],[25,36,62,34],[26,0,63,4],[26,11,63,9],[26,15,63,15,"topLevelType"],[26,28,63,4],[26,32,63,31,"bubblingEventTypes"],[26,50,63,4],[26,52,63,51],[27,0,64,6],[27,12,64,10,"customBubblingEventTypes"],[27,36,64,34],[27,37,64,35,"topLevelType"],[27,50,64,34],[27,51,64,10],[27,55,64,52],[27,59,64,6],[27,61,64,58],[28,0,65,8,"customBubblingEventTypes"],[28,10,65,8,"customBubblingEventTypes"],[28,34,65,32],[28,35,65,33,"topLevelType"],[28,48,65,32],[28,49,65,8],[28,52,66,10,"bubblingEventTypes"],[28,70,66,28],[28,71,66,29,"topLevelType"],[28,84,66,28],[28,85,65,8],[29,0,67,7],[30,0,68,5],[31,0,69,3],[33,0,71,2],[33,8,71,6,"directEventTypes"],[33,24,71,22],[33,28,71,26],[33,32,71,2],[33,34,71,32],[34,0,72,4],[34,11,72,9],[34,15,72,15,"topLevelType"],[34,29,72,4],[34,33,72,31,"directEventTypes"],[34,49,72,4],[34,51,72,49],[35,0,73,6],[35,12,73,10,"customDirectEventTypes"],[35,34,73,32],[35,35,73,33,"topLevelType"],[35,49,73,32],[35,50,73,10],[35,54,73,50],[35,58,73,6],[35,60,73,56],[36,0,74,8,"customDirectEventTypes"],[36,10,74,8,"customDirectEventTypes"],[36,32,74,30],[36,33,74,31,"topLevelType"],[36,47,74,30],[36,48,74,8],[36,51,74,47,"directEventTypes"],[36,67,74,63],[36,68,74,64,"topLevelType"],[36,82,74,63],[36,83,74,8],[37,0,75,7],[38,0,76,5],[39,0,77,3],[40,0,78,1],[42,0,85,0,"exports"],[42,2,85,0,"exports"],[42,9,85,7],[42,10,85,8,"register"],[42,18,85,0],[42,21,85,19],[42,31,85,28,"name"],[42,35,85,19],[42,37,85,42,"callback"],[42,45,85,19],[42,47,85,78],[43,0,86,2,"invariant"],[43,4,86,2,"invariant"],[43,13,86,11],[43,14,87,4],[43,15,87,5,"viewConfigCallbacks"],[43,34,87,24],[43,35,87,25,"has"],[43,38,87,5],[43,39,87,29,"name"],[43,43,87,5],[43,44,86,11],[43,46,88,4],[43,97,86,11],[43,99,89,4,"name"],[43,103,86,11],[43,104,86,2],[44,0,91,2,"invariant"],[44,4,91,2,"invariant"],[44,13,91,11],[44,14,92,4],[44,21,92,11,"callback"],[44,29,92,4],[44,34,92,24],[44,44,91,11],[44,46,93,4],[44,129,91,11],[44,131,94,4,"name"],[44,135,91,11],[44,137,95,4,"callback"],[44,145,95,12],[44,150,95,17],[44,154,95,4],[44,157,95,24],[44,163,95,4],[44,166,95,33],[44,173,95,40,"callback"],[44,181,91,11],[44,182,91,2],[45,0,97,2,"viewConfigCallbacks"],[45,4,97,2,"viewConfigCallbacks"],[45,23,97,21],[45,24,97,22,"set"],[45,27,97,2],[45,28,97,26,"name"],[45,32,97,2],[45,34,97,32,"callback"],[45,42,97,2],[46,0,98,2],[46,11,98,9,"name"],[46,15,98,2],[47,0,99,1],[47,3,85,0],[49,0,106,0,"exports"],[49,2,106,0,"exports"],[49,9,106,7],[49,10,106,8,"get"],[49,13,106,0],[49,16,106,14],[49,26,106,23,"name"],[49,30,106,14],[49,32,106,75],[50,0,107,2],[50,8,107,6,"viewConfig"],[50,18,107,2],[52,0,108,2],[52,8,108,6],[52,9,108,7,"viewConfigs"],[52,20,108,18],[52,21,108,19,"has"],[52,24,108,7],[52,25,108,23,"name"],[52,29,108,7],[52,30,108,2],[52,32,108,30],[53,0,109,4],[53,10,109,10,"callback"],[53,18,109,18],[53,21,109,21,"viewConfigCallbacks"],[53,40,109,40],[53,41,109,41,"get"],[53,44,109,21],[53,45,109,45,"name"],[53,49,109,21],[53,50,109,4],[55,0,110,4],[55,10,110,8],[55,17,110,15,"callback"],[55,25,110,8],[55,30,110,28],[55,40,110,4],[55,42,110,40],[56,0,111,6,"invariant"],[56,8,111,6,"invariant"],[56,17,111,15],[56,18,112,8],[56,23,111,15],[56,25,113,8],[56,111,111,15],[56,113,114,8,"name"],[56,117,111,15],[56,119,115,8,"callback"],[56,127,115,16],[56,132,115,21],[56,136,115,8],[56,139,115,28],[56,145,115,8],[56,148,115,37],[56,155,115,44,"callback"],[56,163,111,15],[56,165,116,8],[56,172,116,15,"name"],[56,176,116,19],[56,177,116,20],[56,178,116,19],[56,179,116,8],[56,184,116,27],[56,192,116,8],[56,196,116,39],[56,204,116,47,"test"],[56,208,116,39],[56,209,116,52,"name"],[56,213,116,56],[56,214,116,57],[56,215,116,56],[56,216,116,39],[56,217,116,8],[56,220,117,12],[56,280,116,8],[56,283,118,12],[56,285,111,15],[56,286,111,6],[57,0,120,5],[59,0,121,4,"viewConfig"],[59,6,121,4,"viewConfig"],[59,16,121,14],[59,19,121,17,"callback"],[59,27,121,25],[59,29,121,4],[60,0,122,4,"processEventTypes"],[60,6,122,4,"processEventTypes"],[60,23,122,21],[60,24,122,22,"viewConfig"],[60,34,122,21],[60,35,122,4],[61,0,123,4,"viewConfigs"],[61,6,123,4,"viewConfigs"],[61,17,123,15],[61,18,123,16,"set"],[61,21,123,4],[61,22,123,20,"name"],[61,26,123,4],[61,28,123,26,"viewConfig"],[61,38,123,4],[62,0,127,4,"viewConfigCallbacks"],[62,6,127,4,"viewConfigCallbacks"],[62,25,127,23],[62,26,127,24,"set"],[62,29,127,4],[62,30,127,28,"name"],[62,34,127,4],[62,36,127,34],[62,40,127,4],[63,0,128,3],[63,5,108,2],[63,11,128,9],[64,0,129,4,"viewConfig"],[64,6,129,4,"viewConfig"],[64,16,129,14],[64,19,129,17,"viewConfigs"],[64,30,129,28],[64,31,129,29,"get"],[64,34,129,17],[64,35,129,33,"name"],[64,39,129,17],[64,40,129,4],[65,0,130,3],[67,0,131,2,"invariant"],[67,4,131,2,"invariant"],[67,13,131,11],[67,14,131,12,"viewConfig"],[67,24,131,11],[67,26,131,24],[67,61,131,11],[67,63,131,61,"name"],[67,67,131,11],[67,68,131,2],[68,0,132,2],[68,11,132,9,"viewConfig"],[68,21,132,2],[69,0,133,1],[69,3,106,0]],"functionMap":{"names":["<global>","processEventTypes","exports.register","exports.get"],"mappings":"AAA;AC4C;CDiC;mBEO;CFc;cGO;CH2B"}},"type":"js/module"}]}