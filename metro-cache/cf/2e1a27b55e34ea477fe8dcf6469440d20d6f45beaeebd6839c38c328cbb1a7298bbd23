{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"color","data":{"isAsync":false,"locs":[]}},{"name":"./CardSheet","data":{"isAsync":false,"locs":[]}},{"name":"../GestureHandler","data":{"isAsync":false,"locs":[]}},{"name":"../../utils/CardAnimationContext","data":{"isAsync":false,"locs":[]}},{"name":"../../utils/getDistanceForDirection","data":{"isAsync":false,"locs":[]}},{"name":"../../utils/getInvertedMultiplier","data":{"isAsync":false,"locs":[]}},{"name":"../../utils/memoize","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"color\"));\n\n  var _CardSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./CardSheet\"));\n\n  var _GestureHandler = _$$_REQUIRE(_dependencyMap[13], \"../GestureHandler\");\n\n  var _CardAnimationContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"../../utils/CardAnimationContext\"));\n\n  var _getDistanceForDirection = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../../utils/getDistanceForDirection\"));\n\n  var _getInvertedMultiplier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"../../utils/getInvertedMultiplier\"));\n\n  var _memoize = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"../../utils/memoize\"));\n\n  var _jsxFileName = \"/home/moglix/tmdb_movies_app/node_modules/@react-navigation/stack/src/views/Stack/Card.tsx\";\n  var _excluded = [\"styleInterpolator\", \"index\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\"];\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var GESTURE_VELOCITY_IMPACT = 0.3;\n  var TRUE = 1;\n  var FALSE = 0;\n  var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\n  var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n  var useNativeDriver = _reactNative.Platform.OS !== 'web';\n\n  var hasOpacityStyle = function hasOpacityStyle(style) {\n    if (style) {\n      var flattenedStyle = _reactNative.StyleSheet.flatten(style);\n\n      return flattenedStyle.opacity != null;\n    }\n\n    return false;\n  };\n\n  var Card = function (_React$Component) {\n    (0, _inherits2.default)(Card, _React$Component);\n\n    var _super = _createSuper(Card);\n\n    function Card() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Card);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.isCurrentlyMounted = false;\n      _this.isClosing = new _reactNative.Animated.Value(FALSE);\n      _this.inverted = new _reactNative.Animated.Value((0, _getInvertedMultiplier.default)(_this.props.gestureDirection));\n      _this.layout = {\n        width: new _reactNative.Animated.Value(_this.props.layout.width),\n        height: new _reactNative.Animated.Value(_this.props.layout.height)\n      };\n      _this.isSwiping = new _reactNative.Animated.Value(FALSE);\n\n      _this.animate = function (_ref) {\n        var closing = _ref.closing,\n            velocity = _ref.velocity;\n        var _this$props = _this.props,\n            gesture = _this$props.gesture,\n            transitionSpec = _this$props.transitionSpec,\n            onOpen = _this$props.onOpen,\n            onClose = _this$props.onClose,\n            onTransition = _this$props.onTransition;\n\n        var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n          closing: closing\n        }));\n\n        _this.lastToValue = toValue;\n        var spec = closing ? transitionSpec.close : transitionSpec.open;\n        var animation = spec.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n\n        _this.setPointerEventsEnabled(!closing);\n\n        _this.handleStartInteraction();\n\n        clearTimeout(_this.pendingGestureCallback);\n        onTransition == null ? void 0 : onTransition({\n          closing: closing,\n          gesture: velocity !== undefined\n        });\n        animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n          velocity: velocity,\n          toValue: toValue,\n          useNativeDriver: useNativeDriver,\n          isInteraction: false\n        })).start(function (_ref2) {\n          var finished = _ref2.finished;\n\n          _this.handleEndInteraction();\n\n          clearTimeout(_this.pendingGestureCallback);\n\n          if (finished) {\n            if (closing) {\n              onClose();\n            } else {\n              onOpen();\n            }\n\n            if (_this.isCurrentlyMounted) {\n              _this.forceUpdate();\n            }\n          }\n        });\n      };\n\n      _this.getAnimateToValue = function (_ref3) {\n        var closing = _ref3.closing,\n            layout = _ref3.layout,\n            gestureDirection = _ref3.gestureDirection;\n\n        if (!closing) {\n          return 0;\n        }\n\n        return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n      };\n\n      _this.setPointerEventsEnabled = function (enabled) {\n        var _this$contentRef$curr;\n\n        var pointerEvents = enabled ? 'box-none' : 'none';\n        (_this$contentRef$curr = _this.contentRef.current) == null ? void 0 : _this$contentRef$curr.setNativeProps({\n          pointerEvents: pointerEvents\n        });\n      };\n\n      _this.handleStartInteraction = function () {\n        if (_this.interactionHandle === undefined) {\n          _this.interactionHandle = _reactNative.InteractionManager.createInteractionHandle();\n        }\n      };\n\n      _this.handleEndInteraction = function () {\n        if (_this.interactionHandle !== undefined) {\n          _reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);\n\n          _this.interactionHandle = undefined;\n        }\n      };\n\n      _this.handleGestureStateChange = function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props2 = _this.props,\n            layout = _this$props2.layout,\n            onClose = _this$props2.onClose,\n            onGestureBegin = _this$props2.onGestureBegin,\n            onGestureCanceled = _this$props2.onGestureCanceled,\n            onGestureEnd = _this$props2.onGestureEnd,\n            gestureDirection = _this$props2.gestureDirection,\n            gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n\n        switch (nativeEvent.state) {\n          case _GestureHandler.GestureState.BEGAN:\n            _this.isSwiping.setValue(TRUE);\n\n            _this.handleStartInteraction();\n\n            onGestureBegin == null ? void 0 : onGestureBegin();\n            break;\n\n          case _GestureHandler.GestureState.CANCELLED:\n            {\n              _this.isSwiping.setValue(FALSE);\n\n              _this.handleEndInteraction();\n\n              var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n\n              _this.animate({\n                closing: _this.props.closing,\n                velocity: velocity\n              });\n\n              onGestureCanceled == null ? void 0 : onGestureCanceled();\n              break;\n            }\n\n          case _GestureHandler.GestureState.END:\n            {\n              _this.isSwiping.setValue(FALSE);\n\n              var distance;\n              var translation;\n\n              var _velocity;\n\n              if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n                distance = layout.height;\n                translation = nativeEvent.translationY;\n                _velocity = nativeEvent.velocityY;\n              } else {\n                distance = layout.width;\n                translation = nativeEvent.translationX;\n                _velocity = nativeEvent.velocityX;\n              }\n\n              var closing = (translation + _velocity * gestureVelocityImpact) * (0, _getInvertedMultiplier.default)(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n\n              _this.animate({\n                closing: closing,\n                velocity: _velocity\n              });\n\n              if (closing) {\n                _this.pendingGestureCallback = setTimeout(function () {\n                  onClose();\n\n                  _this.forceUpdate();\n                }, 32);\n              }\n\n              onGestureEnd == null ? void 0 : onGestureEnd();\n              break;\n            }\n        }\n      };\n\n      _this.getInterpolatedStyle = (0, _memoize.default)(function (styleInterpolator, index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n        return styleInterpolator({\n          index: index,\n          current: {\n            progress: current\n          },\n          next: next && {\n            progress: next\n          },\n          closing: _this.isClosing,\n          swiping: _this.isSwiping,\n          inverted: _this.inverted,\n          layouts: {\n            screen: layout\n          },\n          insets: {\n            top: insetTop,\n            right: insetRight,\n            bottom: insetBottom,\n            left: insetLeft\n          }\n        });\n      });\n      _this.getCardAnimationContext = (0, _memoize.default)(function (index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n        return {\n          index: index,\n          current: {\n            progress: current\n          },\n          next: next && {\n            progress: next\n          },\n          closing: _this.isClosing,\n          swiping: _this.isSwiping,\n          inverted: _this.inverted,\n          layouts: {\n            screen: layout\n          },\n          insets: {\n            top: insetTop,\n            right: insetRight,\n            bottom: insetBottom,\n            left: insetLeft\n          }\n        };\n      });\n      _this.contentRef = React.createRef();\n      return _this;\n    }\n\n    (0, _createClass2.default)(Card, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.animate({\n          closing: this.props.closing\n        });\n        this.isCurrentlyMounted = true;\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var _this$props3 = this.props,\n            layout = _this$props3.layout,\n            gestureDirection = _this$props3.gestureDirection,\n            closing = _this$props3.closing;\n        var width = layout.width,\n            height = layout.height;\n\n        if (width !== prevProps.layout.width) {\n          this.layout.width.setValue(width);\n        }\n\n        if (height !== prevProps.layout.height) {\n          this.layout.height.setValue(height);\n        }\n\n        if (gestureDirection !== prevProps.gestureDirection) {\n          this.inverted.setValue((0, _getInvertedMultiplier.default)(gestureDirection));\n        }\n\n        var toValue = this.getAnimateToValue(this.props);\n\n        if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n          this.animate({\n            closing: closing\n          });\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.isCurrentlyMounted = false;\n        this.handleEndInteraction();\n      }\n    }, {\n      key: \"gestureActivationCriteria\",\n      value: function gestureActivationCriteria() {\n        var _this$props4 = this.props,\n            layout = _this$props4.layout,\n            gestureDirection = _this$props4.gestureDirection,\n            gestureResponseDistance = _this$props4.gestureResponseDistance;\n        var distance = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? (gestureResponseDistance == null ? void 0 : gestureResponseDistance.vertical) !== undefined ? gestureResponseDistance.vertical : GESTURE_RESPONSE_DISTANCE_VERTICAL : (gestureResponseDistance == null ? void 0 : gestureResponseDistance.horizontal) !== undefined ? gestureResponseDistance.horizontal : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n        if (gestureDirection === 'vertical') {\n          return {\n            maxDeltaX: 15,\n            minOffsetY: 5,\n            hitSlop: {\n              bottom: -layout.height + distance\n            }\n          };\n        } else if (gestureDirection === 'vertical-inverted') {\n          return {\n            maxDeltaX: 15,\n            minOffsetY: -5,\n            hitSlop: {\n              top: -layout.height + distance\n            }\n          };\n        } else {\n          var hitSlop = -layout.width + distance;\n          var invertedMultiplier = (0, _getInvertedMultiplier.default)(gestureDirection);\n\n          if (invertedMultiplier === 1) {\n            return {\n              minOffsetX: 5,\n              maxDeltaY: 20,\n              hitSlop: {\n                right: hitSlop\n              }\n            };\n          } else {\n            return {\n              minOffsetX: -5,\n              maxDeltaY: 20,\n              hitSlop: {\n                left: hitSlop\n              }\n            };\n          }\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props5 = this.props,\n            styleInterpolator = _this$props5.styleInterpolator,\n            index = _this$props5.index,\n            current = _this$props5.current,\n            gesture = _this$props5.gesture,\n            next = _this$props5.next,\n            layout = _this$props5.layout,\n            insets = _this$props5.insets,\n            overlay = _this$props5.overlay,\n            overlayEnabled = _this$props5.overlayEnabled,\n            shadowEnabled = _this$props5.shadowEnabled,\n            gestureEnabled = _this$props5.gestureEnabled,\n            gestureDirection = _this$props5.gestureDirection,\n            pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n            children = _this$props5.children,\n            customContainerStyle = _this$props5.containerStyle,\n            contentStyle = _this$props5.contentStyle,\n            rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);\n        var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n        var animationContext = this.getCardAnimationContext(index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n        var containerStyle = interpolatedStyle.containerStyle,\n            cardStyle = interpolatedStyle.cardStyle,\n            overlayStyle = interpolatedStyle.overlayStyle,\n            shadowStyle = interpolatedStyle.shadowStyle;\n        var handleGestureEvent = gestureEnabled ? _reactNative.Animated.event([{\n          nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n            translationY: gesture\n          } : {\n            translationX: gesture\n          }\n        }], {\n          useNativeDriver: useNativeDriver\n        }) : undefined;\n\n        var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(contentStyle || {}),\n            backgroundColor = _StyleSheet$flatten.backgroundColor;\n\n        var isTransparent = typeof backgroundColor === 'string' ? (0, _color.default)(backgroundColor).alpha() === 0 : false;\n        return React.createElement(_CardAnimationContext.default.Provider, {\n          value: animationContext,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 7\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: {\n            opacity: current\n          },\n          collapsable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 9\n          }\n        }), React.createElement(_reactNative.View, (0, _extends2.default)({\n          pointerEvents: \"box-none\"\n        }, rest, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 9\n          }\n        }), overlayEnabled ? React.createElement(_reactNative.View, {\n          pointerEvents: \"box-none\",\n          style: _reactNative.StyleSheet.absoluteFill,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }\n        }, overlay({\n          style: overlayStyle\n        })) : null, React.createElement(_reactNative.Animated.View, {\n          needsOffscreenAlphaCompositing: hasOpacityStyle(containerStyle),\n          style: [styles.container, containerStyle, customContainerStyle],\n          pointerEvents: \"box-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 11\n          }\n        }, React.createElement(_GestureHandler.PanGestureHandler, (0, _extends2.default)({\n          enabled: layout.width !== 0 && gestureEnabled,\n          onGestureEvent: handleGestureEvent,\n          onHandlerStateChange: this.handleGestureStateChange\n        }, this.gestureActivationCriteria(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }\n        }), React.createElement(_reactNative.Animated.View, {\n          style: [styles.container, cardStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }\n        }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(_reactNative.Animated.View, {\n          style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n            backgroundColor: backgroundColor\n          }, shadowStyle],\n          pointerEvents: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 19\n          }\n        }) : null, React.createElement(_CardSheet.default, {\n          ref: this.contentRef,\n          enabled: pageOverflowEnabled,\n          layout: layout,\n          style: contentStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }\n        }, children))))));\n      }\n    }]);\n    return Card;\n  }(React.Component);\n\n  exports.default = Card;\n  Card.defaultProps = {\n    overlayEnabled: _reactNative.Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: function overlay(_ref5) {\n      var style = _ref5.style;\n      return style ? React.createElement(_reactNative.Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.overlay, style],\n        __self: Card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }) : null;\n    }\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    overlay: {\n      flex: 1,\n      backgroundColor: '#000'\n    },\n    shadow: {\n      position: 'absolute',\n      shadowRadius: 5,\n      shadowColor: '#000',\n      shadowOpacity: 0.3\n    },\n    shadowHorizontal: {\n      top: 0,\n      bottom: 0,\n      width: 3,\n      shadowOffset: {\n        width: -1,\n        height: 1\n      }\n    },\n    shadowLeft: {\n      left: 0\n    },\n    shadowRight: {\n      right: 0\n    },\n    shadowVertical: {\n      left: 0,\n      right: 0,\n      height: 3,\n      shadowOffset: {\n        width: 1,\n        height: -1\n      }\n    },\n    shadowTop: {\n      top: 0\n    },\n    shadowBottom: {\n      bottom: 0\n    }\n  });\n});","lineCount":609,"map":[[25,0,1,0],[27,0,2,0],[29,0,13,0],[31,0,15,0],[33,0,16,0],[35,0,21,0],[37,0,22,0],[39,0,23,0],[41,0,24,0],[58,0,69,0],[58,6,69,6,"GESTURE_VELOCITY_IMPACT"],[58,29,69,29],[58,32,69,32],[58,35,69,0],[59,0,71,0],[59,6,71,6,"TRUE"],[59,10,71,10],[59,13,71,13],[59,14,71,0],[60,0,72,0],[60,6,72,6,"FALSE"],[60,11,72,11],[60,14,72,14],[60,15,72,0],[61,0,77,0],[61,6,77,6,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[61,42,77,42],[61,45,77,45],[61,47,77,0],[62,0,78,0],[62,6,78,6,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[62,40,78,40],[62,43,78,43],[62,46,78,0],[63,0,80,0],[63,6,80,6,"useNativeDriver"],[63,21,80,21],[63,24,80,24,"Platform"],[63,46,80,33,"OS"],[63,48,80,24],[63,53,80,40],[63,58,80,0],[65,0,82,0],[65,6,82,6,"hasOpacityStyle"],[65,21,82,21],[65,24,82,24],[65,33,82,6,"hasOpacityStyle"],[65,48,82,24],[65,49,82,25,"style"],[65,54,82,24],[65,56,82,40],[66,0,83,2],[66,8,83,6,"style"],[66,13,83,2],[66,15,83,13],[67,0,84,4],[67,10,84,10,"flattenedStyle"],[67,24,84,24],[67,27,84,27,"StyleSheet"],[67,51,84,38,"flatten"],[67,58,84,27],[67,59,84,46,"style"],[67,64,84,27],[67,65,84,4],[69,0,85,4],[69,13,85,11,"flattenedStyle"],[69,27,85,25],[69,28,85,26,"opacity"],[69,35,85,11],[69,39,85,37],[69,43,85,4],[70,0,86,3],[72,0,88,2],[72,11,88,9],[72,16,88,2],[73,0,89,1],[73,3,82,0],[75,6,91,21,"Card"],[75,10],[90,12,148,10,"isCurrentlyMounted"],[90,30],[90,33,148,31],[90,38],[91,12,150,10,"isClosing"],[91,21],[91,24,150,22],[91,28,150,26,"Animated"],[91,50,150,35,"Value"],[91,55,150,22],[91,56,150,41,"FALSE"],[91,61,150,22],[91,62],[92,12,152,10,"inverted"],[92,20],[92,23,152,21],[92,27,152,25,"Animated"],[92,49,152,34,"Value"],[92,54,152,21],[92,55,153,4],[92,91,153,26],[92,97,153,31,"props"],[92,102,153,26],[92,103,153,37,"gestureDirection"],[92,119,153,4],[92,120,152,21],[92,121],[93,12,156,10,"layout"],[93,18],[93,21,156,19],[94,0,157,4,"width"],[94,8,157,4,"width"],[94,13,157,9],[94,15,157,11],[94,19,157,15,"Animated"],[94,41,157,24,"Value"],[94,46,157,11],[94,47,157,30],[94,53,157,35,"props"],[94,58,157,30],[94,59,157,41,"layout"],[94,65,157,30],[94,66,157,48,"width"],[94,71,157,11],[94,72,156,19],[95,0,158,4,"height"],[95,8,158,4,"height"],[95,14,158,10],[95,16,158,12],[95,20,158,16,"Animated"],[95,42,158,25,"Value"],[95,47,158,12],[95,48,158,31],[95,54,158,36,"props"],[95,59,158,31],[95,60,158,42,"layout"],[95,66,158,31],[95,67,158,49,"height"],[95,73,158,12],[96,0,156,19],[96,7],[97,12,161,10,"isSwiping"],[97,21],[97,24,161,22],[97,28,161,26,"Animated"],[97,50,161,35,"Value"],[97,55,161,22],[97,56,161,41,"FALSE"],[97,61,161,22],[97,62],[99,12,169,10,"animate"],[99,19],[99,22,169,20],[99,38,175,8],[100,0,175,8],[100,12,170,4,"closing"],[100,19,175,8],[100,27,170,4,"closing"],[100,34,175,8],[101,0,175,8],[101,12,171,4,"velocity"],[101,20,175,8],[101,28,171,4,"velocity"],[101,36,175,8],[102,0,176,4],[102,26,182,8],[102,32,182,13,"props"],[102,37,176,4],[103,0,176,4],[103,12,177,6,"gesture"],[103,19,176,4],[103,34,177,6,"gesture"],[103,41,176,4],[104,0,176,4],[104,12,178,6,"transitionSpec"],[104,26,176,4],[104,41,178,6,"transitionSpec"],[104,55,176,4],[105,0,176,4],[105,12,179,6,"onOpen"],[105,18,176,4],[105,33,179,6,"onOpen"],[105,39,176,4],[106,0,176,4],[106,12,180,6,"onClose"],[106,19,176,4],[106,34,180,6,"onClose"],[106,41,176,4],[107,0,176,4],[107,12,181,6,"onTransition"],[107,24,176,4],[107,39,181,6,"onTransition"],[107,51,176,4],[109,0,184,4],[109,12,184,10,"toValue"],[109,19,184,17],[109,22,184,20],[109,28,184,25,"getAnimateToValue"],[109,45,184,20],[109,78,185,9],[109,84,185,14,"props"],[109,89,184,20],[110,0,186,6,"closing"],[110,10,186,6,"closing"],[110,17,186,13],[110,19,186,6,"closing"],[111,0,184,20],[111,11,184,4],[113,0,189,4],[113,14,189,9,"lastToValue"],[113,25,189,4],[113,28,189,23,"toValue"],[113,35,189,4],[114,0,191,4],[114,12,191,10,"spec"],[114,16,191,14],[114,19,191,17,"closing"],[114,26,191,24],[114,29,191,27,"transitionSpec"],[114,43,191,41],[114,44,191,42,"close"],[114,49,191,24],[114,52,191,50,"transitionSpec"],[114,66,191,64],[114,67,191,65,"open"],[114,71,191,4],[115,0,193,4],[115,12,193,10,"animation"],[115,21,193,19],[115,24,194,6,"spec"],[115,28,194,10],[115,29,194,11,"animation"],[115,38,194,6],[115,43,194,25],[115,51,194,6],[115,54,194,36,"Animated"],[115,76,194,45,"spring"],[115,82,194,6],[115,85,194,54,"Animated"],[115,107,194,63,"timing"],[115,113,193,4],[117,0,196,4],[117,14,196,9,"setPointerEventsEnabled"],[117,37,196,4],[117,38,196,33],[117,39,196,34,"closing"],[117,46,196,4],[119,0,197,4],[119,14,197,9,"handleStartInteraction"],[119,36,197,4],[121,0,199,4,"clearTimeout"],[121,8,199,4,"clearTimeout"],[121,20,199,16],[121,21,199,17],[121,27,199,22,"pendingGestureCallback"],[121,49,199,16],[121,50,199,4],[122,0,201,4,"onTransition"],[122,8,201,4,"onTransition"],[122,20,201,16],[122,28,201,4],[122,40,201,4,"onTransition"],[122,52,201,16],[122,53,201,19],[123,0,201,21,"closing"],[123,10,201,21,"closing"],[123,17,201,28],[123,19,201,21,"closing"],[123,26,201,19],[124,0,201,30,"gesture"],[124,10,201,30,"gesture"],[124,17,201,37],[124,19,201,39,"velocity"],[124,27,201,47],[124,32,201,52,"undefined"],[125,0,201,19],[125,9,201,16],[125,10,201,4],[126,0,202,4,"animation"],[126,8,202,4,"animation"],[126,17,202,13],[126,18,202,14,"gesture"],[126,25,202,13],[126,59,203,9,"spec"],[126,63,203,13],[126,64,203,14,"config"],[126,70,202,13],[127,0,204,6,"velocity"],[127,10,204,6,"velocity"],[127,18,204,14],[127,20,204,6,"velocity"],[127,28,202,13],[128,0,205,6,"toValue"],[128,10,205,6,"toValue"],[128,17,205,13],[128,19,205,6,"toValue"],[128,26,202,13],[129,0,206,6,"useNativeDriver"],[129,10,206,6,"useNativeDriver"],[129,25,206,21],[129,27,206,6,"useNativeDriver"],[129,42,202,13],[130,0,207,6,"isInteraction"],[130,10,207,6,"isInteraction"],[130,23,207,19],[130,25,207,21],[131,0,202,13],[131,11,202,4],[131,12,208,7,"start"],[131,17,202,4],[131,18,208,13],[131,35,208,31],[132,0,208,31],[132,14,208,16,"finished"],[132,22,208,31],[132,31,208,16,"finished"],[132,39,208,31],[134,0,209,6],[134,16,209,11,"handleEndInteraction"],[134,36,209,6],[136,0,211,6,"clearTimeout"],[136,10,211,6,"clearTimeout"],[136,22,211,18],[136,23,211,19],[136,29,211,24,"pendingGestureCallback"],[136,51,211,18],[136,52,211,6],[138,0,213,6],[138,14,213,10,"finished"],[138,22,213,6],[138,24,213,20],[139,0,214,8],[139,16,214,12,"closing"],[139,23,214,8],[139,25,214,21],[140,0,215,10,"onClose"],[140,14,215,10,"onClose"],[140,21,215,17],[141,0,216,9],[141,13,214,8],[141,19,216,15],[142,0,217,10,"onOpen"],[142,14,217,10,"onOpen"],[142,20,217,16],[143,0,218,9],[145,0,220,8],[145,16,220,12],[145,22,220,17,"isCurrentlyMounted"],[145,40,220,8],[145,42,220,37],[146,0,222,10],[146,20,222,15,"forceUpdate"],[146,31,222,10],[147,0,223,9],[148,0,224,7],[149,0,225,5],[149,9,202,4],[150,0,226,3],[150,7],[152,12,228,10,"getAnimateToValue"],[152,29],[152,32,228,30],[152,49,236,8],[153,0,236,8],[153,12,229,4,"closing"],[153,19,236,8],[153,28,229,4,"closing"],[153,35,236,8],[154,0,236,8],[154,12,230,4,"layout"],[154,18,236,8],[154,27,230,4,"layout"],[154,33,236,8],[155,0,236,8],[155,12,231,4,"gestureDirection"],[155,28,236,8],[155,37,231,4,"gestureDirection"],[155,53,236,8],[157,0,237,4],[157,12,237,8],[157,13,237,9,"closing"],[157,20,237,4],[157,22,237,18],[158,0,238,6],[158,17,238,13],[158,18,238,6],[159,0,239,5],[161,0,241,4],[161,15,241,11],[161,53,241,35,"layout"],[161,59,241,11],[161,61,241,43,"gestureDirection"],[161,77,241,11],[161,78,241,4],[162,0,242,3],[162,7],[164,12,244,10,"setPointerEventsEnabled"],[164,35],[164,38,244,36],[164,48,244,37,"enabled"],[164,55,244,36],[164,57,244,58],[165,0,244,58],[167,0,245,4],[167,12,245,10,"pointerEvents"],[167,25,245,23],[167,28,245,26,"enabled"],[167,35,245,33],[167,38,245,36],[167,48,245,33],[167,51,245,49],[167,57,245,4],[168,0,247,4],[168,39,247,9,"contentRef"],[168,49,247,4],[168,50,247,20,"current"],[168,57,247,4],[168,100,247,29,"setNativeProps"],[168,114,247,4],[168,115,247,44],[169,0,247,46,"pointerEvents"],[169,10,247,46,"pointerEvents"],[169,23,247,59],[169,25,247,46,"pointerEvents"],[170,0,247,44],[170,9,247,4],[171,0,248,3],[171,7],[173,12,250,10,"handleStartInteraction"],[173,34],[173,37,250,35],[173,49,250,41],[174,0,251,4],[174,12,251,8],[174,18,251,13,"interactionHandle"],[174,35,251,8],[174,40,251,35,"undefined"],[174,49,251,4],[174,51,251,46],[175,0,252,6],[175,16,252,11,"interactionHandle"],[175,33,252,6],[175,36,252,31,"InteractionManager"],[175,68,252,50,"createInteractionHandle"],[175,91,252,31],[175,93,252,6],[176,0,253,5],[177,0,254,3],[177,7],[179,12,256,10,"handleEndInteraction"],[179,32],[179,35,256,33],[179,47,256,39],[180,0,257,4],[180,12,257,8],[180,18,257,13,"interactionHandle"],[180,35,257,8],[180,40,257,35,"undefined"],[180,49,257,4],[180,51,257,46],[181,0,258,6,"InteractionManager"],[181,42,258,25,"clearInteractionHandle"],[181,64,258,6],[181,65,258,48],[181,71,258,53,"interactionHandle"],[181,88,258,6],[183,0,259,6],[183,16,259,11,"interactionHandle"],[183,33,259,6],[183,36,259,31,"undefined"],[183,45,259,6],[184,0,260,5],[185,0,261,3],[185,7],[187,12,263,10,"handleGestureStateChange"],[187,36],[187,39,263,37],[187,56,265,39],[188,0,265,39],[188,12,264,4,"nativeEvent"],[188,23,265,39],[188,32,264,4,"nativeEvent"],[188,43,265,39],[189,0,266,4],[189,27,274,8],[189,33,274,13,"props"],[189,38,266,4],[190,0,266,4],[190,12,267,6,"layout"],[190,18,266,4],[190,34,267,6,"layout"],[190,40,266,4],[191,0,266,4],[191,12,268,6,"onClose"],[191,19,266,4],[191,35,268,6,"onClose"],[191,42,266,4],[192,0,266,4],[192,12,269,6,"onGestureBegin"],[192,26,266,4],[192,42,269,6,"onGestureBegin"],[192,56,266,4],[193,0,266,4],[193,12,270,6,"onGestureCanceled"],[193,29,266,4],[193,45,270,6,"onGestureCanceled"],[193,62,266,4],[194,0,266,4],[194,12,271,6,"onGestureEnd"],[194,24,266,4],[194,40,271,6,"onGestureEnd"],[194,52,266,4],[195,0,266,4],[195,12,272,6,"gestureDirection"],[195,28,266,4],[195,44,272,6,"gestureDirection"],[195,60,266,4],[196,0,266,4],[196,12,273,6,"gestureVelocityImpact"],[196,33,266,4],[196,49,273,6,"gestureVelocityImpact"],[196,70,266,4],[198,0,276,4],[198,16,276,12,"nativeEvent"],[198,27,276,23],[198,28,276,24,"state"],[198,33,276,4],[199,0,277,6],[199,15,277,11,"GestureState"],[199,44,277,24,"BEGAN"],[199,49,277,6],[200,0,278,8],[200,18,278,13,"isSwiping"],[200,27,278,8],[200,28,278,23,"setValue"],[200,36,278,8],[200,37,278,32,"TRUE"],[200,41,278,8],[202,0,279,8],[202,18,279,13,"handleStartInteraction"],[202,40,279,8],[204,0,280,8,"onGestureBegin"],[204,12,280,8,"onGestureBegin"],[204,26,280,22],[204,34,280,8],[204,46,280,8,"onGestureBegin"],[204,60,280,22],[205,0,281,8],[207,0,282,6],[207,15,282,11,"GestureState"],[207,44,282,24,"CANCELLED"],[207,53,282,6],[208,0,282,35],[209,0,283,8],[209,20,283,13,"isSwiping"],[209,29,283,8],[209,30,283,23,"setValue"],[209,38,283,8],[209,39,283,32,"FALSE"],[209,44,283,8],[211,0,284,8],[211,20,284,13,"handleEndInteraction"],[211,40,284,8],[213,0,286,8],[213,18,286,14,"velocity"],[213,26,286,22],[213,29,287,10,"gestureDirection"],[213,45,287,26],[213,50,287,31],[213,60,287,10],[213,64,288,10,"gestureDirection"],[213,80,288,26],[213,85,288,31],[213,104,287,10],[213,107,289,14,"nativeEvent"],[213,118,289,25],[213,119,289,26,"velocityY"],[213,128,287,10],[213,131,290,14,"nativeEvent"],[213,142,290,25],[213,143,290,26,"velocityX"],[213,152,286,8],[215,0,292,8],[215,20,292,13,"animate"],[215,27,292,8],[215,28,292,21],[216,0,292,23,"closing"],[216,16,292,23,"closing"],[216,23,292,30],[216,25,292,32],[216,31,292,37,"props"],[216,36,292,32],[216,37,292,43,"closing"],[216,44,292,21],[217,0,292,52,"velocity"],[217,16,292,52,"velocity"],[217,24,292,60],[217,26,292,52,"velocity"],[218,0,292,21],[218,15,292,8],[220,0,294,8,"onGestureCanceled"],[220,14,294,8,"onGestureCanceled"],[220,31,294,25],[220,39,294,8],[220,51,294,8,"onGestureCanceled"],[220,68,294,25],[221,0,295,8],[222,0,296,7],[224,0,297,6],[224,15,297,11,"GestureState"],[224,44,297,24,"END"],[224,47,297,6],[225,0,297,29],[226,0,298,8],[226,20,298,13,"isSwiping"],[226,29,298,8],[226,30,298,23,"setValue"],[226,38,298,8],[226,39,298,32,"FALSE"],[226,44,298,8],[228,0,300,8],[228,18,300,12,"distance"],[228,26,300,8],[229,0,301,8],[229,18,301,12,"translation"],[229,29,301,8],[231,0,302,8],[231,18,302,12,"velocity"],[231,27,302,8],[233,0,304,8],[233,18,305,10,"gestureDirection"],[233,34,305,26],[233,39,305,31],[233,49,305,10],[233,53,306,10,"gestureDirection"],[233,69,306,26],[233,74,306,31],[233,93,304,8],[233,95,307,10],[234,0,308,10,"distance"],[234,16,308,10,"distance"],[234,24,308,18],[234,27,308,21,"layout"],[234,33,308,27],[234,34,308,28,"height"],[234,40,308,10],[235,0,309,10,"translation"],[235,16,309,10,"translation"],[235,27,309,21],[235,30,309,24,"nativeEvent"],[235,41,309,35],[235,42,309,36,"translationY"],[235,54,309,10],[236,0,310,10,"velocity"],[236,16,310,10,"velocity"],[236,25,310,18],[236,28,310,21,"nativeEvent"],[236,39,310,32],[236,40,310,33,"velocityY"],[236,49,310,10],[237,0,311,9],[237,15,304,8],[237,21,311,15],[238,0,312,10,"distance"],[238,16,312,10,"distance"],[238,24,312,18],[238,27,312,21,"layout"],[238,33,312,27],[238,34,312,28,"width"],[238,39,312,10],[239,0,313,10,"translation"],[239,16,313,10,"translation"],[239,27,313,21],[239,30,313,24,"nativeEvent"],[239,41,313,35],[239,42,313,36,"translationX"],[239,54,313,10],[240,0,314,10,"velocity"],[240,16,314,10,"velocity"],[240,25,314,18],[240,28,314,21,"nativeEvent"],[240,39,314,32],[240,40,314,33,"velocityX"],[240,49,314,10],[241,0,315,9],[243,0,317,8],[243,18,317,14,"closing"],[243,25,317,21],[243,28,318,10],[243,29,318,11,"translation"],[243,40,318,22],[243,43,318,25,"velocity"],[243,52,318,33],[243,55,318,36,"gestureVelocityImpact"],[243,76,318,10],[243,80,319,12],[243,116,319,34,"gestureDirection"],[243,132,319,12],[243,133,318,10],[243,136,320,10,"distance"],[243,144,320,18],[243,147,320,21],[243,148,318,10],[243,151,321,14,"velocity"],[243,160,321,22],[243,165,321,27],[243,166,321,14],[243,170,321,32,"translation"],[243,181,321,43],[243,186,321,48],[243,187,318,10],[243,190,322,14],[243,196,322,19,"props"],[243,201,322,14],[243,202,322,25,"closing"],[243,209,317,8],[245,0,324,8],[245,20,324,13,"animate"],[245,27,324,8],[245,28,324,21],[246,0,324,23,"closing"],[246,16,324,23,"closing"],[246,23,324,30],[246,25,324,23,"closing"],[246,32,324,21],[247,0,324,32,"velocity"],[247,16,324,32,"velocity"],[247,24,324,40],[247,26,324,32,"velocity"],[248,0,324,21],[248,15,324,8],[250,0,326,8],[250,18,326,12,"closing"],[250,25,326,8],[250,27,326,21],[251,0,329,10],[251,22,329,15,"pendingGestureCallback"],[251,44,329,10],[251,47,329,41,"setTimeout"],[251,57,329,51],[251,58,329,52],[251,70,329,58],[252,0,330,12,"onClose"],[252,18,330,12,"onClose"],[252,25,330,19],[254,0,334,12],[254,24,334,17,"forceUpdate"],[254,35,334,12],[255,0,335,11],[255,17,329,51],[255,19,335,13],[255,21,329,51],[255,22,329,10],[256,0,336,9],[258,0,338,8,"onGestureEnd"],[258,14,338,8,"onGestureEnd"],[258,26,338,20],[258,34,338,8],[258,46,338,8,"onGestureEnd"],[258,58,338,20],[259,0,339,8],[260,0,340,7],[261,0,276,4],[262,0,342,3],[262,7],[264,12,345,10,"getInterpolatedStyle"],[264,32],[264,35,345,33],[264,57,346,4],[264,67,347,6,"styleInterpolator"],[264,84,346,4],[264,86,348,6,"index"],[264,91,346,4],[264,93,349,6,"current"],[264,100,346,4],[264,102,350,6,"next"],[264,106,346,4],[264,108,351,6,"layout"],[264,114,346,4],[264,116,352,6,"insetTop"],[264,124,346,4],[264,126,353,6,"insetRight"],[264,136,346,4],[264,138,354,6,"insetBottom"],[264,149,346,4],[264,151,355,6,"insetLeft"],[264,160,346,4],[265,0,346,4],[265,15,357,6,"styleInterpolator"],[265,32,357,23],[265,33,357,24],[266,0,358,8,"index"],[266,10,358,8,"index"],[266,15,358,13],[266,17,358,8,"index"],[266,22,357,24],[267,0,359,8,"current"],[267,10,359,8,"current"],[267,17,359,15],[267,19,359,17],[268,0,359,19,"progress"],[268,12,359,19,"progress"],[268,20,359,27],[268,22,359,29,"current"],[269,0,359,17],[269,11,357,24],[270,0,360,8,"next"],[270,10,360,8,"next"],[270,14,360,12],[270,16,360,14,"next"],[270,20,360,18],[270,24,360,22],[271,0,360,24,"progress"],[271,12,360,24,"progress"],[271,20,360,32],[271,22,360,34,"next"],[272,0,360,22],[272,11,357,24],[273,0,361,8,"closing"],[273,10,361,8,"closing"],[273,17,361,15],[273,19,361,17],[273,25,361,22,"isClosing"],[273,34,357,24],[274,0,362,8,"swiping"],[274,10,362,8,"swiping"],[274,17,362,15],[274,19,362,17],[274,25,362,22,"isSwiping"],[274,34,357,24],[275,0,363,8,"inverted"],[275,10,363,8,"inverted"],[275,18,363,16],[275,20,363,18],[275,26,363,23,"inverted"],[275,34,357,24],[276,0,364,8,"layouts"],[276,10,364,8,"layouts"],[276,17,364,15],[276,19,364,17],[277,0,365,10,"screen"],[277,12,365,10,"screen"],[277,18,365,16],[277,20,365,18,"layout"],[278,0,364,17],[278,11,357,24],[279,0,367,8,"insets"],[279,10,367,8,"insets"],[279,16,367,14],[279,18,367,16],[280,0,368,10,"top"],[280,12,368,10,"top"],[280,15,368,13],[280,17,368,15,"insetTop"],[280,25,367,16],[281,0,369,10,"right"],[281,12,369,10,"right"],[281,17,369,15],[281,19,369,17,"insetRight"],[281,29,367,16],[282,0,370,10,"bottom"],[282,12,370,10,"bottom"],[282,18,370,16],[282,20,370,18,"insetBottom"],[282,31,367,16],[283,0,371,10,"left"],[283,12,371,10,"left"],[283,16,371,14],[283,18,371,16,"insetLeft"],[284,0,367,16],[285,0,357,24],[285,9,357,23],[285,10,346,4],[286,0,346,4],[286,7,345,33],[286,8],[287,12,377,10,"getCardAnimationContext"],[287,35],[287,38,377,36],[287,60,378,4],[287,70,379,6,"index"],[287,75,378,4],[287,77,380,6,"current"],[287,84,378,4],[287,86,381,6,"next"],[287,90,378,4],[287,92,382,6,"layout"],[287,98,378,4],[287,100,383,6,"insetTop"],[287,108,378,4],[287,110,384,6,"insetRight"],[287,120,378,4],[287,122,385,6,"insetBottom"],[287,133,378,4],[287,135,386,6,"insetLeft"],[287,144,378,4],[288,0,378,4],[288,15,387,10],[289,0,388,6,"index"],[289,10,388,6,"index"],[289,15,388,11],[289,17,388,6,"index"],[289,22,387,10],[290,0,389,6,"current"],[290,10,389,6,"current"],[290,17,389,13],[290,19,389,15],[291,0,389,17,"progress"],[291,12,389,17,"progress"],[291,20,389,25],[291,22,389,27,"current"],[292,0,389,15],[292,11,387,10],[293,0,390,6,"next"],[293,10,390,6,"next"],[293,14,390,10],[293,16,390,12,"next"],[293,20,390,16],[293,24,390,20],[294,0,390,22,"progress"],[294,12,390,22,"progress"],[294,20,390,30],[294,22,390,32,"next"],[295,0,390,20],[295,11,387,10],[296,0,391,6,"closing"],[296,10,391,6,"closing"],[296,17,391,13],[296,19,391,15],[296,25,391,20,"isClosing"],[296,34,387,10],[297,0,392,6,"swiping"],[297,10,392,6,"swiping"],[297,17,392,13],[297,19,392,15],[297,25,392,20,"isSwiping"],[297,34,387,10],[298,0,393,6,"inverted"],[298,10,393,6,"inverted"],[298,18,393,14],[298,20,393,16],[298,26,393,21,"inverted"],[298,34,387,10],[299,0,394,6,"layouts"],[299,10,394,6,"layouts"],[299,17,394,13],[299,19,394,15],[300,0,395,8,"screen"],[300,12,395,8,"screen"],[300,18,395,14],[300,20,395,16,"layout"],[301,0,394,15],[301,11,387,10],[302,0,397,6,"insets"],[302,10,397,6,"insets"],[302,16,397,12],[302,18,397,14],[303,0,398,8,"top"],[303,12,398,8,"top"],[303,15,398,11],[303,17,398,13,"insetTop"],[303,25,397,14],[304,0,399,8,"right"],[304,12,399,8,"right"],[304,17,399,13],[304,19,399,15,"insetRight"],[304,29,397,14],[305,0,400,8,"bottom"],[305,12,400,8,"bottom"],[305,18,400,14],[305,20,400,16,"insetBottom"],[305,31,397,14],[306,0,401,8,"left"],[306,12,401,8,"left"],[306,16,401,12],[306,18,401,14,"insetLeft"],[307,0,397,14],[308,0,387,10],[308,9,378,4],[309,0,378,4],[309,7,377,36],[309,8],[310,12,451,10,"contentRef"],[310,22],[310,25,451,23,"React"],[310,30,451,28],[310,31,451,29,"createRef"],[310,40,451,23],[310,42],[316,13,107,2],[316,42,107,22],[317,0,108,4],[317,13,108,9,"animate"],[317,20,108,4],[317,21,108,17],[318,0,108,19,"closing"],[318,10,108,19,"closing"],[318,17,108,26],[318,19,108,28],[318,24,108,33,"props"],[318,29,108,28],[318,30,108,39,"closing"],[319,0,108,17],[319,9,108,4],[320,0,109,4],[320,13,109,9,"isCurrentlyMounted"],[320,31,109,4],[320,34,109,30],[320,38,109,4],[321,0,110,3],[324,13,112,2],[324,41,112,21,"prevProps"],[324,50,112,2],[324,52,112,39],[325,0,113,4],[325,27,113,50],[325,32,113,55,"props"],[325,37,113,4],[326,0,113,4],[326,12,113,12,"layout"],[326,18,113,4],[326,34,113,12,"layout"],[326,40,113,4],[327,0,113,4],[327,12,113,20,"gestureDirection"],[327,28,113,4],[327,44,113,20,"gestureDirection"],[327,60,113,4],[328,0,113,4],[328,12,113,38,"closing"],[328,19,113,4],[328,35,113,38,"closing"],[328,42,113,4],[329,0,114,4],[329,12,114,12,"width"],[329,17,114,4],[329,20,114,30,"layout"],[329,26,114,4],[329,27,114,12,"width"],[329,32,114,4],[330,0,114,4],[330,12,114,19,"height"],[330,18,114,4],[330,21,114,30,"layout"],[330,27,114,4],[330,28,114,19,"height"],[330,34,114,4],[332,0,116,4],[332,12,116,8,"width"],[332,17,116,13],[332,22,116,18,"prevProps"],[332,31,116,27],[332,32,116,28,"layout"],[332,38,116,18],[332,39,116,35,"width"],[332,44,116,4],[332,46,116,42],[333,0,117,6],[333,15,117,11,"layout"],[333,21,117,6],[333,22,117,18,"width"],[333,27,117,6],[333,28,117,24,"setValue"],[333,36,117,6],[333,37,117,33,"width"],[333,42,117,6],[334,0,118,5],[336,0,120,4],[336,12,120,8,"height"],[336,18,120,14],[336,23,120,19,"prevProps"],[336,32,120,28],[336,33,120,29,"layout"],[336,39,120,19],[336,40,120,36,"height"],[336,46,120,4],[336,48,120,44],[337,0,121,6],[337,15,121,11,"layout"],[337,21,121,6],[337,22,121,18,"height"],[337,28,121,6],[337,29,121,25,"setValue"],[337,37,121,6],[337,38,121,34,"height"],[337,44,121,6],[338,0,122,5],[340,0,124,4],[340,12,124,8,"gestureDirection"],[340,28,124,24],[340,33,124,29,"prevProps"],[340,42,124,38],[340,43,124,39,"gestureDirection"],[340,59,124,4],[340,61,124,57],[341,0,125,6],[341,15,125,11,"inverted"],[341,23,125,6],[341,24,125,20,"setValue"],[341,32,125,6],[341,33,125,29],[341,69,125,51,"gestureDirection"],[341,85,125,29],[341,86,125,6],[342,0,126,5],[344,0,128,4],[344,12,128,10,"toValue"],[344,19,128,17],[344,22,128,20],[344,27,128,25,"getAnimateToValue"],[344,44,128,20],[344,45,128,43],[344,50,128,48,"props"],[344,55,128,20],[344,56,128,4],[346,0,130,4],[346,12,131,6],[346,17,131,11,"getAnimateToValue"],[346,34,131,6],[346,35,131,29,"prevProps"],[346,44,131,6],[346,50,131,44,"toValue"],[346,57,131,6],[346,61,132,6],[346,66,132,11,"lastToValue"],[346,77,132,6],[346,82,132,27,"toValue"],[346,89,130,4],[346,91,133,6],[347,0,139,6],[347,15,139,11,"animate"],[347,22,139,6],[347,23,139,19],[348,0,139,21,"closing"],[348,12,139,21,"closing"],[348,19,139,28],[348,21,139,21,"closing"],[349,0,139,19],[349,11,139,6],[350,0,140,5],[351,0,141,3],[354,13,143,2],[354,45,143,25],[355,0,144,4],[355,13,144,9,"isCurrentlyMounted"],[355,31,144,4],[355,34,144,30],[355,39,144,4],[356,0,145,4],[356,13,145,9,"handleEndInteraction"],[356,33,145,4],[357,0,146,3],[360,13,406,2],[360,50,406,38],[361,0,407,4],[361,27,407,66],[361,32,407,71,"props"],[361,37,407,4],[362,0,407,4],[362,12,407,12,"layout"],[362,18,407,4],[362,34,407,12,"layout"],[362,40,407,4],[363,0,407,4],[363,12,407,20,"gestureDirection"],[363,28,407,4],[363,44,407,20,"gestureDirection"],[363,60,407,4],[364,0,407,4],[364,12,407,38,"gestureResponseDistance"],[364,35,407,4],[364,51,407,38,"gestureResponseDistance"],[364,74,407,4],[365,0,409,4],[365,12,409,10,"distance"],[365,20,409,18],[365,23,410,6,"gestureDirection"],[365,39,410,22],[365,44,410,27],[365,54,410,6],[365,58,411,6,"gestureDirection"],[365,74,411,22],[365,79,411,27],[365,98,410,6],[365,101,412,10],[365,102,412,10,"gestureResponseDistance"],[365,125,412,33],[365,133,412,10],[365,145,412,10,"gestureResponseDistance"],[365,168,412,33],[365,169,412,35,"vertical"],[365,177,412,10],[365,183,412,48,"undefined"],[365,192,412,10],[365,195,413,12,"gestureResponseDistance"],[365,218,413,35],[365,219,413,36,"vertical"],[365,227,412,10],[365,230,414,12,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[365,264,410,6],[365,267,415,10],[365,268,415,10,"gestureResponseDistance"],[365,291,415,33],[365,299,415,10],[365,311,415,10,"gestureResponseDistance"],[365,334,415,33],[365,335,415,35,"horizontal"],[365,345,415,10],[365,351,415,50,"undefined"],[365,360,415,10],[365,363,416,10,"gestureResponseDistance"],[365,386,416,33],[365,387,416,34,"horizontal"],[365,397,415,10],[365,400,417,10,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[365,436,409,4],[367,0,419,4],[367,12,419,8,"gestureDirection"],[367,28,419,24],[367,33,419,29],[367,43,419,4],[367,45,419,41],[368,0,420,6],[368,17,420,13],[369,0,421,8,"maxDeltaX"],[369,12,421,8,"maxDeltaX"],[369,21,421,17],[369,23,421,19],[369,25,420,13],[370,0,422,8,"minOffsetY"],[370,12,422,8,"minOffsetY"],[370,22,422,18],[370,24,422,20],[370,25,420,13],[371,0,423,8,"hitSlop"],[371,12,423,8,"hitSlop"],[371,19,423,15],[371,21,423,17],[372,0,423,19,"bottom"],[372,14,423,19,"bottom"],[372,20,423,25],[372,22,423,27],[372,23,423,28,"layout"],[372,29,423,34],[372,30,423,35,"height"],[372,36,423,27],[372,39,423,44,"distance"],[373,0,423,17],[374,0,420,13],[374,11,420,6],[375,0,425,5],[375,9,419,4],[375,15,425,11],[375,19,425,15,"gestureDirection"],[375,35,425,31],[375,40,425,36],[375,59,425,11],[375,61,425,57],[376,0,426,6],[376,17,426,13],[377,0,427,8,"maxDeltaX"],[377,12,427,8,"maxDeltaX"],[377,21,427,17],[377,23,427,19],[377,25,426,13],[378,0,428,8,"minOffsetY"],[378,12,428,8,"minOffsetY"],[378,22,428,18],[378,24,428,20],[378,25,428,21],[378,26,426,13],[379,0,429,8,"hitSlop"],[379,12,429,8,"hitSlop"],[379,19,429,15],[379,21,429,17],[380,0,429,19,"top"],[380,14,429,19,"top"],[380,17,429,22],[380,19,429,24],[380,20,429,25,"layout"],[380,26,429,31],[380,27,429,32,"height"],[380,33,429,24],[380,36,429,41,"distance"],[381,0,429,17],[382,0,426,13],[382,11,426,6],[383,0,431,5],[383,9,425,11],[383,15,431,11],[384,0,432,6],[384,14,432,12,"hitSlop"],[384,21,432,19],[384,24,432,22],[384,25,432,23,"layout"],[384,31,432,29],[384,32,432,30,"width"],[384,37,432,22],[384,40,432,38,"distance"],[384,48,432,6],[385,0,433,6],[385,14,433,12,"invertedMultiplier"],[385,32,433,30],[385,35,433,33],[385,71,433,55,"gestureDirection"],[385,87,433,33],[385,88,433,6],[387,0,435,6],[387,14,435,10,"invertedMultiplier"],[387,32,435,28],[387,37,435,33],[387,38,435,6],[387,40,435,36],[388,0,436,8],[388,19,436,15],[389,0,437,10,"minOffsetX"],[389,14,437,10,"minOffsetX"],[389,24,437,20],[389,26,437,22],[389,27,436,15],[390,0,438,10,"maxDeltaY"],[390,14,438,10,"maxDeltaY"],[390,23,438,19],[390,25,438,21],[390,27,436,15],[391,0,439,10,"hitSlop"],[391,14,439,10,"hitSlop"],[391,21,439,17],[391,23,439,19],[392,0,439,21,"right"],[392,16,439,21,"right"],[392,21,439,26],[392,23,439,28,"hitSlop"],[393,0,439,19],[394,0,436,15],[394,13,436,8],[395,0,441,7],[395,11,435,6],[395,17,441,13],[396,0,442,8],[396,19,442,15],[397,0,443,10,"minOffsetX"],[397,14,443,10,"minOffsetX"],[397,24,443,20],[397,26,443,22],[397,27,443,23],[397,28,442,15],[398,0,444,10,"maxDeltaY"],[398,14,444,10,"maxDeltaY"],[398,23,444,19],[398,25,444,21],[398,27,442,15],[399,0,445,10,"hitSlop"],[399,14,445,10,"hitSlop"],[399,21,445,17],[399,23,445,19],[400,0,445,21,"left"],[400,16,445,21,"left"],[400,20,445,25],[400,22,445,27,"hitSlop"],[401,0,445,19],[402,0,442,15],[402,13,442,8],[403,0,447,7],[404,0,448,5],[405,0,449,3],[408,13,453,2],[408,31,453,11],[409,0,454,4],[409,27,472,8],[409,32,472,13,"props"],[409,37,454,4],[410,0,454,4],[410,12,455,6,"styleInterpolator"],[410,29,454,4],[410,45,455,6,"styleInterpolator"],[410,62,454,4],[411,0,454,4],[411,12,456,6,"index"],[411,17,454,4],[411,33,456,6,"index"],[411,38,454,4],[412,0,454,4],[412,12,457,6,"current"],[412,19,454,4],[412,35,457,6,"current"],[412,42,454,4],[413,0,454,4],[413,12,458,6,"gesture"],[413,19,454,4],[413,35,458,6,"gesture"],[413,42,454,4],[414,0,454,4],[414,12,459,6,"next"],[414,16,454,4],[414,32,459,6,"next"],[414,36,454,4],[415,0,454,4],[415,12,460,6,"layout"],[415,18,454,4],[415,34,460,6,"layout"],[415,40,454,4],[416,0,454,4],[416,12,461,6,"insets"],[416,18,454,4],[416,34,461,6,"insets"],[416,40,454,4],[417,0,454,4],[417,12,462,6,"overlay"],[417,19,454,4],[417,35,462,6,"overlay"],[417,42,454,4],[418,0,454,4],[418,12,463,6,"overlayEnabled"],[418,26,454,4],[418,42,463,6,"overlayEnabled"],[418,56,454,4],[419,0,454,4],[419,12,464,6,"shadowEnabled"],[419,25,454,4],[419,41,464,6,"shadowEnabled"],[419,54,454,4],[420,0,454,4],[420,12,465,6,"gestureEnabled"],[420,26,454,4],[420,42,465,6,"gestureEnabled"],[420,56,454,4],[421,0,454,4],[421,12,466,6,"gestureDirection"],[421,28,454,4],[421,44,466,6,"gestureDirection"],[421,60,454,4],[422,0,454,4],[422,12,467,6,"pageOverflowEnabled"],[422,31,454,4],[422,47,467,6,"pageOverflowEnabled"],[422,66,454,4],[423,0,454,4],[423,12,468,6,"children"],[423,20,454,4],[423,36,468,6,"children"],[423,44,454,4],[424,0,454,4],[424,12,469,22,"customContainerStyle"],[424,32,454,4],[424,48,469,6,"containerStyle"],[424,62,454,4],[425,0,454,4],[425,12,470,6,"contentStyle"],[425,24,454,4],[425,40,470,6,"contentStyle"],[425,52,454,4],[426,0,454,4],[426,12,471,9,"rest"],[426,16,454,4],[427,0,474,4],[427,12,474,10,"interpolatedStyle"],[427,29,474,27],[427,32,474,30],[427,37,474,35,"getInterpolatedStyle"],[427,57,474,30],[427,58,475,6,"styleInterpolator"],[427,75,474,30],[427,77,476,6,"index"],[427,82,474,30],[427,84,477,6,"current"],[427,91,474,30],[427,93,478,6,"next"],[427,97,474,30],[427,99,479,6,"layout"],[427,105,474,30],[427,107,480,6,"insets"],[427,113,480,12],[427,114,480,13,"top"],[427,117,474,30],[427,119,481,6,"insets"],[427,125,481,12],[427,126,481,13,"right"],[427,131,474,30],[427,133,482,6,"insets"],[427,139,482,12],[427,140,482,13,"bottom"],[427,146,474,30],[427,148,483,6,"insets"],[427,154,483,12],[427,155,483,13,"left"],[427,159,474,30],[427,160,474,4],[428,0,486,4],[428,12,486,10,"animationContext"],[428,28,486,26],[428,31,486,29],[428,36,486,34,"getCardAnimationContext"],[428,59,486,29],[428,60,487,6,"index"],[428,65,486,29],[428,67,488,6,"current"],[428,74,486,29],[428,76,489,6,"next"],[428,80,486,29],[428,82,490,6,"layout"],[428,88,486,29],[428,90,491,6,"insets"],[428,96,491,12],[428,97,491,13,"top"],[428,100,486,29],[428,102,492,6,"insets"],[428,108,492,12],[428,109,492,13,"right"],[428,114,486,29],[428,116,493,6,"insets"],[428,122,493,12],[428,123,493,13,"bottom"],[428,129,486,29],[428,131,494,6,"insets"],[428,137,494,12],[428,138,494,13,"left"],[428,142,486,29],[428,143,486,4],[429,0,497,4],[429,12,498,6,"containerStyle"],[429,26,497,4],[429,29,502,8,"interpolatedStyle"],[429,46,497,4],[429,47,498,6,"containerStyle"],[429,61,497,4],[430,0,497,4],[430,12,499,6,"cardStyle"],[430,21,497,4],[430,24,502,8,"interpolatedStyle"],[430,41,497,4],[430,42,499,6,"cardStyle"],[430,51,497,4],[431,0,497,4],[431,12,500,6,"overlayStyle"],[431,24,497,4],[431,27,502,8,"interpolatedStyle"],[431,44,497,4],[431,45,500,6,"overlayStyle"],[431,57,497,4],[432,0,497,4],[432,12,501,6,"shadowStyle"],[432,23,497,4],[432,26,502,8,"interpolatedStyle"],[432,43,497,4],[432,44,501,6,"shadowStyle"],[432,55,497,4],[433,0,504,4],[433,12,504,10,"handleGestureEvent"],[433,30,504,28],[433,33,504,31,"gestureEnabled"],[433,47,504,45],[433,50,505,8,"Animated"],[433,72,505,17,"event"],[433,77,505,8],[433,78,506,10],[433,79,507,12],[434,0,508,14,"nativeEvent"],[434,10,508,14,"nativeEvent"],[434,21,508,25],[434,23,509,16,"gestureDirection"],[434,39,509,32],[434,44,509,37],[434,54,509,16],[434,58,510,16,"gestureDirection"],[434,74,510,32],[434,79,510,37],[434,98,509,16],[434,101,511,20],[435,0,511,22,"translationY"],[435,12,511,22,"translationY"],[435,24,511,34],[435,26,511,36,"gesture"],[436,0,511,20],[436,11,509,16],[436,14,512,20],[437,0,512,22,"translationX"],[437,12,512,22,"translationX"],[437,24,512,34],[437,26,512,36,"gesture"],[438,0,512,20],[439,0,507,12],[439,9,506,10],[439,10,505,8],[439,12,515,10],[440,0,515,12,"useNativeDriver"],[440,10,515,12,"useNativeDriver"],[440,25,515,27],[440,27,515,12,"useNativeDriver"],[441,0,515,10],[441,9,505,8],[441,10,504,45],[441,13,517,8,"undefined"],[441,22,504,4],[443,0,519,4],[443,34,519,32,"StyleSheet"],[443,58,519,43,"flatten"],[443,65,519,32],[443,66,519,51,"contentStyle"],[443,78,519,63],[443,82,519,67],[443,84,519,32],[443,85,519,4],[444,0,519,4],[444,12,519,12,"backgroundColor"],[444,27,519,4],[444,50,519,12,"backgroundColor"],[444,65,519,4],[446,0,520,4],[446,12,520,10,"isTransparent"],[446,25,520,23],[446,28,521,6],[446,35,521,13,"backgroundColor"],[446,50,521,6],[446,55,521,33],[446,63,521,6],[446,66,522,10],[446,86,522,16,"backgroundColor"],[446,101,522,10],[446,103,522,33,"alpha"],[446,108,522,10],[446,115,522,45],[446,116,521,6],[446,119,523,10],[446,124,520,4],[447,0,525,4],[447,15,526,6],[447,35,526,7],[447,64,526,6],[447,65,526,28],[447,73,526,6],[448,0,526,37],[448,10,526,37],[448,15,526,42],[448,17,526,44,"animationContext"],[448,33,526,6],[449,0,526,6],[450,0,526,6],[451,0,526,6],[452,0,526,6],[453,0,526,6],[454,0,526,6],[455,0,526,6],[455,11,527,8],[455,31,527,9],[455,52,527,8],[455,53,527,18],[455,57,527,8],[456,0,528,10],[456,10,528,10],[456,15,528,15],[456,17,528,17],[457,0,533,12,"opacity"],[457,12,533,12,"opacity"],[457,19,533,19],[457,21,533,21,"current"],[458,0,528,17],[458,11,527,8],[459,0,536,10],[459,10,536,10],[459,21,536,21],[459,23,536,23],[459,28,527,8],[460,0,527,8],[461,0,527,8],[462,0,527,8],[463,0,527,8],[464,0,527,8],[465,0,527,8],[466,0,527,8],[466,10,526,6],[466,12,538,8],[466,32,538,9],[466,49,538,8],[467,0,538,14],[467,10,538,14],[467,23,538,27],[467,25,538,28],[468,0,538,8],[468,11,538,43,"rest"],[468,15,538,8],[469,0,538,8],[470,0,538,8],[471,0,538,8],[472,0,538,8],[473,0,538,8],[474,0,538,8],[475,0,538,8],[475,12,539,11,"overlayEnabled"],[475,26,539,25],[475,29,540,12],[475,49,540,13],[475,66,540,12],[476,0,540,18],[476,10,540,18],[476,23,540,31],[476,25,540,32],[476,35,540,12],[477,0,540,43],[477,10,540,43],[477,15,540,48],[477,17,540,50,"StyleSheet"],[477,41,540,61,"absoluteFill"],[477,53,540,12],[478,0,540,12],[479,0,540,12],[480,0,540,12],[481,0,540,12],[482,0,540,12],[483,0,540,12],[484,0,540,12],[484,11,541,15,"overlay"],[484,18,541,22],[484,19,541,23],[485,0,541,25,"style"],[485,10,541,25,"style"],[485,15,541,30],[485,17,541,32,"overlayStyle"],[486,0,541,23],[486,9,541,22],[486,10,540,12],[486,11,539,25],[486,14,543,14],[486,18,538,8],[486,20,544,10],[486,40,544,11],[486,61,544,10],[486,62,544,20],[486,66,544,10],[487,0,545,12],[487,10,545,12],[487,40,545,42],[487,42,545,44,"hasOpacityStyle"],[487,57,545,59],[487,58,545,60,"containerStyle"],[487,72,545,59],[487,73,544,10],[488,0,546,12],[488,10,546,12],[488,15,546,17],[488,17,546,19],[488,18,546,20,"styles"],[488,24,546,26],[488,25,546,27,"container"],[488,34,546,19],[488,36,546,38,"containerStyle"],[488,50,546,19],[488,52,546,54,"customContainerStyle"],[488,72,546,19],[488,73,544,10],[489,0,547,12],[489,10,547,12],[489,23,547,25],[489,25,547,26],[489,35,544,10],[490,0,544,10],[491,0,544,10],[492,0,544,10],[493,0,544,10],[494,0,544,10],[495,0,544,10],[496,0,544,10],[496,11,549,12],[496,31,549,13],[496,64,549,12],[497,0,550,14],[497,10,550,14],[497,17,550,21],[497,19,550,23,"layout"],[497,25,550,29],[497,26,550,30,"width"],[497,31,550,23],[497,36,550,40],[497,37,550,23],[497,41,550,45,"gestureEnabled"],[497,55,549,12],[498,0,551,14],[498,10,551,14],[498,24,551,28],[498,26,551,30,"handleGestureEvent"],[498,44,549,12],[499,0,552,14],[499,10,552,14],[499,30,552,34],[499,32,552,36],[499,37,552,41,"handleGestureStateChange"],[500,0,549,12],[500,11,553,18],[500,16,553,23,"gestureActivationCriteria"],[500,41,553,18],[500,43,549,12],[501,0,549,12],[502,0,549,12],[503,0,549,12],[504,0,549,12],[505,0,549,12],[506,0,549,12],[507,0,549,12],[507,12,555,14],[507,32,555,15],[507,53,555,14],[507,54,555,24],[507,58,555,14],[508,0,555,29],[508,10,555,29],[508,15,555,34],[508,17,555,36],[508,18,555,37,"styles"],[508,24,555,43],[508,25,555,44,"container"],[508,34,555,36],[508,36,555,55,"cardStyle"],[508,45,555,36],[508,46,555,14],[509,0,555,14],[510,0,555,14],[511,0,555,14],[512,0,555,14],[513,0,555,14],[514,0,555,14],[515,0,555,14],[515,11,556,17,"shadowEnabled"],[515,24,556,30],[515,28,556,34,"shadowStyle"],[515,39,556,17],[515,43,556,49],[515,44,556,50,"isTransparent"],[515,57,556,17],[515,60,557,18],[515,80,557,19],[515,101,557,18],[515,102,557,28],[515,106,557,18],[516,0,558,20],[516,10,558,20],[516,15,558,25],[516,17,558,27],[516,18,559,22,"styles"],[516,24,559,28],[516,25,559,29,"shadow"],[516,31,558,27],[516,33,560,22,"gestureDirection"],[516,49,560,38],[516,54,560,43],[516,66,560,22],[516,69,561,26],[516,70,561,27,"styles"],[516,76,561,33],[516,77,561,34,"shadowHorizontal"],[516,93,561,26],[516,95,561,52,"styles"],[516,101,561,58],[516,102,561,59,"shadowLeft"],[516,112,561,26],[516,113,560,22],[516,116,562,26,"gestureDirection"],[516,132,562,42],[516,137,562,47],[516,158,562,26],[516,161,563,26],[516,162,563,27,"styles"],[516,168,563,33],[516,169,563,34,"shadowHorizontal"],[516,185,563,26],[516,187,563,52,"styles"],[516,193,563,58],[516,194,563,59,"shadowRight"],[516,205,563,26],[516,206,562,26],[516,209,564,26,"gestureDirection"],[516,225,564,42],[516,230,564,47],[516,240,564,26],[516,243,565,26],[516,244,565,27,"styles"],[516,250,565,33],[516,251,565,34,"shadowVertical"],[516,265,565,26],[516,267,565,50,"styles"],[516,273,565,56],[516,274,565,57,"shadowTop"],[516,283,565,26],[516,284,564,26],[516,287,566,26],[516,288,566,27,"styles"],[516,294,566,33],[516,295,566,34,"shadowVertical"],[516,309,566,26],[516,311,566,50,"styles"],[516,317,566,56],[516,318,566,57,"shadowBottom"],[516,330,566,26],[516,331,558,27],[516,333,567,22],[517,0,567,24,"backgroundColor"],[517,12,567,24,"backgroundColor"],[517,27,567,39],[517,29,567,24,"backgroundColor"],[518,0,567,22],[518,11,558,27],[518,13,568,22,"shadowStyle"],[518,24,558,27],[518,25,557,18],[519,0,570,20],[519,10,570,20],[519,23,570,33],[519,25,570,34],[519,31,557,18],[520,0,557,18],[521,0,557,18],[522,0,557,18],[523,0,557,18],[524,0,557,18],[525,0,557,18],[526,0,557,18],[526,10,556,17],[526,13,572,20],[526,17,555,14],[526,19,573,16],[526,39,573,17],[526,57,573,16],[527,0,574,18],[527,10,574,18],[527,13,574,21],[527,15,574,23],[527,20,574,28,"contentRef"],[527,30,573,16],[528,0,575,18],[528,10,575,18],[528,17,575,25],[528,19,575,27,"pageOverflowEnabled"],[528,38,573,16],[529,0,576,18],[529,10,576,18],[529,16,576,24],[529,18,576,26,"layout"],[529,24,573,16],[530,0,577,18],[530,10,577,18],[530,15,577,23],[530,17,577,25,"contentStyle"],[530,29,573,16],[531,0,573,16],[532,0,573,16],[533,0,573,16],[534,0,573,16],[535,0,573,16],[536,0,573,16],[537,0,573,16],[537,11,579,19,"children"],[537,19,573,16],[537,20,555,14],[537,21,549,12],[537,22,544,10],[537,23,538,8],[537,24,526,6],[537,25,525,4],[538,0,587,3],[541,4,91,34,"React"],[541,9,91,39],[541,10,91,40,"Component"],[541,19],[544,0,91,21,"Card"],[544,2,91,21,"Card"],[544,6],[544,7,92,9,"defaultProps"],[544,19],[544,22,92,24],[545,0,93,4,"overlayEnabled"],[545,4,93,4,"overlayEnabled"],[545,18,93,18],[545,20,93,20,"Platform"],[545,42,93,29,"OS"],[545,44,93,20],[545,49,93,36],[545,54,92,24],[546,0,94,4,"shadowEnabled"],[546,4,94,4,"shadowEnabled"],[546,17,94,17],[546,19,94,19],[546,23,92,24],[547,0,95,4,"gestureEnabled"],[547,4,95,4,"gestureEnabled"],[547,18,95,18],[547,20,95,20],[547,24,92,24],[548,0,96,4,"gestureVelocityImpact"],[548,4,96,4,"gestureVelocityImpact"],[548,25,96,25],[548,27,96,27,"GESTURE_VELOCITY_IMPACT"],[548,50,92,24],[549,0,97,4,"overlay"],[549,4,97,4,"overlay"],[549,11,97,11],[549,13,97,13],[550,0,97,13],[550,10,98,6,"style"],[550,15,97,13],[550,24,98,6,"style"],[550,29,97,13],[551,0,97,13],[551,13,102,6,"style"],[551,18,102,11],[551,21,103,8],[551,41,103,9],[551,62,103,8],[551,63,103,18],[551,67,103,8],[552,0,103,23],[552,8,103,23],[552,21,103,36],[552,23,103,37],[552,29,103,8],[553,0,103,44],[553,8,103,44],[553,13,103,49],[553,15,103,51],[553,16,103,52,"styles"],[553,22,103,58],[553,23,103,59,"overlay"],[553,30,103,51],[553,32,103,68,"style"],[553,37,103,51],[553,38,103,8],[554,0,103,8],[554,16,91,21,"Card"],[554,20,103,8],[555,0,103,8],[556,0,103,8],[557,0,103,8],[558,0,103,8],[559,0,103,8],[560,0,103,8],[560,8,102,11],[560,11,104,10],[560,15,97,13],[561,0,97,13],[562,0,92,24],[562,3],[564,0,590,0],[564,6,590,6,"styles"],[564,12,590,12],[564,15,590,15,"StyleSheet"],[564,39,590,26,"create"],[564,45,590,15],[564,46,590,33],[565,0,591,2,"container"],[565,4,591,2,"container"],[565,13,591,11],[565,15,591,13],[566,0,592,4,"flex"],[566,6,592,4,"flex"],[566,10,592,8],[566,12,592,10],[567,0,591,13],[567,5,590,33],[568,0,594,2,"overlay"],[568,4,594,2,"overlay"],[568,11,594,9],[568,13,594,11],[569,0,595,4,"flex"],[569,6,595,4,"flex"],[569,10,595,8],[569,12,595,10],[569,13,594,11],[570,0,596,4,"backgroundColor"],[570,6,596,4,"backgroundColor"],[570,21,596,19],[570,23,596,21],[571,0,594,11],[571,5,590,33],[572,0,598,2,"shadow"],[572,4,598,2,"shadow"],[572,10,598,8],[572,12,598,10],[573,0,599,4,"position"],[573,6,599,4,"position"],[573,14,599,12],[573,16,599,14],[573,26,598,10],[574,0,600,4,"shadowRadius"],[574,6,600,4,"shadowRadius"],[574,18,600,16],[574,20,600,18],[574,21,598,10],[575,0,601,4,"shadowColor"],[575,6,601,4,"shadowColor"],[575,17,601,15],[575,19,601,17],[575,25,598,10],[576,0,602,4,"shadowOpacity"],[576,6,602,4,"shadowOpacity"],[576,19,602,17],[576,21,602,19],[577,0,598,10],[577,5,590,33],[578,0,604,2,"shadowHorizontal"],[578,4,604,2,"shadowHorizontal"],[578,20,604,18],[578,22,604,20],[579,0,605,4,"top"],[579,6,605,4,"top"],[579,9,605,7],[579,11,605,9],[579,12,604,20],[580,0,606,4,"bottom"],[580,6,606,4,"bottom"],[580,12,606,10],[580,14,606,12],[580,15,604,20],[581,0,607,4,"width"],[581,6,607,4,"width"],[581,11,607,9],[581,13,607,11],[581,14,604,20],[582,0,608,4,"shadowOffset"],[582,6,608,4,"shadowOffset"],[582,18,608,16],[582,20,608,18],[583,0,608,20,"width"],[583,8,608,20,"width"],[583,13,608,25],[583,15,608,27],[583,16,608,28],[583,17,608,18],[584,0,608,31,"height"],[584,8,608,31,"height"],[584,14,608,37],[584,16,608,39],[585,0,608,18],[586,0,604,20],[586,5,590,33],[587,0,610,2,"shadowLeft"],[587,4,610,2,"shadowLeft"],[587,14,610,12],[587,16,610,14],[588,0,611,4,"left"],[588,6,611,4,"left"],[588,10,611,8],[588,12,611,10],[589,0,610,14],[589,5,590,33],[590,0,613,2,"shadowRight"],[590,4,613,2,"shadowRight"],[590,15,613,13],[590,17,613,15],[591,0,614,4,"right"],[591,6,614,4,"right"],[591,11,614,9],[591,13,614,11],[592,0,613,15],[592,5,590,33],[593,0,616,2,"shadowVertical"],[593,4,616,2,"shadowVertical"],[593,18,616,16],[593,20,616,18],[594,0,617,4,"left"],[594,6,617,4,"left"],[594,10,617,8],[594,12,617,10],[594,13,616,18],[595,0,618,4,"right"],[595,6,618,4,"right"],[595,11,618,9],[595,13,618,11],[595,14,616,18],[596,0,619,4,"height"],[596,6,619,4,"height"],[596,12,619,10],[596,14,619,12],[596,15,616,18],[597,0,620,4,"shadowOffset"],[597,6,620,4,"shadowOffset"],[597,18,620,16],[597,20,620,18],[598,0,620,20,"width"],[598,8,620,20,"width"],[598,13,620,25],[598,15,620,27],[598,16,620,18],[599,0,620,30,"height"],[599,8,620,30,"height"],[599,14,620,36],[599,16,620,38],[599,17,620,39],[600,0,620,18],[601,0,616,18],[601,5,590,33],[602,0,622,2,"shadowTop"],[602,4,622,2,"shadowTop"],[602,13,622,11],[602,15,622,13],[603,0,623,4,"top"],[603,6,623,4,"top"],[603,9,623,7],[603,11,623,9],[604,0,622,13],[604,5,590,33],[605,0,625,2,"shadowBottom"],[605,4,625,2,"shadowBottom"],[605,16,625,14],[605,18,625,16],[606,0,626,4,"bottom"],[606,6,626,4,"bottom"],[606,12,626,10],[606,14,626,12],[607,0,625,16],[608,0,590,33],[608,3,590,15],[608,4,590,0]],"functionMap":{"names":["<global>","hasOpacityStyle","Card","defaultProps.overlay","componentDidMount","componentDidUpdate","componentWillUnmount","animate","animation.start$argument_0","getAnimateToValue","setPointerEventsEnabled","handleStartInteraction","handleEndInteraction","handleGestureStateChange","setTimeout$argument_0","memoize$argument_0","gestureActivationCriteria","render"],"mappings":"AAA;wBCiF;CDO;eEE;aCM;cDO;EEG;GFG;EGE;GH6B;EIE;GJG;oBKuB;aCuC;KDiB;GLC;8BOE;GPc;oCQE;GRI;mCSE;GTI;iCUE;GVK;qCWE;oDCkE;WDM;GXO;IaI;Qb2B;IaK;MbyB;EcG;Gd2C;EeI;GfsI;CFC"}},"type":"js/module"}]}