{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"./RCTAsyncStorage","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _RCTAsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./RCTAsyncStorage\"));\n\n  if (!_RCTAsyncStorage.default) {\n    throw new Error(\"[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\\n\\nTo fix this issue try these steps:\\n\\n  \\u2022 Run `react-native link @react-native-async-storage/async-storage` in the project root.\\n\\n  \\u2022 Rebuild and restart the app.\\n\\n  \\u2022 Run the packager with `--reset-cache` flag.\\n\\n  \\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app.\\n\\n  \\u2022 If this happens while testing with Jest, check out docs how to integrate AsyncStorage with it: https://react-native-async-storage.github.io/async-storage/docs/advanced/jest\\n\\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-async-storage/react-native-async-storage/issues\\n\");\n  }\n\n  function checkValidInput(usedKey, value) {\n    var isValuePassed = arguments.length > 1;\n\n    if (typeof usedKey !== 'string') {\n      console.warn(\"[AsyncStorage] Using \" + typeof usedKey + \" type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: \" + usedKey + \"\\n\");\n    }\n\n    if (isValuePassed && typeof value !== 'string') {\n      if (value == null) {\n        throw new Error(\"[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .remove method instead.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      } else {\n        console.warn(\"[AsyncStorage] The value for key \\\"\" + usedKey + \"\\\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      }\n    }\n  }\n\n  function checkValidArgs(keyValuePairs, callback) {\n    if (!Array.isArray(keyValuePairs) || keyValuePairs.length === 0 || !Array.isArray(keyValuePairs[0])) {\n      throw new Error('[AsyncStorage] Expected array of key-value pairs as first argument to multiSet');\n    }\n\n    if (callback && typeof callback !== 'function') {\n      if (Array.isArray(callback)) {\n        throw new Error('[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?');\n      }\n\n      throw new Error('[AsyncStorage] Expected function as second argument to multiSet');\n    }\n  }\n\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n\n        _RCTAsyncStorage.default.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n\n        _RCTAsyncStorage.default.multiSet([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n\n        _RCTAsyncStorage.default.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n\n        _RCTAsyncStorage.default.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.clear(function (error) {\n          var err = convertError(error);\n          callback && callback(err);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.getAllKeys(function (error, keys) {\n          var err = convertError(error);\n          callback && callback(err, keys);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n\n      _RCTAsyncStorage.default.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      checkValidArgs(keyValuePairs, callback);\n      return new Promise(function (resolve, reject) {\n        keyValuePairs.forEach(function (_ref3) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n              key = _ref4[0],\n              value = _ref4[1];\n\n          checkValidInput(key, value);\n        });\n\n        _RCTAsyncStorage.default.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      return new Promise(function (resolve, reject) {\n        keys.forEach(function (key) {\n          return checkValidInput(key);\n        });\n\n        _RCTAsyncStorage.default.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        _RCTAsyncStorage.default.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!_RCTAsyncStorage.default.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs || Array.isArray(errs) && errs.length === 0) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  var _default = AsyncStorage;\n  exports.default = _default;\n});","lineCount":291,"map":[[2,0,12,0],[13,0,14,0],[15,0,16,0],[15,6,16,4],[15,7,16,5,"RCTAsyncStorage"],[15,31,16,0],[15,33,16,22],[16,0,17,2],[16,10,17,8],[16,14,17,12,"Error"],[16,19,17,8],[16,787,17,2],[17,0,33,1],[19,0,50,0],[19,11,50,9,"checkValidInput"],[19,26,50,0],[19,27,50,25,"usedKey"],[19,34,50,0],[19,36,50,42,"value"],[19,41,50,0],[19,43,50,54],[20,0,51,2],[20,8,51,8,"isValuePassed"],[20,21,51,21],[20,24,51,24,"arguments"],[20,33,51,33],[20,34,51,34,"length"],[20,40,51,24],[20,43,51,43],[20,44,51,2],[22,0,53,2],[22,8,53,6],[22,15,53,13,"usedKey"],[22,22,53,6],[22,27,53,25],[22,35,53,2],[22,37,53,35],[23,0,54,4,"console"],[23,6,54,4,"console"],[23,13,54,11],[23,14,54,12,"warn"],[23,18,54,4],[23,45,55,30],[23,52,55,37,"usedKey"],[23,59,54,4],[23,177,55,157,"usedKey"],[23,184,54,4],[24,0,57,3],[26,0,59,2],[26,8,59,6,"isValuePassed"],[26,21,59,19],[26,25,59,23],[26,32,59,30,"value"],[26,37,59,23],[26,42,59,40],[26,50,59,2],[26,52,59,50],[27,0,60,4],[27,10,60,8,"value"],[27,15,60,13],[27,19,60,17],[27,23,60,4],[27,25,60,23],[28,0,61,6],[28,14,61,12],[28,18,61,16,"Error"],[28,23,61,12],[28,166,62,148,"value"],[28,171,61,12],[28,193,62,170,"usedKey"],[28,200,61,12],[28,208,61,6],[29,0,64,5],[29,7,60,4],[29,13,64,11],[30,0,65,6,"console"],[30,8,65,6,"console"],[30,15,65,13],[30,16,65,14,"warn"],[30,20,65,6],[30,61,66,45,"usedKey"],[30,68,65,6],[30,182,66,160,"value"],[30,187,65,6],[30,209,66,182,"usedKey"],[30,216,65,6],[31,0,68,5],[32,0,69,3],[33,0,70,1],[35,0,72,0],[35,11,72,9,"checkValidArgs"],[35,25,72,0],[35,26,72,24,"keyValuePairs"],[35,39,72,0],[35,41,72,39,"callback"],[35,49,72,0],[35,51,72,49],[36,0,73,2],[36,8,74,4],[36,9,74,5,"Array"],[36,14,74,10],[36,15,74,11,"isArray"],[36,22,74,5],[36,23,74,19,"keyValuePairs"],[36,36,74,5],[36,37,74,4],[36,41,75,4,"keyValuePairs"],[36,54,75,17],[36,55,75,18,"length"],[36,61,75,4],[36,66,75,29],[36,67,74,4],[36,71,76,4],[36,72,76,5,"Array"],[36,77,76,10],[36,78,76,11,"isArray"],[36,85,76,5],[36,86,76,19,"keyValuePairs"],[36,99,76,32],[36,100,76,33],[36,101,76,32],[36,102,76,5],[36,103,73,2],[36,105,77,4],[37,0,78,4],[37,12,78,10],[37,16,78,14,"Error"],[37,21,78,10],[37,22,79,6],[37,102,78,10],[37,103,78,4],[38,0,81,3],[40,0,83,2],[40,8,83,6,"callback"],[40,16,83,14],[40,20,83,18],[40,27,83,25,"callback"],[40,35,83,18],[40,40,83,38],[40,50,83,2],[40,52,83,50],[41,0,84,4],[41,10,84,8,"Array"],[41,15,84,13],[41,16,84,14,"isArray"],[41,23,84,8],[41,24,84,22,"callback"],[41,32,84,8],[41,33,84,4],[41,35,84,33],[42,0,85,6],[42,14,85,12],[42,18,85,16,"Error"],[42,23,85,12],[42,24,86,8],[42,165,85,12],[42,166,85,6],[43,0,88,5],[45,0,90,4],[45,12,90,10],[45,16,90,14,"Error"],[45,21,90,10],[45,22,91,6],[45,87,90,10],[45,88,90,4],[46,0,93,3],[47,0,94,1],[49,0,103,0],[49,6,103,6,"AsyncStorage"],[49,18,103,18],[49,21,103,21],[50,0,104,2,"_getRequests"],[50,4,104,2,"_getRequests"],[50,16,104,14],[50,18,104,17],[50,20,103,21],[51,0,105,2,"_getKeys"],[51,4,105,2,"_getKeys"],[51,12,105,10],[51,14,105,13],[51,16,103,21],[52,0,106,2,"_immediate"],[52,4,106,2,"_immediate"],[52,14,106,12],[52,16,106,15],[52,20,103,21],[53,0,113,2,"getItem"],[53,4,113,2,"getItem"],[53,11,113,9],[53,13,113,11],[53,30,114,4,"key"],[53,33,113,11],[53,35,115,4,"callback"],[53,43,113,11],[53,45,116,28],[54,0,117,4],[54,13,117,11],[54,17,117,15,"Promise"],[54,24,117,11],[54,25,117,23],[54,35,117,24,"resolve"],[54,42,117,23],[54,44,117,33,"reject"],[54,50,117,23],[54,52,117,44],[55,0,118,6,"checkValidInput"],[55,8,118,6,"checkValidInput"],[55,23,118,21],[55,24,118,22,"key"],[55,27,118,21],[55,28,118,6],[57,0,119,6,"RCTAsyncStorage"],[57,33,119,22,"multiGet"],[57,41,119,6],[57,42,119,31],[57,43,119,32,"key"],[57,46,119,31],[57,47,119,6],[57,49,119,38],[57,59,119,48,"errors"],[57,65,119,38],[57,67,119,56,"result"],[57,73,119,38],[57,75,119,64],[58,0,121,8],[58,14,121,14,"value"],[58,19,121,19],[58,22,121,22,"result"],[58,28,121,28],[58,32,121,32,"result"],[58,38,121,38],[58,39,121,39],[58,40,121,38],[58,41,121,22],[58,45,121,45,"result"],[58,51,121,51],[58,52,121,52],[58,53,121,51],[58,54,121,45],[58,55,121,55],[58,56,121,45],[58,57,121,22],[58,60,121,60,"result"],[58,66,121,66],[58,67,121,67],[58,68,121,66],[58,69,121,60],[58,70,121,70],[58,71,121,60],[58,72,121,22],[58,75,121,75],[58,79,121,8],[59,0,122,8],[59,14,122,14,"errs"],[59,18,122,18],[59,21,122,21,"convertErrors"],[59,34,122,34],[59,35,122,35,"errors"],[59,41,122,34],[59,42,122,8],[60,0,123,8,"callback"],[60,10,123,8,"callback"],[60,18,123,16],[60,22,123,20,"callback"],[60,30,123,28],[60,31,123,29,"errs"],[60,35,123,33],[60,39,123,37,"errs"],[60,43,123,41],[60,44,123,42],[60,45,123,41],[60,46,123,28],[60,48,123,46,"value"],[60,53,123,28],[60,54,123,8],[62,0,124,8],[62,14,124,12,"errs"],[62,18,124,8],[62,20,124,18],[63,0,125,10,"reject"],[63,12,125,10,"reject"],[63,18,125,16],[63,19,125,17,"errs"],[63,23,125,21],[63,24,125,22],[63,25,125,21],[63,26,125,16],[63,27,125,10],[64,0,126,9],[64,11,124,8],[64,17,126,15],[65,0,127,10,"resolve"],[65,12,127,10,"resolve"],[65,19,127,17],[65,20,127,18,"value"],[65,25,127,17],[65,26,127,10],[66,0,128,9],[67,0,129,7],[67,9,119,6],[68,0,130,5],[68,7,117,11],[68,8,117,4],[69,0,131,3],[69,5,103,21],[70,0,138,2,"setItem"],[70,4,138,2,"setItem"],[70,11,138,9],[70,13,138,11],[70,30,139,4,"key"],[70,33,138,11],[70,35,140,4,"value"],[70,40,138,11],[70,42,141,4,"callback"],[70,50,138,11],[70,52,142,19],[71,0,143,4],[71,13,143,11],[71,17,143,15,"Promise"],[71,24,143,11],[71,25,143,23],[71,35,143,24,"resolve"],[71,42,143,23],[71,44,143,33,"reject"],[71,50,143,23],[71,52,143,44],[72,0,144,6,"checkValidInput"],[72,8,144,6,"checkValidInput"],[72,23,144,21],[72,24,144,22,"key"],[72,27,144,21],[72,29,144,27,"value"],[72,34,144,21],[72,35,144,6],[74,0,145,6,"RCTAsyncStorage"],[74,33,145,22,"multiSet"],[74,41,145,6],[74,42,145,31],[74,43,145,32],[74,44,145,33,"key"],[74,47,145,32],[74,49,145,38,"value"],[74,54,145,32],[74,55,145,31],[74,56,145,6],[74,58,145,47],[74,68,145,57,"errors"],[74,74,145,47],[74,76,145,65],[75,0,146,8],[75,14,146,14,"errs"],[75,18,146,18],[75,21,146,21,"convertErrors"],[75,34,146,34],[75,35,146,35,"errors"],[75,41,146,34],[75,42,146,8],[76,0,147,8,"callback"],[76,10,147,8,"callback"],[76,18,147,16],[76,22,147,20,"callback"],[76,30,147,28],[76,31,147,29,"errs"],[76,35,147,33],[76,39,147,37,"errs"],[76,43,147,41],[76,44,147,42],[76,45,147,41],[76,46,147,28],[76,47,147,8],[78,0,148,8],[78,14,148,12,"errs"],[78,18,148,8],[78,20,148,18],[79,0,149,10,"reject"],[79,12,149,10,"reject"],[79,18,149,16],[79,19,149,17,"errs"],[79,23,149,21],[79,24,149,22],[79,25,149,21],[79,26,149,16],[79,27,149,10],[80,0,150,9],[80,11,148,8],[80,17,150,15],[81,0,151,10,"resolve"],[81,12,151,10,"resolve"],[81,19,151,17],[81,20,151,18],[81,24,151,17],[81,25,151,10],[82,0,152,9],[83,0,153,7],[83,9,145,6],[84,0,154,5],[84,7,143,11],[84,8,143,4],[85,0,155,3],[85,5,103,21],[86,0,162,2,"removeItem"],[86,4,162,2,"removeItem"],[86,14,162,12],[86,16,162,14],[86,36,163,4,"key"],[86,39,162,14],[86,41,164,4,"callback"],[86,49,162,14],[86,51,165,19],[87,0,166,4],[87,13,166,11],[87,17,166,15,"Promise"],[87,24,166,11],[87,25,166,23],[87,35,166,24,"resolve"],[87,42,166,23],[87,44,166,33,"reject"],[87,50,166,23],[87,52,166,44],[88,0,167,6,"checkValidInput"],[88,8,167,6,"checkValidInput"],[88,23,167,21],[88,24,167,22,"key"],[88,27,167,21],[88,28,167,6],[90,0,168,6,"RCTAsyncStorage"],[90,33,168,22,"multiRemove"],[90,44,168,6],[90,45,168,34],[90,46,168,35,"key"],[90,49,168,34],[90,50,168,6],[90,52,168,41],[90,62,168,51,"errors"],[90,68,168,41],[90,70,168,59],[91,0,169,8],[91,14,169,14,"errs"],[91,18,169,18],[91,21,169,21,"convertErrors"],[91,34,169,34],[91,35,169,35,"errors"],[91,41,169,34],[91,42,169,8],[92,0,170,8,"callback"],[92,10,170,8,"callback"],[92,18,170,16],[92,22,170,20,"callback"],[92,30,170,28],[92,31,170,29,"errs"],[92,35,170,33],[92,39,170,37,"errs"],[92,43,170,41],[92,44,170,42],[92,45,170,41],[92,46,170,28],[92,47,170,8],[94,0,171,8],[94,14,171,12,"errs"],[94,18,171,8],[94,20,171,18],[95,0,172,10,"reject"],[95,12,172,10,"reject"],[95,18,172,16],[95,19,172,17,"errs"],[95,23,172,21],[95,24,172,22],[95,25,172,21],[95,26,172,16],[95,27,172,10],[96,0,173,9],[96,11,171,8],[96,17,173,15],[97,0,174,10,"resolve"],[97,12,174,10,"resolve"],[97,19,174,17],[97,20,174,18],[97,24,174,17],[97,25,174,10],[98,0,175,9],[99,0,176,7],[99,9,168,6],[100,0,177,5],[100,7,166,11],[100,8,166,4],[101,0,178,3],[101,5,103,21],[102,0,188,2,"mergeItem"],[102,4,188,2,"mergeItem"],[102,13,188,11],[102,15,188,13],[102,34,189,4,"key"],[102,37,188,13],[102,39,190,4,"value"],[102,44,188,13],[102,46,191,4,"callback"],[102,54,188,13],[102,56,192,19],[103,0,193,4],[103,13,193,11],[103,17,193,15,"Promise"],[103,24,193,11],[103,25,193,23],[103,35,193,24,"resolve"],[103,42,193,23],[103,44,193,33,"reject"],[103,50,193,23],[103,52,193,44],[104,0,194,6,"checkValidInput"],[104,8,194,6,"checkValidInput"],[104,23,194,21],[104,24,194,22,"key"],[104,27,194,21],[104,29,194,27,"value"],[104,34,194,21],[104,35,194,6],[106,0,195,6,"RCTAsyncStorage"],[106,33,195,22,"multiMerge"],[106,43,195,6],[106,44,195,33],[106,45,195,34],[106,46,195,35,"key"],[106,49,195,34],[106,51,195,40,"value"],[106,56,195,34],[106,57,195,33],[106,58,195,6],[106,60,195,49],[106,70,195,59,"errors"],[106,76,195,49],[106,78,195,67],[107,0,196,8],[107,14,196,14,"errs"],[107,18,196,18],[107,21,196,21,"convertErrors"],[107,34,196,34],[107,35,196,35,"errors"],[107,41,196,34],[107,42,196,8],[108,0,197,8,"callback"],[108,10,197,8,"callback"],[108,18,197,16],[108,22,197,20,"callback"],[108,30,197,28],[108,31,197,29,"errs"],[108,35,197,33],[108,39,197,37,"errs"],[108,43,197,41],[108,44,197,42],[108,45,197,41],[108,46,197,28],[108,47,197,8],[110,0,198,8],[110,14,198,12,"errs"],[110,18,198,8],[110,20,198,18],[111,0,199,10,"reject"],[111,12,199,10,"reject"],[111,18,199,16],[111,19,199,17,"errs"],[111,23,199,21],[111,24,199,22],[111,25,199,21],[111,26,199,16],[111,27,199,10],[112,0,200,9],[112,11,198,8],[112,17,200,15],[113,0,201,10,"resolve"],[113,12,201,10,"resolve"],[113,19,201,17],[113,20,201,18],[113,24,201,17],[113,25,201,10],[114,0,202,9],[115,0,203,7],[115,9,195,6],[116,0,204,5],[116,7,193,11],[116,8,193,4],[117,0,205,3],[117,5,103,21],[118,0,214,2,"clear"],[118,4,214,2,"clear"],[118,9,214,7],[118,11,214,9],[118,26,214,19,"callback"],[118,34,214,9],[118,36,214,71],[119,0,215,4],[119,13,215,11],[119,17,215,15,"Promise"],[119,24,215,11],[119,25,215,23],[119,35,215,24,"resolve"],[119,42,215,23],[119,44,215,33,"reject"],[119,50,215,23],[119,52,215,44],[120,0,216,6,"RCTAsyncStorage"],[120,33,216,22,"clear"],[120,38,216,6],[120,39,216,28],[120,49,216,38,"error"],[120,54,216,28],[120,56,216,45],[121,0,217,8],[121,14,217,14,"err"],[121,17,217,17],[121,20,217,20,"convertError"],[121,32,217,32],[121,33,217,33,"error"],[121,38,217,32],[121,39,217,8],[122,0,218,8,"callback"],[122,10,218,8,"callback"],[122,18,218,16],[122,22,218,20,"callback"],[122,30,218,28],[122,31,218,29,"err"],[122,34,218,28],[122,35,218,8],[124,0,219,8],[124,14,219,12,"err"],[124,17,219,8],[124,19,219,17],[125,0,220,10,"reject"],[125,12,220,10,"reject"],[125,18,220,16],[125,19,220,17,"err"],[125,22,220,16],[125,23,220,10],[126,0,221,9],[126,11,219,8],[126,17,221,15],[127,0,222,10,"resolve"],[127,12,222,10,"resolve"],[127,19,222,17],[127,20,222,18],[127,24,222,17],[127,25,222,10],[128,0,223,9],[129,0,224,7],[129,9,216,6],[130,0,225,5],[130,7,215,11],[130,8,215,4],[131,0,226,3],[131,5,103,21],[132,0,233,2,"getAllKeys"],[132,4,233,2,"getAllKeys"],[132,14,233,12],[132,16,233,14],[132,36,234,4,"callback"],[132,44,233,14],[132,46,235,34],[133,0,236,4],[133,13,236,11],[133,17,236,15,"Promise"],[133,24,236,11],[133,25,236,23],[133,35,236,24,"resolve"],[133,42,236,23],[133,44,236,33,"reject"],[133,50,236,23],[133,52,236,44],[134,0,237,6,"RCTAsyncStorage"],[134,33,237,22,"getAllKeys"],[134,43,237,6],[134,44,237,33],[134,54,237,43,"error"],[134,59,237,33],[134,61,237,50,"keys"],[134,65,237,33],[134,67,237,56],[135,0,238,8],[135,14,238,14,"err"],[135,17,238,17],[135,20,238,20,"convertError"],[135,32,238,32],[135,33,238,33,"error"],[135,38,238,32],[135,39,238,8],[136,0,239,8,"callback"],[136,10,239,8,"callback"],[136,18,239,16],[136,22,239,20,"callback"],[136,30,239,28],[136,31,239,29,"err"],[136,34,239,28],[136,36,239,34,"keys"],[136,40,239,28],[136,41,239,8],[138,0,240,8],[138,14,240,12,"err"],[138,17,240,8],[138,19,240,17],[139,0,241,10,"reject"],[139,12,241,10,"reject"],[139,18,241,16],[139,19,241,17,"err"],[139,22,241,16],[139,23,241,10],[140,0,242,9],[140,11,240,8],[140,17,242,15],[141,0,243,10,"resolve"],[141,12,243,10,"resolve"],[141,19,243,17],[141,20,243,18,"keys"],[141,24,243,17],[141,25,243,10],[142,0,244,9],[143,0,245,7],[143,9,237,6],[144,0,246,5],[144,7,236,11],[144,8,236,4],[145,0,247,3],[145,5,103,21],[146,0,264,2,"flushGetRequests"],[146,4,264,2,"flushGetRequests"],[146,20,264,18],[146,22,264,20],[146,50,264,38],[147,0,265,4],[147,10,265,10,"getRequests"],[147,21,265,21],[147,24,265,24],[147,29,265,29,"_getRequests"],[147,41,265,4],[148,0,266,4],[148,10,266,10,"getKeys"],[148,17,266,17],[148,20,266,20],[148,25,266,25,"_getKeys"],[148,33,266,4],[149,0,268,4],[149,11,268,9,"_getRequests"],[149,23,268,4],[149,26,268,24],[149,28,268,4],[150,0,269,4],[150,11,269,9,"_getKeys"],[150,19,269,4],[150,22,269,20],[150,24,269,4],[152,0,271,4,"RCTAsyncStorage"],[152,31,271,20,"multiGet"],[152,39,271,4],[152,40,271,29,"getKeys"],[152,47,271,4],[152,49,271,38],[152,59,271,48,"errors"],[152,65,271,38],[152,67,271,56,"result"],[152,73,271,38],[152,75,271,64],[153,0,278,6],[153,12,278,12,"map"],[153,15,278,15],[153,18,278,18],[153,20,278,6],[154,0,279,6,"result"],[154,8,279,6,"result"],[154,14,279,12],[154,18,280,8,"result"],[154,24,280,14],[154,25,280,15,"forEach"],[154,32,280,8],[154,33,280,23],[154,49,280,41],[155,0,280,41],[156,0,280,41],[156,14,280,25,"key"],[156,17,280,41],[157,0,280,41],[157,14,280,30,"value"],[157,19,280,41],[159,0,281,10,"map"],[159,10,281,10,"map"],[159,13,281,13],[159,14,281,14,"key"],[159,17,281,13],[159,18,281,10],[159,21,281,21,"value"],[159,26,281,10],[160,0,282,10],[160,17,282,17,"value"],[160,22,282,10],[161,0,283,9],[161,9,280,8],[161,10,279,6],[162,0,284,6],[162,12,284,12,"reqLength"],[162,21,284,21],[162,24,284,24,"getRequests"],[162,35,284,35],[162,36,284,36,"length"],[162,42,284,6],[164,0,285,6],[164,13,285,11],[164,17,285,15,"i"],[164,18,285,16],[164,21,285,19],[164,22,285,6],[164,24,285,22,"i"],[164,25,285,23],[164,28,285,26,"reqLength"],[164,37,285,6],[164,39,285,37,"i"],[164,40,285,38],[164,42,285,6],[164,44,285,42],[165,0,286,8],[165,14,286,14,"request"],[165,21,286,21],[165,24,286,24,"getRequests"],[165,35,286,35],[165,36,286,36,"i"],[165,37,286,35],[165,38,286,8],[166,0,287,8],[166,14,287,14,"requestKeys"],[166,25,287,25],[166,28,287,28,"request"],[166,35,287,35],[166,36,287,36,"keys"],[166,40,287,8],[167,0,288,8],[167,14,288,14,"requestResult"],[167,27,288,27],[167,30,288,30,"requestKeys"],[167,41,288,41],[167,42,288,42,"map"],[167,45,288,30],[167,46,288,46],[167,56,288,47,"key"],[167,59,288,46],[168,0,288,46],[168,19,288,55],[168,20,288,56,"key"],[168,23,288,55],[168,25,288,61,"map"],[168,28,288,64],[168,29,288,65,"key"],[168,32,288,64],[168,33,288,55],[168,34,288,46],[169,0,288,46],[169,11,288,30],[169,12,288,8],[170,0,289,8,"request"],[170,10,289,8,"request"],[170,17,289,15],[170,18,289,16,"callback"],[170,26,289,8],[170,30,289,28,"request"],[170,37,289,35],[170,38,289,36,"callback"],[170,46,289,28],[170,47,289,45],[170,51,289,28],[170,53,289,51,"requestResult"],[170,66,289,28],[170,67,289,8],[171,0,290,8,"request"],[171,10,290,8,"request"],[171,17,290,15],[171,18,290,16,"resolve"],[171,25,290,8],[171,29,290,27,"request"],[171,36,290,34],[171,37,290,35,"resolve"],[171,44,290,27],[171,45,290,43,"requestResult"],[171,58,290,27],[171,59,290,8],[172,0,291,7],[173,0,292,5],[173,7,271,4],[174,0,293,3],[174,5,103,21],[175,0,302,2,"multiGet"],[175,4,302,2,"multiGet"],[175,12,302,10],[175,14,302,12],[175,32,303,4,"keys"],[175,36,302,12],[175,38,304,4,"callback"],[175,46,302,12],[175,48,305,51],[176,0,305,51],[178,0,306,4],[178,10,306,8],[178,11,306,9],[178,16,306,14,"_immediate"],[178,26,306,4],[178,28,306,26],[179,0,307,6],[179,13,307,11,"_immediate"],[179,23,307,6],[179,26,307,24,"setImmediate"],[179,38,307,36],[179,39,307,37],[179,51,307,43],[180,0,308,8],[180,10,308,8],[180,15,308,12],[180,16,308,13,"_immediate"],[180,26,308,8],[180,29,308,26],[180,33,308,8],[182,0,309,8],[182,10,309,8],[182,15,309,12],[182,16,309,13,"flushGetRequests"],[182,32,309,8],[183,0,310,7],[183,9,307,36],[183,10,307,6],[184,0,311,5],[186,0,313,4],[186,10,313,10,"getRequest"],[186,20,313,34],[186,23,313,37],[187,0,314,6,"keys"],[187,8,314,6,"keys"],[187,12,314,10],[187,14,314,12,"keys"],[187,18,313,37],[188,0,315,6,"callback"],[188,8,315,6,"callback"],[188,16,315,14],[188,18,315,16,"callback"],[188,26,313,37],[189,0,317,6,"keyIndex"],[189,8,317,6,"keyIndex"],[189,16,317,14],[189,18,317,16],[189,23,317,21,"_getKeys"],[189,31,317,16],[189,32,317,30,"length"],[189,38,313,37],[190,0,318,6,"resolve"],[190,8,318,6,"resolve"],[190,15,318,13],[190,17,318,15],[190,21,313,37],[191,0,319,6,"reject"],[191,8,319,6,"reject"],[191,14,319,12],[191,16,319,14],[192,0,313,37],[192,7,313,4],[193,0,322,4],[193,10,322,10,"promiseResult"],[193,23,322,23],[193,26,322,26],[193,30,322,30,"Promise"],[193,37,322,26],[193,38,322,38],[193,48,322,39,"resolve"],[193,55,322,38],[193,57,322,48,"reject"],[193,63,322,38],[193,65,322,59],[194,0,323,6,"getRequest"],[194,8,323,6,"getRequest"],[194,18,323,16],[194,19,323,17,"resolve"],[194,26,323,6],[194,29,323,27,"resolve"],[194,36,323,6],[195,0,324,6,"getRequest"],[195,8,324,6,"getRequest"],[195,18,324,16],[195,19,324,17,"reject"],[195,25,324,6],[195,28,324,26,"reject"],[195,34,324,6],[196,0,325,5],[196,7,322,26],[196,8,322,4],[198,0,327,4],[198,11,327,9,"_getRequests"],[198,23,327,4],[198,24,327,22,"push"],[198,28,327,4],[198,29,327,27,"getRequest"],[198,39,327,4],[200,0,329,4,"keys"],[200,6,329,4,"keys"],[200,10,329,8],[200,11,329,9,"forEach"],[200,18,329,4],[200,19,329,17],[200,29,329,18,"key"],[200,32,329,17],[200,34,329,26],[201,0,330,6],[201,12,330,10],[201,17,330,14],[201,18,330,15,"_getKeys"],[201,26,330,10],[201,27,330,24,"indexOf"],[201,34,330,10],[201,35,330,32,"key"],[201,38,330,10],[201,44,330,41],[201,45,330,42],[201,46,330,6],[201,48,330,45],[202,0,331,8],[202,10,331,8],[202,15,331,12],[202,16,331,13,"_getKeys"],[202,24,331,8],[202,25,331,22,"push"],[202,29,331,8],[202,30,331,27,"key"],[202,33,331,8],[203,0,332,7],[204,0,333,5],[204,7,329,4],[205,0,335,4],[205,13,335,11,"promiseResult"],[205,26,335,4],[206,0,336,3],[206,5,103,21],[207,0,344,2,"multiSet"],[207,4,344,2,"multiSet"],[207,12,344,10],[207,14,344,12],[207,32,345,4,"keyValuePairs"],[207,45,344,12],[207,47,346,4,"callback"],[207,55,344,12],[207,57,347,19],[208,0,348,4,"checkValidArgs"],[208,6,348,4,"checkValidArgs"],[208,20,348,18],[208,21,348,19,"keyValuePairs"],[208,34,348,18],[208,36,348,34,"callback"],[208,44,348,18],[208,45,348,4],[209,0,349,4],[209,13,349,11],[209,17,349,15,"Promise"],[209,24,349,11],[209,25,349,23],[209,35,349,24,"resolve"],[209,42,349,23],[209,44,349,33,"reject"],[209,50,349,23],[209,52,349,44],[210,0,350,6,"keyValuePairs"],[210,8,350,6,"keyValuePairs"],[210,21,350,19],[210,22,350,20,"forEach"],[210,29,350,6],[210,30,350,28],[210,47,350,46],[211,0,350,46],[212,0,350,46],[212,14,350,30,"key"],[212,17,350,46],[213,0,350,46],[213,14,350,35,"value"],[213,19,350,46],[215,0,351,8,"checkValidInput"],[215,10,351,8,"checkValidInput"],[215,25,351,23],[215,26,351,24,"key"],[215,29,351,23],[215,31,351,29,"value"],[215,36,351,23],[215,37,351,8],[216,0,352,7],[216,9,350,6],[218,0,354,6,"RCTAsyncStorage"],[218,33,354,22,"multiSet"],[218,41,354,6],[218,42,354,31,"keyValuePairs"],[218,55,354,6],[218,57,354,46],[218,67,354,56,"errors"],[218,73,354,46],[218,75,354,64],[219,0,355,8],[219,14,355,14,"error"],[219,19,355,19],[219,22,355,22,"convertErrors"],[219,35,355,35],[219,36,355,36,"errors"],[219,42,355,35],[219,43,355,8],[220,0,356,8,"callback"],[220,10,356,8,"callback"],[220,18,356,16],[220,22,356,20,"callback"],[220,30,356,28],[220,31,356,29,"error"],[220,36,356,28],[220,37,356,8],[222,0,357,8],[222,14,357,12,"error"],[222,19,357,8],[222,21,357,19],[223,0,358,10,"reject"],[223,12,358,10,"reject"],[223,18,358,16],[223,19,358,17,"error"],[223,24,358,16],[223,25,358,10],[224,0,359,9],[224,11,357,8],[224,17,359,15],[225,0,360,10,"resolve"],[225,12,360,10,"resolve"],[225,19,360,17],[225,20,360,18],[225,24,360,17],[225,25,360,10],[226,0,361,9],[227,0,362,7],[227,9,354,6],[228,0,363,5],[228,7,349,11],[228,8,349,4],[229,0,364,3],[229,5,103,21],[230,0,371,2,"multiRemove"],[230,4,371,2,"multiRemove"],[230,15,371,13],[230,17,371,15],[230,38,372,4,"keys"],[230,42,371,15],[230,44,373,4,"callback"],[230,52,371,15],[230,54,374,19],[231,0,375,4],[231,13,375,11],[231,17,375,15,"Promise"],[231,24,375,11],[231,25,375,23],[231,35,375,24,"resolve"],[231,42,375,23],[231,44,375,33,"reject"],[231,50,375,23],[231,52,375,44],[232,0,376,6,"keys"],[232,8,376,6,"keys"],[232,12,376,10],[232,13,376,11,"forEach"],[232,20,376,6],[232,21,376,19],[232,31,376,20,"key"],[232,34,376,19],[233,0,376,19],[233,17,376,28,"checkValidInput"],[233,32,376,43],[233,33,376,44,"key"],[233,36,376,43],[233,37,376,19],[234,0,376,19],[234,9,376,6],[236,0,378,6,"RCTAsyncStorage"],[236,33,378,22,"multiRemove"],[236,44,378,6],[236,45,378,34,"keys"],[236,49,378,6],[236,51,378,40],[236,61,378,50,"errors"],[236,67,378,40],[236,69,378,58],[237,0,379,8],[237,14,379,14,"error"],[237,19,379,19],[237,22,379,22,"convertErrors"],[237,35,379,35],[237,36,379,36,"errors"],[237,42,379,35],[237,43,379,8],[238,0,380,8,"callback"],[238,10,380,8,"callback"],[238,18,380,16],[238,22,380,20,"callback"],[238,30,380,28],[238,31,380,29,"error"],[238,36,380,28],[238,37,380,8],[240,0,381,8],[240,14,381,12,"error"],[240,19,381,8],[240,21,381,19],[241,0,382,10,"reject"],[241,12,382,10,"reject"],[241,18,382,16],[241,19,382,17,"error"],[241,24,382,16],[241,25,382,10],[242,0,383,9],[242,11,381,8],[242,17,383,15],[243,0,384,10,"resolve"],[243,12,384,10,"resolve"],[243,19,384,17],[243,20,384,18],[243,24,384,17],[243,25,384,10],[244,0,385,9],[245,0,386,7],[245,9,378,6],[246,0,387,5],[246,7,375,11],[246,8,375,4],[247,0,388,3],[247,5,103,21],[248,0,398,2,"multiMerge"],[248,4,398,2,"multiMerge"],[248,14,398,12],[248,16,398,14],[248,36,399,4,"keyValuePairs"],[248,49,398,14],[248,51,400,4,"callback"],[248,59,398,14],[248,61,401,19],[249,0,402,4],[249,13,402,11],[249,17,402,15,"Promise"],[249,24,402,11],[249,25,402,23],[249,35,402,24,"resolve"],[249,42,402,23],[249,44,402,33,"reject"],[249,50,402,23],[249,52,402,44],[250,0,403,6,"RCTAsyncStorage"],[250,33,403,22,"multiMerge"],[250,43,403,6],[250,44,403,33,"keyValuePairs"],[250,57,403,6],[250,59,403,48],[250,69,403,58,"errors"],[250,75,403,48],[250,77,403,66],[251,0,404,8],[251,14,404,14,"error"],[251,19,404,19],[251,22,404,22,"convertErrors"],[251,35,404,35],[251,36,404,36,"errors"],[251,42,404,35],[251,43,404,8],[252,0,405,8,"callback"],[252,10,405,8,"callback"],[252,18,405,16],[252,22,405,20,"callback"],[252,30,405,28],[252,31,405,29,"error"],[252,36,405,28],[252,37,405,8],[254,0,406,8],[254,14,406,12,"error"],[254,19,406,8],[254,21,406,19],[255,0,407,10,"reject"],[255,12,407,10,"reject"],[255,18,407,16],[255,19,407,17,"error"],[255,24,407,16],[255,25,407,10],[256,0,408,9],[256,11,406,8],[256,17,408,15],[257,0,409,10,"resolve"],[257,12,409,10,"resolve"],[257,19,409,17],[257,20,409,18],[257,24,409,17],[257,25,409,10],[258,0,410,9],[259,0,411,7],[259,9,403,6],[260,0,412,5],[260,7,402,11],[260,8,402,4],[261,0,413,3],[262,0,103,21],[262,3,103,0],[264,0,417,0],[264,6,417,4],[264,7,417,5,"RCTAsyncStorage"],[264,32,417,21,"multiMerge"],[264,42,417,0],[264,44,417,33],[265,0,419,2],[265,11,419,9,"AsyncStorage"],[265,23,419,21],[265,24,419,22,"mergeItem"],[265,33,419,2],[266,0,421,2],[266,11,421,9,"AsyncStorage"],[266,23,421,21],[266,24,421,22,"multiMerge"],[266,34,421,2],[267,0,422,1],[269,0,424,0],[269,11,424,9,"convertErrors"],[269,24,424,0],[269,25,424,23,"errs"],[269,29,424,0],[269,31,424,54],[270,0,425,2],[270,8,425,6],[270,9,425,7,"errs"],[270,13,425,6],[270,17,425,16,"Array"],[270,22,425,21],[270,23,425,22,"isArray"],[270,30,425,16],[270,31,425,30,"errs"],[270,35,425,16],[270,40,425,39,"errs"],[270,44,425,43],[270,45,425,44,"length"],[270,51,425,39],[270,56,425,55],[270,57,425,2],[270,59,425,59],[271,0,426,4],[271,13,426,11],[271,17,426,4],[272,0,427,3],[274,0,428,2],[274,11,428,9],[274,12,428,10,"Array"],[274,17,428,15],[274,18,428,16,"isArray"],[274,25,428,10],[274,26,428,24,"errs"],[274,30,428,10],[274,34,428,32,"errs"],[274,38,428,10],[274,41,428,39],[274,42,428,40,"errs"],[274,46,428,39],[274,47,428,9],[274,49,428,47,"map"],[274,52,428,9],[274,53,428,51],[274,63,428,52,"e"],[274,64,428,51],[275,0,428,51],[275,13,428,58,"convertError"],[275,25,428,70],[275,26,428,71,"e"],[275,27,428,70],[275,28,428,51],[276,0,428,51],[276,5,428,9],[276,6,428,2],[277,0,429,1],[279,0,431,0],[279,11,431,9,"convertError"],[279,23,431,0],[279,24,431,22,"error"],[279,29,431,0],[279,31,431,37],[280,0,432,2],[280,8,432,6],[280,9,432,7,"error"],[280,14,432,2],[280,16,432,14],[281,0,433,4],[281,13,433,11],[281,17,433,4],[282,0,434,3],[284,0,435,2],[284,8,435,8,"out"],[284,11,435,11],[284,14,435,14],[284,18,435,18,"Error"],[284,23,435,14],[284,24,435,24,"error"],[284,29,435,29],[284,30,435,30,"message"],[284,37,435,14],[284,38,435,2],[285,0,437,2,"out"],[285,4,437,2,"out"],[285,7,437,5],[285,8,437,6,"key"],[285,11,437,2],[285,14,437,12,"error"],[285,19,437,17],[285,20,437,18,"key"],[285,23,437,2],[286,0,438,2],[286,11,438,9,"out"],[286,14,438,2],[287,0,439,1],[289,17,441,15,"AsyncStorage"],[289,29]],"functionMap":{"names":["<global>","checkValidInput","checkValidArgs","getItem","Promise$argument_0","RCTAsyncStorage.multiGet$argument_1","setItem","RCTAsyncStorage.multiSet$argument_1","removeItem","RCTAsyncStorage.multiRemove$argument_1","mergeItem","RCTAsyncStorage.multiMerge$argument_1","clear","RCTAsyncStorage.clear$argument_0","getAllKeys","RCTAsyncStorage.getAllKeys$argument_0","flushGetRequests","result.forEach$argument_0","requestKeys.map$argument_0","multiGet","setImmediate$argument_0","keys.forEach$argument_0","multiSet","keyValuePairs.forEach$argument_0","multiRemove","multiMerge","convertErrors","map$argument_0","convertError"],"mappings":"AAA;ACiD;CDoB;AEE;CFsB;WGmB;uBCI;sCCE;ODU;KDC;GHC;WMO;uBFK;+CGE;OHQ;KEC;GNC;cQO;uBJI;yCKE;OLQ;KIC;GRC;aUU;uBNK;iDOE;OPQ;KMC;GVC;SYS;uBRC;4BSC;OTQ;KQC;GZC;ccO;uBVG;iCWC;OXQ;KUC;GdC;oBgBiB;sCXO;uBYS;SZG;8CaK,wBb;KWI;GhBC;YmBS;qCCK;ODG;sCfY;KeG;iBEI;KFI;GnBG;YsBQ;uBlBK;4BmBC;OnBE;8CGE;OHQ;KkBC;GtBC;ewBO;uBpBI;mBiBC,6BjB;wCKE;OLQ;KoBC;GxBC;cyBU;uBrBI;gDOC;OPQ;KqBC;GzBC;A0BW;mDCI,sBD;C1BC;A4BE;C5BQ"}},"type":"js/module"}]}