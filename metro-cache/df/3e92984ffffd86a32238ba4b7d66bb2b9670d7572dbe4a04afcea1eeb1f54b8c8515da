{"dependencies":[{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"@react-navigation/core","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n\n  function useScrollToTop(ref) {\n    var navigation = (0, _core.useNavigation)();\n    var route = (0, _core.useRoute)();\n    React.useEffect(function () {\n      var current = navigation;\n\n      while (current && current.dangerouslyGetState().type !== 'tab') {\n        current = current.dangerouslyGetParent();\n      }\n\n      if (!current) {\n        return;\n      }\n\n      var unsubscribe = current.addListener('tabPress', function (e) {\n        var isFocused = navigation.isFocused();\n        var isFirst = navigation === current || navigation.dangerouslyGetState().routes[0].key === route.key;\n        requestAnimationFrame(function () {\n          var scrollable = getScrollableNode(ref);\n\n          if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n            if ('scrollToTop' in scrollable) {\n              scrollable.scrollToTop();\n            } else if ('scrollTo' in scrollable) {\n              scrollable.scrollTo({\n                y: 0,\n                animated: true\n              });\n            } else if ('scrollToOffset' in scrollable) {\n              scrollable.scrollToOffset({\n                offset: 0,\n                animated: true\n              });\n            } else if ('scrollResponderScrollTo' in scrollable) {\n              scrollable.scrollResponderScrollTo({\n                y: 0,\n                animated: true\n              });\n            }\n          }\n        });\n      });\n      return unsubscribe;\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":76,"map":[[7,0,1,0],[9,0,2,0],[15,0,17,0],[15,11,17,9,"getScrollableNode"],[15,28,17,0],[15,29,17,27,"ref"],[15,32,17,0],[15,34,17,68],[16,0,18,2],[16,8,18,6,"ref"],[16,11,18,9],[16,12,18,10,"current"],[16,19,18,6],[16,23,18,21],[16,27,18,2],[16,29,18,27],[17,0,19,4],[17,13,19,11],[17,17,19,4],[18,0,20,3],[20,0,22,2],[20,8,23,4],[20,25,23,21,"ref"],[20,28,23,24],[20,29,23,25,"current"],[20,36,23,4],[20,40,24,4],[20,54,24,18,"ref"],[20,57,24,21],[20,58,24,22,"current"],[20,65,23,4],[20,69,25,4],[20,89,25,24,"ref"],[20,92,25,27],[20,93,25,28,"current"],[20,100,23,4],[20,104,26,4],[20,133,26,33,"ref"],[20,136,26,36],[20,137,26,37,"current"],[20,144,22,2],[20,146,27,4],[21,0,29,4],[21,13,29,11,"ref"],[21,16,29,14],[21,17,29,15,"current"],[21,24,29,4],[22,0,30,3],[22,5,22,2],[22,11,30,9],[22,15,30,13],[22,39,30,37,"ref"],[22,42,30,40],[22,43,30,41,"current"],[22,50,30,9],[22,52,30,50],[23,0,33,4],[23,13,33,11,"ref"],[23,16,33,14],[23,17,33,15,"current"],[23,24,33,11],[23,25,33,23,"getScrollResponder"],[23,43,33,11],[23,45,33,4],[24,0,34,3],[24,5,30,9],[24,11,34,9],[24,15,34,13],[24,28,34,26,"ref"],[24,31,34,29],[24,32,34,30,"current"],[24,39,34,9],[24,41,34,39],[25,0,39,4],[25,13,39,11,"ref"],[25,16,39,14],[25,17,39,15,"current"],[25,24,39,11],[25,25,39,23,"getNode"],[25,32,39,11],[25,34,39,4],[26,0,40,3],[26,5,34,9],[26,11,40,9],[27,0,41,4],[27,13,41,11,"ref"],[27,16,41,14],[27,17,41,15,"current"],[27,24,41,4],[28,0,42,3],[29,0,43,1],[31,0,45,15],[31,11,45,24,"useScrollToTop"],[31,25,45,15],[31,26,46,2,"ref"],[31,29,45,15],[31,31,47,2],[32,0,48,2],[32,8,48,8,"navigation"],[32,18,48,18],[32,21,48,21],[32,47,48,2],[33,0,49,2],[33,8,49,8,"route"],[33,13,49,13],[33,16,49,16],[33,37,49,2],[34,0,51,2,"React"],[34,4,51,2,"React"],[34,9,51,7],[34,10,51,8,"useEffect"],[34,19,51,2],[34,20,51,18],[34,32,51,24],[35,0,52,4],[35,10,52,8,"current"],[35,17,52,15],[35,20,52,18,"navigation"],[35,30,52,4],[37,0,56,4],[37,13,56,11,"current"],[37,20,56,18],[37,24,56,22,"current"],[37,31,56,29],[37,32,56,30,"dangerouslyGetState"],[37,51,56,22],[37,54,56,52,"type"],[37,58,56,22],[37,63,56,61],[37,68,56,4],[37,70,56,68],[38,0,57,6,"current"],[38,8,57,6,"current"],[38,15,57,13],[38,18,57,16,"current"],[38,25,57,23],[38,26,57,24,"dangerouslyGetParent"],[38,46,57,16],[38,48,57,6],[39,0,58,5],[41,0,60,4],[41,10,60,8],[41,11,60,9,"current"],[41,18,60,4],[41,20,60,18],[42,0,61,6],[43,0,62,5],[45,0,64,4],[45,10,64,10,"unsubscribe"],[45,21,64,21],[45,24,64,24,"current"],[45,31,64,31],[45,32,64,32,"addListener"],[45,43,64,24],[45,44,68,6],[45,54,64,24],[45,56,69,6],[45,66,69,7,"e"],[45,67,69,6],[45,69,69,41],[46,0,71,8],[46,12,71,14,"isFocused"],[46,21,71,23],[46,24,71,26,"navigation"],[46,34,71,36],[46,35,71,37,"isFocused"],[46,44,71,26],[46,46,71,8],[47,0,75,8],[47,12,75,14,"isFirst"],[47,19,75,21],[47,22,76,10,"navigation"],[47,32,76,20],[47,37,76,25,"current"],[47,44,76,10],[47,48,77,10,"navigation"],[47,58,77,20],[47,59,77,21,"dangerouslyGetState"],[47,78,77,10],[47,81,77,43,"routes"],[47,87,77,10],[47,88,77,50],[47,89,77,10],[47,91,77,53,"key"],[47,94,77,10],[47,99,77,61,"route"],[47,104,77,66],[47,105,77,67,"key"],[47,108,75,8],[48,0,81,8,"requestAnimationFrame"],[48,8,81,8,"requestAnimationFrame"],[48,29,81,29],[48,30,81,30],[48,42,81,36],[49,0,82,10],[49,14,82,16,"scrollable"],[49,24,82,26],[49,27,82,29,"getScrollableNode"],[49,44,82,46],[49,45,82,47,"ref"],[49,48,82,46],[49,49,82,10],[51,0,84,10],[51,14,84,14,"isFocused"],[51,23,84,23],[51,27,84,27,"isFirst"],[51,34,84,14],[51,38,84,38,"scrollable"],[51,48,84,14],[51,52,84,52],[51,53,84,53,"e"],[51,54,84,54],[51,55,84,55,"defaultPrevented"],[51,71,84,10],[51,73,84,73],[52,0,85,12],[52,16,85,16],[52,33,85,33,"scrollable"],[52,43,85,12],[52,45,85,45],[53,0,86,14,"scrollable"],[53,14,86,14,"scrollable"],[53,24,86,24],[53,25,86,25,"scrollToTop"],[53,36,86,14],[54,0,87,13],[54,13,85,12],[54,19,87,19],[54,23,87,23],[54,37,87,37,"scrollable"],[54,47,87,19],[54,49,87,49],[55,0,88,14,"scrollable"],[55,14,88,14,"scrollable"],[55,24,88,24],[55,25,88,25,"scrollTo"],[55,33,88,14],[55,34,88,34],[56,0,88,36,"y"],[56,16,88,36,"y"],[56,17,88,37],[56,19,88,39],[56,20,88,34],[57,0,88,42,"animated"],[57,16,88,42,"animated"],[57,24,88,50],[57,26,88,52],[58,0,88,34],[58,15,88,14],[59,0,89,13],[59,13,87,19],[59,19,89,19],[59,23,89,23],[59,43,89,43,"scrollable"],[59,53,89,19],[59,55,89,55],[60,0,90,14,"scrollable"],[60,14,90,14,"scrollable"],[60,24,90,24],[60,25,90,25,"scrollToOffset"],[60,39,90,14],[60,40,90,40],[61,0,90,42,"offset"],[61,16,90,42,"offset"],[61,22,90,48],[61,24,90,50],[61,25,90,40],[62,0,90,53,"animated"],[62,16,90,53,"animated"],[62,24,90,61],[62,26,90,63],[63,0,90,40],[63,15,90,14],[64,0,91,13],[64,13,89,19],[64,19,91,19],[64,23,91,23],[64,52,91,52,"scrollable"],[64,62,91,19],[64,64,91,64],[65,0,92,14,"scrollable"],[65,14,92,14,"scrollable"],[65,24,92,24],[65,25,92,25,"scrollResponderScrollTo"],[65,48,92,14],[65,49,92,49],[66,0,92,51,"y"],[66,16,92,51,"y"],[66,17,92,52],[66,19,92,54],[66,20,92,49],[67,0,92,57,"animated"],[67,16,92,57,"animated"],[67,24,92,65],[67,26,92,67],[68,0,92,49],[68,15,92,14],[69,0,93,13],[70,0,94,11],[71,0,95,9],[71,9,81,29],[71,10,81,8],[72,0,96,7],[72,7,64,24],[72,8,64,4],[73,0,99,4],[73,13,99,11,"unsubscribe"],[73,24,99,4],[74,0,100,3],[74,5,51,2],[74,7,100,5],[74,8,100,6,"navigation"],[74,18,100,5],[74,20,100,18,"ref"],[74,23,100,5],[74,25,100,23,"route"],[74,30,100,28],[74,31,100,29,"key"],[74,34,100,5],[74,35,51,2],[75,0,101,1]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","current.addListener$argument_1","requestAnimationFrame$argument_0"],"mappings":"AAA;ACgB;CD0B;eEE;kBCM;MCkB;8BCY;SDc;ODC;GDI;CFC"}},"type":"js/module"}]}