{"dependencies":[{"name":"./core.js","data":{"isAsync":false,"locs":[{"start":{"line":5,"column":14},"end":{"line":5,"column":34}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Promise = _$$_REQUIRE(_dependencyMap[0], \"./core.js\");\n\n  module.exports = Promise;\n  var TRUE = valuePromise(true);\n  var FALSE = valuePromise(false);\n  var NULL = valuePromise(null);\n  var UNDEFINED = valuePromise(undefined);\n  var ZERO = valuePromise(0);\n  var EMPTYSTRING = valuePromise('');\n\n  function valuePromise(value) {\n    var p = new Promise(Promise._0);\n    p._V = 1;\n    p._W = value;\n    return p;\n  }\n\n  Promise.resolve = function (value) {\n    if (value instanceof Promise) return value;\n    if (value === null) return NULL;\n    if (value === undefined) return UNDEFINED;\n    if (value === true) return TRUE;\n    if (value === false) return FALSE;\n    if (value === 0) return ZERO;\n    if (value === '') return EMPTYSTRING;\n\n    if (typeof value === 'object' || typeof value === 'function') {\n      try {\n        var then = value.then;\n\n        if (typeof then === 'function') {\n          return new Promise(then.bind(value));\n        }\n      } catch (ex) {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      }\n    }\n\n    return valuePromise(value);\n  };\n\n  var _iterableToArray = function iterableToArray(iterable) {\n    if (typeof Array.from === 'function') {\n      _iterableToArray = Array.from;\n      return Array.from(iterable);\n    }\n\n    _iterableToArray = function iterableToArray(x) {\n      return Array.prototype.slice.call(x);\n    };\n\n    return Array.prototype.slice.call(iterable);\n  };\n\n  Promise.all = function (arr) {\n    var args = _iterableToArray(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          if (val instanceof Promise && val.then === Promise.prototype.then) {\n            while (val._V === 3) {\n              val = val._W;\n            }\n\n            if (val._V === 1) return res(i, val._W);\n            if (val._V === 2) reject(val._W);\n            val.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          } else {\n            var then = val.then;\n\n            if (typeof then === 'function') {\n              var p = new Promise(then.bind(val));\n              p.then(function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n        }\n\n        args[i] = val;\n\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      _iterableToArray(values).forEach(function (value) {\n        Promise.resolve(value).then(resolve, reject);\n      });\n    });\n  };\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n});","lineCount":123,"map":[[2,0,1,0],[4,0,5,0],[4,6,5,4,"Promise"],[4,13,5,11],[4,16,5,14,"require"],[4,27,5,21],[4,59,5,0],[6,0,7,0,"module"],[6,2,7,0,"module"],[6,8,7,6],[6,9,7,7,"exports"],[6,16,7,0],[6,19,7,17,"Promise"],[6,26,7,0],[7,0,11,0],[7,6,11,4,"TRUE"],[7,10,11,8],[7,13,11,11,"valuePromise"],[7,25,11,23],[7,26,11,24],[7,30,11,23],[7,31,11,0],[8,0,12,0],[8,6,12,4,"FALSE"],[8,11,12,9],[8,14,12,12,"valuePromise"],[8,26,12,24],[8,27,12,25],[8,32,12,24],[8,33,12,0],[9,0,13,0],[9,6,13,4,"NULL"],[9,10,13,8],[9,13,13,11,"valuePromise"],[9,25,13,23],[9,26,13,24],[9,30,13,23],[9,31,13,0],[10,0,14,0],[10,6,14,4,"UNDEFINED"],[10,15,14,13],[10,18,14,16,"valuePromise"],[10,30,14,28],[10,31,14,29,"undefined"],[10,40,14,28],[10,41,14,0],[11,0,15,0],[11,6,15,4,"ZERO"],[11,10,15,8],[11,13,15,11,"valuePromise"],[11,25,15,23],[11,26,15,24],[11,27,15,23],[11,28,15,0],[12,0,16,0],[12,6,16,4,"EMPTYSTRING"],[12,17,16,15],[12,20,16,18,"valuePromise"],[12,32,16,30],[12,33,16,31],[12,35,16,30],[12,36,16,0],[14,0,18,0],[14,11,18,9,"valuePromise"],[14,23,18,0],[14,24,18,22,"value"],[14,29,18,0],[14,31,18,29],[15,0,19,2],[15,8,19,6,"p"],[15,9,19,7],[15,12,19,10],[15,16,19,14,"Promise"],[15,23,19,10],[15,24,19,22,"Promise"],[15,31,19,29],[15,32,19,30,"_0"],[15,34,19,10],[15,35,19,2],[16,0,20,2,"p"],[16,4,20,2,"p"],[16,5,20,3],[16,6,20,4,"_V"],[16,8,20,2],[16,11,20,9],[16,12,20,2],[17,0,21,2,"p"],[17,4,21,2,"p"],[17,5,21,3],[17,6,21,4,"_W"],[17,8,21,2],[17,11,21,9,"value"],[17,16,21,2],[18,0,22,2],[18,11,22,9,"p"],[18,12,22,2],[19,0,23,1],[21,0,24,0,"Promise"],[21,2,24,0,"Promise"],[21,9,24,7],[21,10,24,8,"resolve"],[21,17,24,0],[21,20,24,18],[21,30,24,28,"value"],[21,35,24,18],[21,37,24,35],[22,0,25,2],[22,8,25,6,"value"],[22,13,25,11],[22,25,25,23,"Promise"],[22,32,25,2],[22,34,25,32],[22,41,25,39,"value"],[22,46,25,32],[23,0,27,2],[23,8,27,6,"value"],[23,13,27,11],[23,18,27,16],[23,22,27,2],[23,24,27,22],[23,31,27,29,"NULL"],[23,35,27,22],[24,0,28,2],[24,8,28,6,"value"],[24,13,28,11],[24,18,28,16,"undefined"],[24,27,28,2],[24,29,28,27],[24,36,28,34,"UNDEFINED"],[24,45,28,27],[25,0,29,2],[25,8,29,6,"value"],[25,13,29,11],[25,18,29,16],[25,22,29,2],[25,24,29,22],[25,31,29,29,"TRUE"],[25,35,29,22],[26,0,30,2],[26,8,30,6,"value"],[26,13,30,11],[26,18,30,16],[26,23,30,2],[26,25,30,23],[26,32,30,30,"FALSE"],[26,37,30,23],[27,0,31,2],[27,8,31,6,"value"],[27,13,31,11],[27,18,31,16],[27,19,31,2],[27,21,31,19],[27,28,31,26,"ZERO"],[27,32,31,19],[28,0,32,2],[28,8,32,6,"value"],[28,13,32,11],[28,18,32,16],[28,20,32,2],[28,22,32,20],[28,29,32,27,"EMPTYSTRING"],[28,40,32,20],[30,0,34,2],[30,8,34,6],[30,15,34,13,"value"],[30,20,34,6],[30,25,34,23],[30,33,34,6],[30,37,34,35],[30,44,34,42,"value"],[30,49,34,35],[30,54,34,52],[30,64,34,2],[30,66,34,64],[31,0,35,4],[31,10,35,8],[32,0,36,6],[32,12,36,10,"then"],[32,16,36,14],[32,19,36,17,"value"],[32,24,36,22],[32,25,36,23,"then"],[32,29,36,6],[34,0,37,6],[34,12,37,10],[34,19,37,17,"then"],[34,23,37,10],[34,28,37,26],[34,38,37,6],[34,40,37,38],[35,0,38,8],[35,17,38,15],[35,21,38,19,"Promise"],[35,28,38,15],[35,29,38,27,"then"],[35,33,38,31],[35,34,38,32,"bind"],[35,38,38,27],[35,39,38,37,"value"],[35,44,38,27],[35,45,38,15],[35,46,38,8],[36,0,39,7],[37,0,40,5],[37,7,35,4],[37,8,40,6],[37,15,40,13,"ex"],[37,17,40,6],[37,19,40,17],[38,0,41,6],[38,15,41,13],[38,19,41,17,"Promise"],[38,26,41,13],[38,27,41,25],[38,37,41,35,"resolve"],[38,44,41,25],[38,46,41,44,"reject"],[38,52,41,25],[38,54,41,52],[39,0,42,8,"reject"],[39,10,42,8,"reject"],[39,16,42,14],[39,17,42,15,"ex"],[39,19,42,14],[39,20,42,8],[40,0,43,7],[40,9,41,13],[40,10,41,6],[41,0,44,5],[42,0,45,3],[44,0,46,2],[44,11,46,9,"valuePromise"],[44,23,46,21],[44,24,46,22,"value"],[44,29,46,21],[44,30,46,2],[45,0,47,1],[45,3,24,0],[47,0,49,0],[47,6,49,4,"iterableToArray"],[47,22,49,19],[47,25,49,22],[47,50,49,32,"iterable"],[47,58,49,22],[47,60,49,42],[48,0,50,2],[48,8,50,6],[48,15,50,13,"Array"],[48,20,50,18],[48,21,50,19,"from"],[48,25,50,6],[48,30,50,28],[48,40,50,2],[48,42,50,40],[49,0,52,4,"iterableToArray"],[49,6,52,4,"iterableToArray"],[49,22,52,19],[49,25,52,22,"Array"],[49,30,52,27],[49,31,52,28,"from"],[49,35,52,4],[50,0,53,4],[50,13,53,11,"Array"],[50,18,53,16],[50,19,53,17,"from"],[50,23,53,11],[50,24,53,22,"iterable"],[50,32,53,11],[50,33,53,4],[51,0,54,3],[53,0,57,2,"iterableToArray"],[53,4,57,2,"iterableToArray"],[53,20,57,17],[53,23,57,20],[53,48,57,30,"x"],[53,49,57,20],[53,51,57,33],[54,0,57,35],[54,13,57,42,"Array"],[54,18,57,47],[54,19,57,48,"prototype"],[54,28,57,42],[54,29,57,58,"slice"],[54,34,57,42],[54,35,57,64,"call"],[54,39,57,42],[54,40,57,69,"x"],[54,41,57,42],[54,42,57,35],[55,0,57,74],[55,5,57,2],[57,0,58,2],[57,11,58,9,"Array"],[57,16,58,14],[57,17,58,15,"prototype"],[57,26,58,9],[57,27,58,25,"slice"],[57,32,58,9],[57,33,58,31,"call"],[57,37,58,9],[57,38,58,36,"iterable"],[57,46,58,9],[57,47,58,2],[58,0,59,1],[58,3,49,0],[60,0,61,0,"Promise"],[60,2,61,0,"Promise"],[60,9,61,7],[60,10,61,8,"all"],[60,13,61,0],[60,16,61,14],[60,26,61,24,"arr"],[60,29,61,14],[60,31,61,29],[61,0,62,2],[61,8,62,6,"args"],[61,12,62,10],[61,15,62,13,"iterableToArray"],[61,31,62,28],[61,32,62,29,"arr"],[61,35,62,28],[61,36,62,2],[63,0,64,2],[63,11,64,9],[63,15,64,13,"Promise"],[63,22,64,9],[63,23,64,21],[63,33,64,31,"resolve"],[63,40,64,21],[63,42,64,40,"reject"],[63,48,64,21],[63,50,64,48],[64,0,65,4],[64,10,65,8,"args"],[64,14,65,12],[64,15,65,13,"length"],[64,21,65,8],[64,26,65,24],[64,27,65,4],[64,29,65,27],[64,36,65,34,"resolve"],[64,43,65,41],[64,44,65,42],[64,46,65,41],[64,47,65,27],[65,0,66,4],[65,10,66,8,"remaining"],[65,19,66,17],[65,22,66,20,"args"],[65,26,66,24],[65,27,66,25,"length"],[65,33,66,4],[67,0,67,4],[67,15,67,13,"res"],[67,18,67,4],[67,19,67,17,"i"],[67,20,67,4],[67,22,67,20,"val"],[67,25,67,4],[67,27,67,25],[68,0,68,6],[68,12,68,10,"val"],[68,15,68,13],[68,20,68,18],[68,27,68,25,"val"],[68,30,68,18],[68,35,68,33],[68,43,68,18],[68,47,68,45],[68,54,68,52,"val"],[68,57,68,45],[68,62,68,60],[68,72,68,13],[68,73,68,6],[68,75,68,73],[69,0,69,8],[69,14,69,12,"val"],[69,17,69,15],[69,29,69,27,"Promise"],[69,36,69,12],[69,40,69,38,"val"],[69,43,69,41],[69,44,69,42,"then"],[69,48,69,38],[69,53,69,51,"Promise"],[69,60,69,58],[69,61,69,59,"prototype"],[69,70,69,51],[69,71,69,69,"then"],[69,75,69,8],[69,77,69,75],[70,0,70,10],[70,19,70,17,"val"],[70,22,70,20],[70,23,70,21,"_V"],[70,25,70,17],[70,30,70,28],[70,31,70,10],[70,33,70,31],[71,0,71,12,"val"],[71,14,71,12,"val"],[71,17,71,15],[71,20,71,18,"val"],[71,23,71,21],[71,24,71,22,"_W"],[71,26,71,12],[72,0,72,11],[74,0,73,10],[74,16,73,14,"val"],[74,19,73,17],[74,20,73,18,"_V"],[74,22,73,14],[74,27,73,25],[74,28,73,10],[74,30,73,28],[74,37,73,35,"res"],[74,40,73,38],[74,41,73,39,"i"],[74,42,73,38],[74,44,73,42,"val"],[74,47,73,45],[74,48,73,46,"_W"],[74,50,73,38],[74,51,73,28],[75,0,74,10],[75,16,74,14,"val"],[75,19,74,17],[75,20,74,18,"_V"],[75,22,74,14],[75,27,74,25],[75,28,74,10],[75,30,74,28,"reject"],[75,36,74,34],[75,37,74,35,"val"],[75,40,74,38],[75,41,74,39,"_W"],[75,43,74,34],[75,44,74,28],[76,0,75,10,"val"],[76,12,75,10,"val"],[76,15,75,13],[76,16,75,14,"then"],[76,20,75,10],[76,21,75,19],[76,31,75,29,"val"],[76,34,75,19],[76,36,75,34],[77,0,76,12,"res"],[77,14,76,12,"res"],[77,17,76,15],[77,18,76,16,"i"],[77,19,76,15],[77,21,76,19,"val"],[77,24,76,15],[77,25,76,12],[78,0,77,11],[78,13,75,10],[78,15,77,13,"reject"],[78,21,75,10],[79,0,78,10],[80,0,79,9],[80,11,69,8],[80,17,79,15],[81,0,80,10],[81,16,80,14,"then"],[81,20,80,18],[81,23,80,21,"val"],[81,26,80,24],[81,27,80,25,"then"],[81,31,80,10],[83,0,81,10],[83,16,81,14],[83,23,81,21,"then"],[83,27,81,14],[83,32,81,30],[83,42,81,10],[83,44,81,42],[84,0,82,12],[84,18,82,16,"p"],[84,19,82,17],[84,22,82,20],[84,26,82,24,"Promise"],[84,33,82,20],[84,34,82,32,"then"],[84,38,82,36],[84,39,82,37,"bind"],[84,43,82,32],[84,44,82,42,"val"],[84,47,82,32],[84,48,82,20],[84,49,82,12],[85,0,83,12,"p"],[85,14,83,12,"p"],[85,15,83,13],[85,16,83,14,"then"],[85,20,83,12],[85,21,83,19],[85,31,83,29,"val"],[85,34,83,19],[85,36,83,34],[86,0,84,14,"res"],[86,16,84,14,"res"],[86,19,84,17],[86,20,84,18,"i"],[86,21,84,17],[86,23,84,21,"val"],[86,26,84,17],[86,27,84,14],[87,0,85,13],[87,15,83,12],[87,17,85,15,"reject"],[87,23,83,12],[88,0,86,12],[89,0,87,11],[90,0,88,9],[91,0,89,7],[93,0,90,6,"args"],[93,8,90,6,"args"],[93,12,90,10],[93,13,90,11,"i"],[93,14,90,10],[93,15,90,6],[93,18,90,16,"val"],[93,21,90,6],[95,0,91,6],[95,12,91,10],[95,14,91,12,"remaining"],[95,23,91,10],[95,28,91,26],[95,29,91,6],[95,31,91,29],[96,0,92,8,"resolve"],[96,10,92,8,"resolve"],[96,17,92,15],[96,18,92,16,"args"],[96,22,92,15],[96,23,92,8],[97,0,93,7],[98,0,94,5],[100,0,95,4],[100,11,95,9],[100,15,95,13,"i"],[100,16,95,14],[100,19,95,17],[100,20,95,4],[100,22,95,20,"i"],[100,23,95,21],[100,26,95,24,"args"],[100,30,95,28],[100,31,95,29,"length"],[100,37,95,4],[100,39,95,37,"i"],[100,40,95,38],[100,42,95,4],[100,44,95,42],[101,0,96,6,"res"],[101,8,96,6,"res"],[101,11,96,9],[101,12,96,10,"i"],[101,13,96,9],[101,15,96,13,"args"],[101,19,96,17],[101,20,96,18,"i"],[101,21,96,17],[101,22,96,9],[101,23,96,6],[102,0,97,5],[103,0,98,3],[103,5,64,9],[103,6,64,2],[104,0,99,1],[104,3,61,0],[106,0,101,0,"Promise"],[106,2,101,0,"Promise"],[106,9,101,7],[106,10,101,8,"reject"],[106,16,101,0],[106,19,101,17],[106,29,101,27,"value"],[106,34,101,17],[106,36,101,34],[107,0,102,2],[107,11,102,9],[107,15,102,13,"Promise"],[107,22,102,9],[107,23,102,21],[107,33,102,31,"resolve"],[107,40,102,21],[107,42,102,40,"reject"],[107,48,102,21],[107,50,102,48],[108,0,103,4,"reject"],[108,6,103,4,"reject"],[108,12,103,10],[108,13,103,11,"value"],[108,18,103,10],[108,19,103,4],[109,0,104,3],[109,5,102,9],[109,6,102,2],[110,0,105,1],[110,3,101,0],[112,0,107,0,"Promise"],[112,2,107,0,"Promise"],[112,9,107,7],[112,10,107,8,"race"],[112,14,107,0],[112,17,107,15],[112,27,107,25,"values"],[112,33,107,15],[112,35,107,33],[113,0,108,2],[113,11,108,9],[113,15,108,13,"Promise"],[113,22,108,9],[113,23,108,21],[113,33,108,31,"resolve"],[113,40,108,21],[113,42,108,40,"reject"],[113,48,108,21],[113,50,108,48],[114,0,109,4,"iterableToArray"],[114,6,109,4,"iterableToArray"],[114,22,109,19],[114,23,109,20,"values"],[114,29,109,19],[114,30,109,4],[114,31,109,28,"forEach"],[114,38,109,4],[114,39,109,36],[114,49,109,45,"value"],[114,54,109,36],[114,56,109,51],[115,0,110,6,"Promise"],[115,8,110,6,"Promise"],[115,15,110,13],[115,16,110,14,"resolve"],[115,23,110,6],[115,24,110,22,"value"],[115,29,110,6],[115,31,110,29,"then"],[115,35,110,6],[115,36,110,34,"resolve"],[115,43,110,6],[115,45,110,43,"reject"],[115,51,110,6],[116,0,111,5],[116,7,109,4],[117,0,112,3],[117,5,108,9],[117,6,108,2],[118,0,113,1],[118,3,107,0],[120,0,117,0,"Promise"],[120,2,117,0,"Promise"],[120,9,117,7],[120,10,117,8,"prototype"],[120,19,117,0],[120,20,117,18],[120,27,117,0],[120,31,117,29],[120,41,117,39,"onRejected"],[120,51,117,29],[120,53,117,51],[121,0,118,2],[121,11,118,9],[121,16,118,14,"then"],[121,20,118,9],[121,21,118,19],[121,25,118,9],[121,27,118,25,"onRejected"],[121,37,118,9],[121,38,118,2],[122,0,119,1],[122,3,117,0]],"functionMap":{"names":["<global>","valuePromise","Promise.resolve","Promise$argument_0","iterableToArray","Promise.all","res","val.then$argument_0","p.then$argument_0","Promise.reject","Promise.race","iterableToArray.forEach$argument_0","Promise.prototype._catch"],"mappings":"AAA;ACiB;CDK;kBEC;yBCiB;ODE;CFI;sBIE;CJU;cKE;qBFG;IGG;mBCQ;WDE;mBEM;aFE;KHS;GEI;CLC;iBSE;qBNC;GME;CTC;eUE;qBPC;oCQC;KRE;GOC;CVC;6BYI;CZE"}},"type":"js/module"}]}