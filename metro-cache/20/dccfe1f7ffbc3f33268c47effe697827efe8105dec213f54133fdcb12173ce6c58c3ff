{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"./parseHermesStack","data":{"isAsync":false,"locs":[{"start":{"line":16,"column":25},"end":{"line":16,"column":54}}]}},{"name":"stacktrace-parser","data":{"isAsync":false,"locs":[{"start":{"line":55,"column":27},"end":{"line":55,"column":55}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var parseHermesStack = _$$_REQUIRE(_dependencyMap[1], \"./parseHermesStack\");\n\n  function convertHermesStack(stack) {\n    var frames = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(stack.entries), _step; !(_step = _iterator()).done;) {\n      var entry = _step.value;\n\n      if (entry.type !== 'FRAME') {\n        continue;\n      }\n\n      var location = entry.location,\n          functionName = entry.functionName;\n\n      if (location.type === 'NATIVE') {\n        continue;\n      }\n\n      frames.push({\n        methodName: functionName,\n        file: location.sourceUrl,\n        lineNumber: location.line1Based,\n        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n      });\n    }\n\n    return frames;\n  }\n\n  function parseErrorStack(e) {\n    if (!e || !e.stack) {\n      return [];\n    }\n\n    var stacktraceParser = _$$_REQUIRE(_dependencyMap[2], \"stacktrace-parser\");\n\n    var stack = Array.isArray(e.stack) ? e.stack : global.HermesInternal ? convertHermesStack(parseHermesStack(e.stack)) : stacktraceParser.parse(e.stack).map(function (frame) {\n      return _objectSpread(_objectSpread({}, frame), {}, {\n        column: frame.column != null ? frame.column - 1 : null\n      });\n    });\n    return stack;\n  }\n\n  module.exports = parseErrorStack;\n});","lineCount":62,"map":[[2,0,11,0],[16,0,16,0],[16,6,16,6,"parseHermesStack"],[16,22,16,22],[16,25,16,25,"require"],[16,36,16,32],[16,77,16,0],[18,0,27,0],[18,11,27,9,"convertHermesStack"],[18,29,27,0],[18,30,27,28,"stack"],[18,35,27,0],[18,37,27,73],[19,0,28,2],[19,8,28,8,"frames"],[19,14,28,14],[19,17,28,17],[19,19,28,2],[21,0,29,2],[21,57,29,22,"stack"],[21,62,29,27],[21,63,29,28,"entries"],[21,70,29,2],[21,110,29,37],[22,0,29,37],[22,10,29,13,"entry"],[22,15,29,37],[24,0,30,4],[24,10,30,8,"entry"],[24,15,30,13],[24,16,30,14,"type"],[24,20,30,8],[24,25,30,23],[24,32,30,4],[24,34,30,32],[25,0,31,6],[26,0,32,5],[28,0,33,4],[28,10,33,11,"location"],[28,18,33,4],[28,21,33,37,"entry"],[28,26,33,4],[28,27,33,11,"location"],[28,35,33,4],[29,0,33,4],[29,10,33,21,"functionName"],[29,22,33,4],[29,25,33,37,"entry"],[29,30,33,4],[29,31,33,21,"functionName"],[29,43,33,4],[31,0,34,4],[31,10,34,8,"location"],[31,18,34,16],[31,19,34,17,"type"],[31,23,34,8],[31,28,34,26],[31,36,34,4],[31,38,34,36],[32,0,35,6],[33,0,36,5],[35,0,37,4,"frames"],[35,6,37,4,"frames"],[35,12,37,10],[35,13,37,11,"push"],[35,17,37,4],[35,18,37,16],[36,0,38,6,"methodName"],[36,8,38,6,"methodName"],[36,18,38,16],[36,20,38,18,"functionName"],[36,32,37,16],[37,0,39,6,"file"],[37,8,39,6,"file"],[37,12,39,10],[37,14,39,12,"location"],[37,22,39,20],[37,23,39,21,"sourceUrl"],[37,32,37,16],[38,0,40,6,"lineNumber"],[38,8,40,6,"lineNumber"],[38,18,40,16],[38,20,40,18,"location"],[38,28,40,26],[38,29,40,27,"line1Based"],[38,39,37,16],[39,0,41,6,"column"],[39,8,41,6,"column"],[39,14,41,12],[39,16,42,8,"location"],[39,24,42,16],[39,25,42,17,"type"],[39,29,42,8],[39,34,42,26],[39,42,42,8],[39,45,43,12,"location"],[39,53,43,20],[39,54,43,21,"column1Based"],[39,66,43,12],[39,69,43,36],[39,70,42,8],[39,73,44,12,"location"],[39,81,44,20],[39,82,44,21,"virtualOffset0Based"],[40,0,37,16],[40,7,37,4],[41,0,46,3],[43,0,47,2],[43,11,47,9,"frames"],[43,17,47,2],[44,0,48,1],[46,0,50,0],[46,11,50,9,"parseErrorStack"],[46,26,50,0],[46,27,50,25,"e"],[46,28,50,0],[46,30,50,62],[47,0,51,2],[47,8,51,6],[47,9,51,7,"e"],[47,10,51,6],[47,14,51,12],[47,15,51,13,"e"],[47,16,51,14],[47,17,51,15,"stack"],[47,22,51,2],[47,24,51,22],[48,0,52,4],[48,13,52,11],[48,15,52,4],[49,0,53,3],[51,0,55,2],[51,8,55,8,"stacktraceParser"],[51,24,55,24],[51,27,55,27,"require"],[51,38,55,34],[51,78,55,2],[53,0,56,2],[53,8,56,8,"stack"],[53,13,56,13],[53,16,56,16,"Array"],[53,21,56,21],[53,22,56,22,"isArray"],[53,29,56,16],[53,30,56,30,"e"],[53,31,56,31],[53,32,56,32,"stack"],[53,37,56,16],[53,41,57,6,"e"],[53,42,57,7],[53,43,57,8,"stack"],[53,48,56,16],[53,51,58,6,"global"],[53,57,58,12],[53,58,58,13,"HermesInternal"],[53,72,58,6],[53,75,59,6,"convertHermesStack"],[53,93,59,24],[53,94,59,25,"parseHermesStack"],[53,110,59,41],[53,111,59,42,"e"],[53,112,59,43],[53,113,59,44,"stack"],[53,118,59,41],[53,119,59,24],[53,120,58,6],[53,123,60,6,"stacktraceParser"],[53,139,60,22],[53,140,60,23,"parse"],[53,145,60,6],[53,146,60,29,"e"],[53,147,60,30],[53,148,60,31,"stack"],[53,153,60,6],[53,155,60,38,"map"],[53,158,60,6],[53,159,60,42],[53,169,60,42,"frame"],[53,174,60,47],[54,0,60,47],[54,45,61,11,"frame"],[54,50,60,47],[55,0,62,8,"column"],[55,8,62,8,"column"],[55,14,62,14],[55,16,62,16,"frame"],[55,21,62,21],[55,22,62,22,"column"],[55,28,62,16],[55,32,62,32],[55,36,62,16],[55,39,62,39,"frame"],[55,44,62,44],[55,45,62,45,"column"],[55,51,62,39],[55,54,62,54],[55,55,62,16],[55,58,62,58],[56,0,60,47],[57,0,60,47],[57,5,60,6],[57,6,56,2],[58,0,65,2],[58,11,65,9,"stack"],[58,16,65,2],[59,0,66,1],[61,0,68,0,"module"],[61,2,68,0,"module"],[61,8,68,6],[61,9,68,7,"exports"],[61,16,68,0],[61,19,68,17,"parseErrorStack"],[61,34,68,0]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;AC0B;CDqB;AEE;0CCU;QDG;CFG"}},"type":"js/module"}]}