{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"./BatchedBridge","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":22},"end":{"line":13,"column":48}}]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":18},"end":{"line":15,"column":38}}]}},{"name":"../Utilities/defineLazyObjectProperty","data":{"isAsync":false,"locs":[{"start":{"line":174,"column":35},"end":{"line":174,"column":83}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], \"invariant\");\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _slicedToArray(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);\n      var isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n\n    _extends(module, constants);\n\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(\"Unable to define method 'getConstants()' on NativeModule '\" + moduleName + \"'. NativeModule '\" + moduleName + \"' already has a constant or method called 'getConstants'. Please remove it.\");\n    }\n\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var enqueueingFrameError = new Error();\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));\n          });\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        args = args.slice(0, args.length - callbackCount);\n\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, args, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);\n        }\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function updateErrorWithErrorData(errorData, error) {\n    return _extends(error, errorData || {});\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[4], \"../Utilities/defineLazyObjectProperty\");\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: function get() {\n            return loadModule(info.name, moduleID);\n          }\n        });\n      }\n    });\n  }\n\n  module.exports = NativeModules;\n});","lineCount":154,"map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"BatchedBridge"],[8,19,13,19],[8,22,13,22,"require"],[8,33,13,29],[8,71,13,0],[10,0,15,0],[10,6,15,6,"invariant"],[10,15,15,15],[10,18,15,18,"require"],[10,29,15,25],[10,61,15,0],[12,0,29,0],[12,11,29,9,"genModule"],[12,20,29,0],[12,21,30,2,"config"],[12,27,29,0],[12,29,31,2,"moduleID"],[12,37,29,0],[12,39,36,2],[13,0,37,2],[13,8,37,6],[13,9,37,7,"config"],[13,15,37,2],[13,17,37,15],[14,0,38,4],[14,13,38,11],[14,17,38,4],[15,0,39,3],[17,0,41,2],[17,33,41,72,"config"],[17,39,41,2],[18,0,41,2],[18,8,41,9,"moduleName"],[18,18,41,2],[19,0,41,2],[19,8,41,21,"constants"],[19,17,41,2],[20,0,41,2],[20,8,41,32,"methods"],[20,15,41,2],[21,0,41,2],[21,8,41,41,"promiseMethods"],[21,22,41,2],[22,0,41,2],[22,8,41,57,"syncMethods"],[22,19,41,2],[24,0,42,2,"invariant"],[24,4,42,2,"invariant"],[24,13,42,11],[24,14,43,4],[24,15,43,5,"moduleName"],[24,25,43,15],[24,26,43,16,"startsWith"],[24,36,43,5],[24,37,43,27],[24,42,43,5],[24,43,43,4],[24,47,43,37],[24,48,43,38,"moduleName"],[24,58,43,48],[24,59,43,49,"startsWith"],[24,69,43,38],[24,70,43,60],[24,74,43,38],[24,75,42,11],[24,77,44,4],[24,146,45,6],[24,163,44,4],[24,166,46,6,"moduleName"],[24,176,42,11],[24,177,42,2],[26,0,49,2],[26,8,49,6],[26,9,49,7,"constants"],[26,18,49,6],[26,22,49,20],[26,23,49,21,"methods"],[26,30,49,2],[26,32,49,30],[27,0,51,4],[27,13,51,11],[28,0,51,12,"name"],[28,8,51,12,"name"],[28,12,51,16],[28,14,51,18,"moduleName"],[29,0,51,11],[29,7,51,4],[30,0,52,3],[32,0,54,2],[32,8,54,8,"module"],[32,14,54,14],[32,17,54,17],[32,19,54,2],[33,0,55,2,"methods"],[33,4,55,2,"methods"],[33,11,55,9],[33,15,56,4,"methods"],[33,22,56,11],[33,23,56,12,"forEach"],[33,30,56,4],[33,31,56,20],[33,41,56,21,"methodName"],[33,51,56,20],[33,53,56,33,"methodID"],[33,61,56,20],[33,63,56,46],[34,0,57,6],[34,10,57,12,"isPromise"],[34,19,57,21],[34,22,58,8,"promiseMethods"],[34,36,58,22],[34,40,58,26,"arrayContains"],[34,53,58,39],[34,54,58,40,"promiseMethods"],[34,68,58,39],[34,70,58,56,"methodID"],[34,78,58,39],[34,79,57,6],[35,0,59,6],[35,10,59,12,"isSync"],[35,16,59,18],[35,19,59,21,"syncMethods"],[35,30,59,32],[35,34,59,36,"arrayContains"],[35,47,59,49],[35,48,59,50,"syncMethods"],[35,59,59,49],[35,61,59,63,"methodID"],[35,69,59,49],[35,70,59,6],[36,0,60,6,"invariant"],[36,6,60,6,"invariant"],[36,15,60,15],[36,16,61,8],[36,17,61,9,"isPromise"],[36,26,61,8],[36,30,61,22],[36,31,61,23,"isSync"],[36,37,60,15],[36,39,62,8],[36,96,60,15],[36,97,60,6],[37,0,64,6],[37,10,64,12,"methodType"],[37,20,64,22],[37,23,64,25,"isPromise"],[37,32,64,34],[37,35,64,37],[37,44,64,34],[37,47,64,49,"isSync"],[37,53,64,55],[37,56,64,58],[37,62,64,55],[37,65,64,67],[37,72,64,6],[38,0,65,6,"module"],[38,6,65,6,"module"],[38,12,65,12],[38,13,65,13,"methodName"],[38,23,65,12],[38,24,65,6],[38,27,65,27,"genMethod"],[38,36,65,36],[38,37,65,37,"moduleID"],[38,45,65,36],[38,47,65,47,"methodID"],[38,55,65,36],[38,57,65,57,"methodType"],[38,67,65,36],[38,68,65,6],[39,0,66,5],[39,5,56,4],[39,6,55,2],[41,0,68,2],[41,13,68,16,"module"],[41,19,68,2],[41,21,68,24,"constants"],[41,30,68,2],[43,0,70,2],[43,8,70,6,"module"],[43,14,70,12],[43,15,70,13,"getConstants"],[43,27,70,6],[43,31,70,29],[43,35,70,2],[43,37,70,35],[44,0,71,4,"module"],[44,6,71,4,"module"],[44,12,71,10],[44,13,71,11,"getConstants"],[44,25,71,4],[44,28,71,26],[45,0,71,26],[45,15,71,32,"constants"],[45,24,71,41],[45,28,71,45,"Object"],[45,34,71,51],[45,35,71,52,"freeze"],[45,41,71,45],[45,42,71,59],[45,44,71,45],[45,45,71,26],[46,0,71,26],[46,7,71,4],[47,0,72,3],[47,5,70,2],[47,11,72,9],[48,0,73,4,"console"],[48,6,73,4,"console"],[48,13,73,11],[48,14,73,12,"warn"],[48,18,73,4],[48,82,74,67,"moduleName"],[48,92,73,4],[48,117,74,97,"moduleName"],[48,127,73,4],[49,0,76,3],[51,0,78,2],[51,8,78,6,"__DEV__"],[51,15,78,2],[51,17,78,15],[52,0,79,4,"BatchedBridge"],[52,6,79,4,"BatchedBridge"],[52,19,79,17],[52,20,79,18,"createDebugLookup"],[52,37,79,4],[52,38,79,36,"moduleID"],[52,46,79,4],[52,48,79,46,"moduleName"],[52,58,79,4],[52,60,79,58,"methods"],[52,67,79,4],[53,0,80,3],[55,0,82,2],[55,11,82,9],[56,0,82,10,"name"],[56,6,82,10,"name"],[56,10,82,14],[56,12,82,16,"moduleName"],[56,22,82,9],[57,0,82,28,"module"],[57,6,82,28,"module"],[57,12,82,34],[57,14,82,28,"module"],[58,0,82,9],[58,5,82,2],[59,0,83,1],[61,0,86,0,"global"],[61,2,86,0,"global"],[61,8,86,6],[61,9,86,7,"__fbGenNativeModule"],[61,28,86,0],[61,31,86,29,"genModule"],[61,40,86,0],[63,0,88,0],[63,11,88,9,"loadModule"],[63,21,88,0],[63,22,88,20,"name"],[63,26,88,0],[63,28,88,34,"moduleID"],[63,36,88,0],[63,38,88,61],[64,0,89,2,"invariant"],[64,4,89,2,"invariant"],[64,13,89,11],[64,14,90,4,"global"],[64,20,90,10],[64,21,90,11,"nativeRequireModuleConfig"],[64,46,89,11],[64,48,91,4],[64,110,89,11],[64,111,89,2],[65,0,93,2],[65,8,93,8,"config"],[65,14,93,14],[65,17,93,17,"global"],[65,23,93,23],[65,24,93,24,"nativeRequireModuleConfig"],[65,49,93,17],[65,50,93,50,"name"],[65,54,93,17],[65,55,93,2],[66,0,94,2],[66,8,94,8,"info"],[66,12,94,12],[66,15,94,15,"genModule"],[66,24,94,24],[66,25,94,25,"config"],[66,31,94,24],[66,33,94,33,"moduleID"],[66,41,94,24],[66,42,94,2],[67,0,95,2],[67,11,95,9,"info"],[67,15,95,13],[67,19,95,17,"info"],[67,23,95,21],[67,24,95,22,"module"],[67,30,95,2],[68,0,96,1],[70,0,98,0],[70,11,98,9,"genMethod"],[70,20,98,0],[70,21,98,19,"moduleID"],[70,29,98,0],[70,31,98,37,"methodID"],[70,39,98,0],[70,41,98,55,"type"],[70,45,98,0],[70,47,98,73],[71,0,99,2],[71,8,99,6,"fn"],[71,10,99,8],[71,13,99,11],[71,17,99,2],[73,0,100,2],[73,8,100,6,"type"],[73,12,100,10],[73,17,100,15],[73,26,100,2],[73,28,100,26],[74,0,101,4,"fn"],[74,6,101,4,"fn"],[74,8,101,6],[74,11,101,9],[74,20,101,18,"promiseMethodWrapper"],[74,40,101,9],[74,43,101,60],[75,0,101,60],[75,42,101,42,"args"],[75,46,101,60],[76,0,101,42,"args"],[76,10,101,42,"args"],[76,14,101,60],[77,0,101,60],[79,0,103,6],[79,12,103,12,"enqueueingFrameError"],[79,32,103,47],[79,35,103,50],[79,39,103,54,"Error"],[79,44,103,50],[79,46,103,6],[80,0,104,6],[80,15,104,13],[80,19,104,17,"Promise"],[80,26,104,13],[80,27,104,25],[80,37,104,26,"resolve"],[80,44,104,25],[80,46,104,35,"reject"],[80,52,104,25],[80,54,104,46],[81,0,105,8,"BatchedBridge"],[81,10,105,8,"BatchedBridge"],[81,23,105,21],[81,24,105,22,"enqueueNativeCall"],[81,41,105,8],[81,42,106,10,"moduleID"],[81,50,105,8],[81,52,107,10,"methodID"],[81,60,105,8],[81,62,108,10,"args"],[81,66,105,8],[81,68,109,10],[81,78,109,10,"data"],[81,82,109,14],[82,0,109,14],[82,19,109,18,"resolve"],[82,26,109,25],[82,27,109,26,"data"],[82,31,109,25],[82,32,109,14],[83,0,109,14],[83,11,105,8],[83,13,110,10],[83,23,110,10,"errorData"],[83,32,110,19],[84,0,110,19],[84,19,111,12,"reject"],[84,25,111,18],[84,26,111,19,"updateErrorWithErrorData"],[84,50,111,43],[84,51,111,44,"errorData"],[84,60,111,43],[84,62,111,55,"enqueueingFrameError"],[84,82,111,43],[84,83,111,18],[84,84,110,19],[85,0,110,19],[85,11,105,8],[86,0,113,7],[86,9,104,13],[86,10,104,6],[87,0,114,5],[87,7,101,4],[88,0,115,3],[88,5,100,2],[88,11,115,9],[89,0,116,4,"fn"],[89,6,116,4,"fn"],[89,8,116,6],[89,11,116,9],[89,20,116,18,"nonPromiseMethodWrapper"],[89,43,116,9],[89,46,116,63],[90,0,116,63],[90,43,116,45,"args"],[90,47,116,63],[91,0,116,45,"args"],[91,10,116,45,"args"],[91,14,116,63],[92,0,116,63],[94,0,117,6],[94,12,117,12,"lastArg"],[94,19,117,19],[94,22,117,22,"args"],[94,26,117,26],[94,27,117,27,"length"],[94,33,117,22],[94,36,117,36],[94,37,117,22],[94,40,117,40,"args"],[94,44,117,44],[94,45,117,45,"args"],[94,49,117,49],[94,50,117,50,"length"],[94,56,117,45],[94,59,117,59],[94,60,117,44],[94,61,117,22],[94,64,117,64],[94,68,117,6],[95,0,118,6],[95,12,118,12,"secondLastArg"],[95,25,118,25],[95,28,118,28,"args"],[95,32,118,32],[95,33,118,33,"length"],[95,39,118,28],[95,42,118,42],[95,43,118,28],[95,46,118,46,"args"],[95,50,118,50],[95,51,118,51,"args"],[95,55,118,55],[95,56,118,56,"length"],[95,62,118,51],[95,65,118,65],[95,66,118,50],[95,67,118,28],[95,70,118,70],[95,74,118,6],[96,0,119,6],[96,12,119,12,"hasSuccessCallback"],[96,30,119,30],[96,33,119,33],[96,40,119,40,"lastArg"],[96,47,119,33],[96,52,119,52],[96,62,119,6],[97,0,120,6],[97,12,120,12,"hasErrorCallback"],[97,28,120,28],[97,31,120,31],[97,38,120,38,"secondLastArg"],[97,51,120,31],[97,56,120,56],[97,66,120,6],[98,0,121,6,"hasErrorCallback"],[98,8,121,6,"hasErrorCallback"],[98,24,121,22],[98,28,122,8,"invariant"],[98,37,122,17],[98,38,123,10,"hasSuccessCallback"],[98,56,122,17],[98,58,124,10],[98,112,122,17],[98,113,121,6],[99,0,126,6],[99,12,126,12,"onSuccess"],[99,21,126,21],[99,24,126,24,"hasSuccessCallback"],[99,42,126,42],[99,45,126,45,"lastArg"],[99,52,126,42],[99,55,126,55],[99,59,126,6],[100,0,127,6],[100,12,127,12,"onFail"],[100,18,127,18],[100,21,127,21,"hasErrorCallback"],[100,37,127,37],[100,40,127,40,"secondLastArg"],[100,53,127,37],[100,56,127,56],[100,60,127,6],[101,0,128,6],[101,12,128,12,"callbackCount"],[101,25,128,25],[101,28,128,28,"hasSuccessCallback"],[101,46,128,46],[101,49,128,49,"hasErrorCallback"],[101,65,128,6],[102,0,129,6,"args"],[102,8,129,6,"args"],[102,12,129,10],[102,15,129,13,"args"],[102,19,129,17],[102,20,129,18,"slice"],[102,25,129,13],[102,26,129,24],[102,27,129,13],[102,29,129,27,"args"],[102,33,129,31],[102,34,129,32,"length"],[102,40,129,27],[102,43,129,41,"callbackCount"],[102,56,129,13],[102,57,129,6],[104,0,130,6],[104,12,130,10,"type"],[104,16,130,14],[104,21,130,19],[104,27,130,6],[104,29,130,27],[105,0,131,8],[105,17,131,15,"BatchedBridge"],[105,30,131,28],[105,31,131,29,"callNativeSyncHook"],[105,49,131,15],[105,50,132,10,"moduleID"],[105,58,131,15],[105,60,133,10,"methodID"],[105,68,131,15],[105,70,134,10,"args"],[105,74,131,15],[105,76,135,10,"onFail"],[105,82,131,15],[105,84,136,10,"onSuccess"],[105,93,131,15],[105,94,131,8],[106,0,138,7],[106,9,130,6],[106,15,138,13],[107,0,139,8,"BatchedBridge"],[107,10,139,8,"BatchedBridge"],[107,23,139,21],[107,24,139,22,"enqueueNativeCall"],[107,41,139,8],[107,42,140,10,"moduleID"],[107,50,139,8],[107,52,141,10,"methodID"],[107,60,139,8],[107,62,142,10,"args"],[107,66,139,8],[107,68,143,10,"onFail"],[107,74,139,8],[107,76,144,10,"onSuccess"],[107,85,139,8],[108,0,146,7],[109,0,147,5],[109,7,116,4],[110,0,148,3],[112,0,149,2,"fn"],[112,4,149,2,"fn"],[112,6,149,4],[112,7,149,5,"type"],[112,11,149,2],[112,14,149,12,"type"],[112,18,149,2],[113,0,150,2],[113,11,150,9,"fn"],[113,13,150,2],[114,0,151,1],[116,0,153,0],[116,11,153,9,"arrayContains"],[116,24,153,0],[116,25,153,26,"array"],[116,30,153,0],[116,32,153,52,"value"],[116,37,153,0],[116,39,153,71],[117,0,154,2],[117,11,154,9,"array"],[117,16,154,14],[117,17,154,15,"indexOf"],[117,24,154,9],[117,25,154,23,"value"],[117,30,154,9],[117,36,154,34],[117,37,154,35],[117,38,154,2],[118,0,155,1],[120,0,157,0],[120,11,157,9,"updateErrorWithErrorData"],[120,35,157,0],[120,36,158,2,"errorData"],[120,45,157,0],[120,47,159,2,"error"],[120,52,157,0],[120,54,160,17],[121,0,161,2],[121,11,161,9],[121,20,161,23,"error"],[121,25,161,9],[121,27,161,30,"errorData"],[121,36,161,39],[121,40,161,43],[121,42,161,9],[121,43,161,2],[122,0,162,1],[124,0,164,0],[124,6,164,4,"NativeModules"],[124,19,164,54],[124,22,164,57],[124,24,164,0],[126,0,165,0],[126,6,165,4,"global"],[126,12,165,10],[126,13,165,11,"nativeModuleProxy"],[126,30,165,0],[126,32,165,30],[127,0,166,2,"NativeModules"],[127,4,166,2,"NativeModules"],[127,17,166,15],[127,20,166,18,"global"],[127,26,166,24],[127,27,166,25,"nativeModuleProxy"],[127,44,166,2],[128,0,167,1],[128,3,165,0],[128,9,167,7],[128,13,167,11],[128,14,167,12,"global"],[128,20,167,18],[128,21,167,19,"nativeExtensions"],[128,37,167,7],[128,39,167,37],[129,0,168,2],[129,8,168,8,"bridgeConfig"],[129,20,168,20],[129,23,168,23,"global"],[129,29,168,29],[129,30,168,30,"__fbBatchedBridgeConfig"],[129,53,168,2],[130,0,169,2,"invariant"],[130,4,169,2,"invariant"],[130,13,169,11],[130,14,170,4,"bridgeConfig"],[130,26,169,11],[130,28,171,4],[130,94,169,11],[130,95,169,2],[132,0,174,2],[132,8,174,8,"defineLazyObjectProperty"],[132,32,174,32],[132,35,174,35,"require"],[132,46,174,42],[132,106,174,2],[134,0,175,2],[134,5,175,3,"bridgeConfig"],[134,17,175,15],[134,18,175,16,"remoteModuleConfig"],[134,36,175,3],[134,40,175,38],[134,42,175,2],[134,44,175,42,"forEach"],[134,51,175,2],[134,52,176,4],[134,62,176,5,"config"],[134,68,176,4],[134,70,176,27,"moduleID"],[134,78,176,4],[134,80,176,48],[135,0,179,6],[135,10,179,12,"info"],[135,14,179,16],[135,17,179,19,"genModule"],[135,26,179,28],[135,27,179,29,"config"],[135,33,179,28],[135,35,179,37,"moduleID"],[135,43,179,28],[135,44,179,6],[137,0,180,6],[137,10,180,10],[137,11,180,11,"info"],[137,15,180,6],[137,17,180,17],[138,0,181,8],[139,0,182,7],[141,0,184,6],[141,10,184,10,"info"],[141,14,184,14],[141,15,184,15,"module"],[141,21,184,6],[141,23,184,23],[142,0,185,8,"NativeModules"],[142,8,185,8,"NativeModules"],[142,21,185,21],[142,22,185,22,"info"],[142,26,185,26],[142,27,185,27,"name"],[142,31,185,21],[142,32,185,8],[142,35,185,35,"info"],[142,39,185,39],[142,40,185,40,"module"],[142,46,185,8],[143,0,186,7],[143,7,184,6],[143,13,188,11],[144,0,189,8,"defineLazyObjectProperty"],[144,8,189,8,"defineLazyObjectProperty"],[144,32,189,32],[144,33,189,33,"NativeModules"],[144,46,189,32],[144,48,189,48,"info"],[144,52,189,52],[144,53,189,53,"name"],[144,57,189,32],[144,59,189,59],[145,0,190,10,"get"],[145,10,190,10,"get"],[145,13,190,13],[145,15,190,15],[146,0,190,15],[146,19,190,21,"loadModule"],[146,29,190,31],[146,30,190,32,"info"],[146,34,190,36],[146,35,190,37,"name"],[146,39,190,31],[146,41,190,43,"moduleID"],[146,49,190,31],[146,50,190,15],[147,0,190,15],[148,0,189,59],[148,9,189,32],[148,10,189,8],[149,0,192,7],[150,0,193,5],[150,5,175,2],[151,0,195,1],[153,0,197,0,"module"],[153,2,197,0,"module"],[153,8,197,6],[153,9,197,7,"exports"],[153,16,197,0],[153,19,197,17,"NativeModules"],[153,32,197,0]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC4B;oBC2B;KDU;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCG;UCK,qBD;UEC;6EFC;ODE;KDC;SKE;KL+B;CLI;AWE;CXE;AYE;CZK;Iac;eCc,qCD;KbG"}},"type":"js/module"}]}