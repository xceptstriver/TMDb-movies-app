{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"@react-navigation/native","data":{"isAsync":false,"locs":[]}},{"name":"react-native-splash-screen","data":{"isAsync":false,"locs":[]}},{"name":"./navigation/TabsNavigator","data":{"isAsync":false,"locs":[]}},{"name":"./constants/index","data":{"isAsync":false,"locs":[]}},{"name":"@react-native-async-storage/async-storage","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[7], \"@react-navigation/native\");\n\n  var _reactNativeSplashScreen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react-native-splash-screen\"));\n\n  var _TabsNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./navigation/TabsNavigator\"));\n\n  var _index = _$$_REQUIRE(_dependencyMap[10], \"./constants/index\");\n\n  var _asyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"@react-native-async-storage/async-storage\"));\n\n  var _this = this,\n      _jsxFileName = \"/home/moglix/tmdb_movies_app/src/App.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var App = function App() {\n    _s();\n\n    var _React$useState = _react.default.useState(false),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        isDarkMode = _React$useState2[0],\n        setIsDarkMode = _React$useState2[1];\n\n    var bkgStyle = {\n      titleColor: isDarkMode ? '#888' : '#6930C3',\n      bkgColor: isDarkMode ? '#262626' : '#EBEBEB',\n      secBkgColor: isDarkMode ? '#221F3B' : 'white',\n      txtColor: isDarkMode ? '#EBEBEB' : '#050505',\n      secTxtColor: isDarkMode ? '#EBEBEB' : '#4f4f4f',\n      placeholderColor: isDarkMode ? '#888' : '#888',\n      searchIcon: isDarkMode ? '#EBEBEB' : '#6930C3',\n      cardBlurBkg: isDarkMode ? 'rgba(52, 52, 52, 0.7)' : 'rgba(152, 152, 152, 0.8)',\n      backdropGradient: isDarkMode ? ['#26262600', '#262626'] : ['#EBEBEB00', '#EBEBEB']\n    };\n\n    var _React$useState3 = _react.default.useState({\n      trending: [],\n      upcoming: [],\n      popular: [],\n      topRated: []\n    }),\n        _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n        moviesState = _React$useState4[0],\n        setMoviesState = _React$useState4[1];\n\n    var _React$useState5 = _react.default.useState([]),\n        _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n        watchListState = _React$useState6[0],\n        setWatchListState = _React$useState6[1];\n\n    var _React$useState7 = _react.default.useState([]),\n        _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n        favouritesState = _React$useState8[0],\n        setFavouritesState = _React$useState8[1];\n\n    var handleAddWatchList = function handleAddWatchList(movieId) {\n      setWatchListState(function (state) {\n        return [].concat((0, _toConsumableArray2.default)(state), [movieId]);\n      });\n    };\n\n    var handleAddFavourites = function handleAddFavourites(movieId) {\n      setFavouritesState(function (state) {\n        return [].concat((0, _toConsumableArray2.default)(state), [movieId]);\n      });\n    };\n\n    var handleRemoveWatchList = function handleRemoveWatchList(movieId) {\n      setWatchListState(function (state) {\n        return state.filter(function (item) {\n          return item !== movieId;\n        });\n      });\n    };\n\n    var handleRemoveFavourites = function handleRemoveFavourites(movieId) {\n      setFavouritesState(function (state) {\n        return state.filter(function (item) {\n          return item !== movieId;\n        });\n      });\n    };\n\n    var saveWatchListAndFavouriteStateData = function saveWatchListAndFavouriteStateData() {\n      var jsonValue;\n      return _regenerator.default.async(function saveWatchListAndFavouriteStateData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.t0 = JSON;\n              _context.next = 4;\n              return _regenerator.default.awrap(watchListState);\n\n            case 4:\n              _context.t1 = _context.sent;\n              _context.next = 7;\n              return _regenerator.default.awrap(favouritesState);\n\n            case 7:\n              _context.t2 = _context.sent;\n              _context.t3 = {\n                watchListState: _context.t1,\n                favouritesState: _context.t2\n              };\n              jsonValue = _context.t0.stringify.call(_context.t0, _context.t3);\n              _context.next = 12;\n              return _regenerator.default.awrap(_asyncStorage.default.setItem('@storage_Key', jsonValue));\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t4 = _context[\"catch\"](0);\n              console.log('storing data doesnt work', _context.t4);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    var readWatchListAndFavouriteStateData = function readWatchListAndFavouriteStateData() {\n      var jsonValue, tasksObj;\n      return _regenerator.default.async(function readWatchListAndFavouriteStateData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('@storage_Key'));\n\n            case 3:\n              jsonValue = _context2.sent;\n              tasksObj = jsonValue != null ? JSON.parse(jsonValue) : console.log('watchlist and favourites are empty');\n              setWatchListState(tasksObj.watchListState);\n              setFavouritesState(tasksObj.favouritesState);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('loading stored data doesnt work');\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    _react.default.useEffect(function () {\n      saveWatchListAndFavouriteStateData();\n    }, [watchListState, favouritesState]);\n\n    _react.default.useEffect(function () {\n      readWatchListAndFavouriteStateData();\n    }, []);\n\n    var fetchMovies = function fetchMovies(setMoviesState, category) {\n      var url;\n      return _regenerator.default.async(function fetchMovies$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = category;\n              _context3.next = _context3.t0 === 'trending' ? 3 : _context3.t0 === 'upcoming' ? 5 : _context3.t0 === 'popular' ? 7 : _context3.t0 === 'topRated' ? 9 : 11;\n              break;\n\n            case 3:\n              url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=\" + _index.TMDB_API.API_KEY;\n              return _context3.abrupt(\"break\", 12);\n\n            case 5:\n              url = \"https://api.themoviedb.org/3/movie/upcoming?api_key=\" + _index.TMDB_API.API_KEY + \"&language=en-US&page=1&region=us\";\n              return _context3.abrupt(\"break\", 12);\n\n            case 7:\n              url = \"https://api.themoviedb.org/3/movie/popular?api_key=\" + _index.TMDB_API.API_KEY + \"&language=en-US&page=1\";\n              return _context3.abrupt(\"break\", 12);\n\n            case 9:\n              url = \"https://api.themoviedb.org/3/movie/top_rated?api_key=\" + _index.TMDB_API.API_KEY + \"&language=en-US&page=1\";\n              return _context3.abrupt(\"break\", 12);\n\n            case 11:\n              url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=\" + _index.TMDB_API.API_KEY;\n\n            case 12:\n              _context3.next = 14;\n              return _regenerator.default.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                setMoviesState(function (state) {\n                  var movies = data.results;\n\n                  switch (category) {\n                    case 'trending':\n                      return _objectSpread(_objectSpread({}, state), {}, {\n                        trending: movies\n                      });\n\n                    case 'upcoming':\n                      return _objectSpread(_objectSpread({}, state), {}, {\n                        upcoming: movies\n                      });\n\n                    case 'popular':\n                      return _objectSpread(_objectSpread({}, state), {}, {\n                        popular: movies\n                      });\n\n                    case 'topRated':\n                      return _objectSpread(_objectSpread({}, state), {}, {\n                        topRated: movies\n                      });\n\n                    default:\n                      return _objectSpread({}, state);\n                  }\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onSetTheme = function onSetTheme(isDark) {\n      var val;\n      return _regenerator.default.async(function onSetTheme$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              setIsDarkMode(isDark);\n              val = isDark.toString();\n              _context4.next = 5;\n              return _regenerator.default.awrap(_asyncStorage.default.setItem('@isDarkMode', val));\n\n            case 5:\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('storing theme doesnt work', _context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    var getStoredDarkThemeData = function getStoredDarkThemeData() {\n      var value, isTrueSet;\n      return _regenerator.default.async(function getStoredDarkThemeData$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('@isDarkMode'));\n\n            case 3:\n              value = _context5.sent;\n\n              if (value !== null) {\n                isTrueSet = value === 'true';\n                setIsDarkMode(isTrueSet);\n              }\n\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log('loading stored theme doesnt work', _context5.t0);\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _react.default.useEffect(function () {\n      _reactNativeSplashScreen.default.hide();\n\n      fetchMovies(setMoviesState, 'trending');\n      fetchMovies(setMoviesState, 'upcoming');\n      fetchMovies(setMoviesState, 'popular');\n      fetchMovies(setMoviesState, 'topRated');\n      getStoredDarkThemeData();\n    }, []);\n\n    return _react.default.createElement(_native.NavigationContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.StatusBar, {\n      barStyle: isDarkMode ? 'light-content' : 'dark-content',\n      backgroundColor: bkgStyle.bkgColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }), _react.default.createElement(_TabsNavigator.default, {\n      bkgStyle: bkgStyle,\n      isDarkMode: isDarkMode,\n      setIsDarkMode: setIsDarkMode,\n      moviesState: moviesState,\n      handleAddWatchList: handleAddWatchList,\n      handleAddFavourites: handleAddFavourites,\n      handleRemoveWatchList: handleRemoveWatchList,\n      handleRemoveFavourites: handleRemoveFavourites,\n      watchListState: watchListState,\n      favouritesState: favouritesState,\n      onSetTheme: onSetTheme,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  _s(App, \"MJQMJxquHQth1dEQI5KPyfRWS7s=\");\n\n  _c = App;\n  var _default = App;\n  exports.default = _default;\n\n  var _c;\n\n  $RefreshReg$(_c, \"App\");\n});","lineCount":382,"map":[[17,0,1,0],[19,0,2,0],[21,0,10,0],[23,0,11,0],[25,0,12,0],[27,0,13,0],[29,0,14,0],[39,0,16,0],[39,6,16,6,"App"],[39,9,16,9],[39,12,16,12],[39,21,16,6,"App"],[39,24,16,12],[39,27,16,18],[40,0,16,18],[42,0,19,2],[42,26,19,38,"React"],[42,41,19,44,"useState"],[42,49,19,38],[42,50,19,53],[42,55,19,38],[42,56,19,2],[43,0,19,2],[44,0,19,2],[44,8,19,9,"isDarkMode"],[44,18,19,2],[45,0,19,2],[45,8,19,21,"setIsDarkMode"],[45,21,19,2],[47,0,20,2],[47,8,20,8,"bkgStyle"],[47,16,20,16],[47,19,20,19],[48,0,21,4,"titleColor"],[48,6,21,4,"titleColor"],[48,16,21,14],[48,18,21,16,"isDarkMode"],[48,28,21,26],[48,31,21,29],[48,37,21,26],[48,40,21,38],[48,49,20,19],[49,0,22,4,"bkgColor"],[49,6,22,4,"bkgColor"],[49,14,22,12],[49,16,22,14,"isDarkMode"],[49,26,22,24],[49,29,22,27],[49,38,22,24],[49,41,22,39],[49,50,20,19],[50,0,23,4,"secBkgColor"],[50,6,23,4,"secBkgColor"],[50,17,23,15],[50,19,23,17,"isDarkMode"],[50,29,23,27],[50,32,23,30],[50,41,23,27],[50,44,23,42],[50,51,20,19],[51,0,24,4,"txtColor"],[51,6,24,4,"txtColor"],[51,14,24,12],[51,16,24,14,"isDarkMode"],[51,26,24,24],[51,29,24,27],[51,38,24,24],[51,41,24,39],[51,50,20,19],[52,0,25,4,"secTxtColor"],[52,6,25,4,"secTxtColor"],[52,17,25,15],[52,19,25,17,"isDarkMode"],[52,29,25,27],[52,32,25,30],[52,41,25,27],[52,44,25,42],[52,53,20,19],[53,0,26,4,"placeholderColor"],[53,6,26,4,"placeholderColor"],[53,22,26,20],[53,24,26,22,"isDarkMode"],[53,34,26,32],[53,37,26,35],[53,43,26,32],[53,46,26,44],[53,52,20,19],[54,0,27,4,"searchIcon"],[54,6,27,4,"searchIcon"],[54,16,27,14],[54,18,27,16,"isDarkMode"],[54,28,27,26],[54,31,27,29],[54,40,27,26],[54,43,27,41],[54,52,20,19],[55,0,28,4,"cardBlurBkg"],[55,6,28,4,"cardBlurBkg"],[55,17,28,15],[55,19,28,17,"isDarkMode"],[55,29,28,27],[55,32,29,8],[55,55,28,27],[55,58,30,8],[55,84,20,19],[56,0,31,4,"backdropGradient"],[56,6,31,4,"backdropGradient"],[56,22,31,20],[56,24,31,22,"isDarkMode"],[56,34,31,32],[56,37,32,8],[56,38,32,9],[56,49,32,8],[56,51,32,22],[56,60,32,8],[56,61,31,32],[56,64,33,8],[56,65,33,9],[56,76,33,8],[56,78,33,22],[56,87,33,8],[57,0,20,19],[57,5,20,2],[59,0,37,2],[59,27,37,40,"React"],[59,42,37,46,"useState"],[59,50,37,40],[59,51,37,55],[60,0,38,4,"trending"],[60,6,38,4,"trending"],[60,14,38,12],[60,16,38,14],[60,18,37,55],[61,0,39,4,"upcoming"],[61,6,39,4,"upcoming"],[61,14,39,12],[61,16,39,14],[61,18,37,55],[62,0,40,4,"popular"],[62,6,40,4,"popular"],[62,13,40,11],[62,15,40,13],[62,17,37,55],[63,0,41,4,"topRated"],[63,6,41,4,"topRated"],[63,14,41,12],[63,16,41,14],[64,0,37,55],[64,5,37,40],[64,6,37,2],[65,0,37,2],[66,0,37,2],[66,8,37,9,"moviesState"],[66,19,37,2],[67,0,37,2],[67,8,37,22,"setMoviesState"],[67,22,37,2],[69,0,43,2],[69,27,43,46,"React"],[69,42,43,52,"useState"],[69,50,43,46],[69,51,43,61],[69,53,43,46],[69,54,43,2],[70,0,43,2],[71,0,43,2],[71,8,43,9,"watchListState"],[71,22,43,2],[72,0,43,2],[72,8,43,25,"setWatchListState"],[72,25,43,2],[74,0,44,2],[74,27,44,48,"React"],[74,42,44,54,"useState"],[74,50,44,48],[74,51,44,63],[74,53,44,48],[74,54,44,2],[75,0,44,2],[76,0,44,2],[76,8,44,9,"favouritesState"],[76,23,44,2],[77,0,44,2],[77,8,44,26,"setFavouritesState"],[77,26,44,2],[79,0,46,2],[79,8,46,8,"handleAddWatchList"],[79,26,46,26],[79,29,46,29],[79,38,46,8,"handleAddWatchList"],[79,56,46,29],[79,57,46,30,"movieId"],[79,64,46,29],[79,66,46,42],[80,0,47,4,"setWatchListState"],[80,6,47,4,"setWatchListState"],[80,23,47,21],[80,24,47,22],[80,34,47,23,"state"],[80,39,47,22],[80,41,47,33],[81,0,48,6],[81,58,48,17,"state"],[81,63,48,6],[81,67,48,24,"movieId"],[81,74,48,6],[82,0,49,5],[82,7,47,21],[82,8,47,4],[83,0,50,3],[83,5,46,2],[85,0,52,2],[85,8,52,8,"handleAddFavourites"],[85,27,52,27],[85,30,52,30],[85,39,52,8,"handleAddFavourites"],[85,58,52,30],[85,59,52,31,"movieId"],[85,66,52,30],[85,68,52,43],[86,0,53,4,"setFavouritesState"],[86,6,53,4,"setFavouritesState"],[86,24,53,22],[86,25,53,23],[86,35,53,24,"state"],[86,40,53,23],[86,42,53,34],[87,0,54,6],[87,58,54,17,"state"],[87,63,54,6],[87,67,54,24,"movieId"],[87,74,54,6],[88,0,55,5],[88,7,53,22],[88,8,53,4],[89,0,56,3],[89,5,52,2],[91,0,58,2],[91,8,58,8,"handleRemoveWatchList"],[91,29,58,29],[91,32,58,32],[91,41,58,8,"handleRemoveWatchList"],[91,62,58,32],[91,63,58,33,"movieId"],[91,70,58,32],[91,72,58,45],[92,0,59,4,"setWatchListState"],[92,6,59,4,"setWatchListState"],[92,23,59,21],[92,24,59,22],[92,34,59,23,"state"],[92,39,59,22],[93,0,59,22],[93,15,59,33,"state"],[93,20,59,38],[93,21,59,39,"filter"],[93,27,59,33],[93,28,59,46],[93,38,59,47,"item"],[93,42,59,46],[94,0,59,46],[94,17,59,56,"item"],[94,21,59,60],[94,26,59,65,"movieId"],[94,33,59,46],[95,0,59,46],[95,9,59,33],[95,10,59,22],[96,0,59,22],[96,7,59,21],[96,8,59,4],[97,0,60,3],[97,5,58,2],[99,0,62,2],[99,8,62,8,"handleRemoveFavourites"],[99,30,62,30],[99,33,62,33],[99,42,62,8,"handleRemoveFavourites"],[99,64,62,33],[99,65,62,34,"movieId"],[99,72,62,33],[99,74,62,46],[100,0,63,4,"setFavouritesState"],[100,6,63,4,"setFavouritesState"],[100,24,63,22],[100,25,63,23],[100,35,63,24,"state"],[100,40,63,23],[101,0,63,23],[101,15,63,34,"state"],[101,20,63,39],[101,21,63,40,"filter"],[101,27,63,34],[101,28,63,47],[101,38,63,48,"item"],[101,42,63,47],[102,0,63,47],[102,17,63,57,"item"],[102,21,63,61],[102,26,63,66,"movieId"],[102,33,63,47],[103,0,63,47],[103,9,63,34],[103,10,63,23],[104,0,63,23],[104,7,63,22],[104,8,63,4],[105,0,64,3],[105,5,62,2],[107,0,66,2],[107,8,66,8,"saveWatchListAndFavouriteStateData"],[107,42,66,42],[107,45,66,45],[107,54,66,8,"saveWatchListAndFavouriteStateData"],[107,88,66,45],[108,0,66,45],[109,0,66,45],[110,0,66,45],[111,0,66,45],[112,0,66,45],[113,0,66,45],[114,0,66,45],[114,28,68,24,"JSON"],[114,32,66,45],[115,0,66,45],[116,0,66,45],[116,48,69,30,"watchListState"],[116,62,66,45],[118,0,66,45],[119,0,66,45],[120,0,66,45],[121,0,66,45],[121,48,70,31,"favouritesState"],[121,63,66,45],[123,0,66,45],[124,0,66,45],[125,0,66,45],[126,0,69,8,"watchListState"],[126,16,69,8,"watchListState"],[126,30,66,45],[127,0,70,8,"favouritesState"],[127,16,70,8,"favouritesState"],[127,31,66,45],[128,0,66,45],[129,0,68,12,"jsonValue"],[129,14,68,12,"jsonValue"],[129,23,66,45],[129,38,68,29,"stringify"],[129,47,66,45],[130,0,66,45],[131,0,66,45],[131,48,72,12,"AsyncStorage"],[131,70,72,25,"setItem"],[131,77,72,12],[131,78,72,33],[131,92,72,12],[131,94,72,49,"jsonValue"],[131,103,72,12],[131,104,66,45],[133,0,66,45],[134,0,66,45],[135,0,66,45],[137,0,66,45],[138,0,66,45],[139,0,66,45],[140,0,75,6,"console"],[140,14,75,6,"console"],[140,21,75,13],[140,22,75,14,"log"],[140,25,75,6],[140,26,75,18],[140,52,75,6],[142,0,66,45],[143,0,66,45],[144,0,66,45],[145,0,66,45],[146,0,66,45],[147,0,66,45],[148,0,66,45],[148,5,66,2],[150,0,79,2],[150,8,79,8,"readWatchListAndFavouriteStateData"],[150,42,79,42],[150,45,79,45],[150,54,79,8,"readWatchListAndFavouriteStateData"],[150,88,79,45],[151,0,79,45],[152,0,79,45],[153,0,79,45],[154,0,79,45],[155,0,79,45],[156,0,79,45],[157,0,79,45],[158,0,79,45],[158,48,81,30,"AsyncStorage"],[158,70,81,43,"getItem"],[158,77,81,30],[158,78,81,51],[158,92,81,30],[158,93,79,45],[160,0,79,45],[161,0,81,12,"jsonValue"],[161,14,81,12,"jsonValue"],[161,23,79,45],[162,0,82,12,"tasksObj"],[162,14,82,12,"tasksObj"],[162,22,79,45],[162,25,83,8,"jsonValue"],[162,34,83,17],[162,38,83,21],[162,42,83,8],[162,45,84,12,"JSON"],[162,49,84,16],[162,50,84,17,"parse"],[162,55,84,12],[162,56,84,23,"jsonValue"],[162,65,84,12],[162,66,83,8],[162,69,85,12,"console"],[162,76,85,19],[162,77,85,20,"log"],[162,80,85,12],[162,81,85,24],[162,117,85,12],[162,118,79,45],[163,0,86,6,"setWatchListState"],[163,14,86,6,"setWatchListState"],[163,31,86,23],[163,32,86,24,"tasksObj"],[163,40,86,32],[163,41,86,33,"watchListState"],[163,55,86,23],[163,56,86,6],[164,0,87,6,"setFavouritesState"],[164,14,87,6,"setFavouritesState"],[164,32,87,24],[164,33,87,25,"tasksObj"],[164,41,87,33],[164,42,87,34,"favouritesState"],[164,57,87,24],[164,58,87,6],[165,0,79,45],[166,0,79,45],[168,0,79,45],[169,0,79,45],[170,0,79,45],[171,0,91,6,"console"],[171,14,91,6,"console"],[171,21,91,13],[171,22,91,14,"log"],[171,25,91,6],[171,26,91,18],[171,59,91,6],[173,0,79,45],[174,0,79,45],[175,0,79,45],[176,0,79,45],[177,0,79,45],[178,0,79,45],[179,0,79,45],[179,5,79,2],[181,0,95,2,"React"],[181,19,95,8,"useEffect"],[181,28,95,2],[181,29,95,18],[181,41,95,24],[182,0,96,4,"saveWatchListAndFavouriteStateData"],[182,6,96,4,"saveWatchListAndFavouriteStateData"],[182,40,96,38],[183,0,97,3],[183,5,95,2],[183,7,97,5],[183,8,97,6,"watchListState"],[183,22,97,5],[183,24,97,22,"favouritesState"],[183,39,97,5],[183,40,95,2],[185,0,99,2,"React"],[185,19,99,8,"useEffect"],[185,28,99,2],[185,29,99,18],[185,41,99,24],[186,0,100,4,"readWatchListAndFavouriteStateData"],[186,6,100,4,"readWatchListAndFavouriteStateData"],[186,40,100,38],[187,0,101,3],[187,5,99,2],[187,7,101,5],[187,9,99,2],[189,0,104,2],[189,8,104,8,"fetchMovies"],[189,19,104,19],[189,22,104,22],[189,31,104,8,"fetchMovies"],[189,42,104,22],[189,43,104,29,"setMoviesState"],[189,57,104,22],[189,59,104,45,"category"],[189,67,104,22],[190,0,104,22],[191,0,104,22],[192,0,104,22],[193,0,104,22],[194,0,104,22],[195,0,104,22],[195,29,106,12,"category"],[195,37,104,22],[196,0,104,22],[196,48,107,11],[196,58,104,22],[196,82,110,11],[196,92,104,22],[196,116,113,11],[196,125,104,22],[196,149,116,11],[196,159,104,22],[197,0,104,22],[199,0,104,22],[200,0,108,8,"url"],[200,14,108,8,"url"],[200,17,108,11],[200,81,108,73,"TMDB_API"],[200,97,108,82,"API_KEY"],[200,104,108,8],[201,0,104,22],[203,0,104,22],[204,0,111,8,"url"],[204,14,111,8,"url"],[204,17,111,11],[204,77,111,69,"TMDB_API"],[204,93,111,78,"API_KEY"],[204,100,111,11],[204,137,111,8],[205,0,104,22],[207,0,104,22],[208,0,114,8,"url"],[208,14,114,8,"url"],[208,17,114,11],[208,76,114,68,"TMDB_API"],[208,92,114,77,"API_KEY"],[208,99,114,11],[208,126,114,8],[209,0,104,22],[211,0,104,22],[212,0,117,8,"url"],[212,14,117,8,"url"],[212,17,117,11],[212,78,117,70,"TMDB_API"],[212,94,117,79,"API_KEY"],[212,101,117,11],[212,128,117,8],[213,0,104,22],[215,0,104,22],[216,0,120,8,"url"],[216,14,120,8,"url"],[216,17,120,11],[216,81,120,73,"TMDB_API"],[216,97,120,82,"API_KEY"],[216,104,120,8],[218,0,104,22],[219,0,104,22],[220,0,104,22],[220,48,123,10,"fetch"],[220,53,123,15],[220,54,123,16,"url"],[220,57,123,15],[220,58,123,10],[220,59,124,7,"then"],[220,63,123,10],[220,64,124,12],[220,74,124,13,"response"],[220,82,124,12],[221,0,124,12],[221,23,124,26,"response"],[221,31,124,34],[221,32,124,35,"json"],[221,36,124,26],[221,38,124,12],[222,0,124,12],[222,15,123,10],[222,17,125,7,"then"],[222,21,123,10],[222,22,125,12],[222,32,125,13,"data"],[222,36,125,12],[222,38,125,22],[223,0,126,8,"setMoviesState"],[223,16,126,8,"setMoviesState"],[223,30,126,22],[223,31,126,23],[223,41,126,24,"state"],[223,46,126,23],[223,48,126,34],[224,0,127,10],[224,22,127,14,"movies"],[224,28,127,20],[224,31,127,23,"data"],[224,35,127,27],[224,36,127,28,"results"],[224,43,127,10],[226,0,128,10],[226,26,128,18,"category"],[226,34,128,10],[227,0,129,12],[227,25,129,17],[227,35,129,12],[228,0,130,14],[228,61,130,25,"state"],[228,66,130,14],[229,0,130,32,"trending"],[229,24,130,32,"trending"],[229,32,130,40],[229,34,130,42,"movies"],[230,0,130,14],[232,0,131,12],[232,25,131,17],[232,35,131,12],[233,0,132,14],[233,61,132,25,"state"],[233,66,132,14],[234,0,132,32,"upcoming"],[234,24,132,32,"upcoming"],[234,32,132,40],[234,34,132,42,"movies"],[235,0,132,14],[237,0,133,12],[237,25,133,17],[237,34,133,12],[238,0,134,14],[238,61,134,25,"state"],[238,66,134,14],[239,0,134,32,"popular"],[239,24,134,32,"popular"],[239,31,134,39],[239,33,134,41,"movies"],[240,0,134,14],[242,0,135,12],[242,25,135,17],[242,35,135,12],[243,0,136,14],[243,61,136,25,"state"],[243,66,136,14],[244,0,136,32,"topRated"],[244,24,136,32,"topRated"],[244,32,136,40],[244,34,136,42,"movies"],[245,0,136,14],[247,0,137,12],[248,0,138,14],[248,47,138,25,"state"],[248,52,138,14],[249,0,128,10],[250,0,140,9],[250,17,126,22],[250,18,126,8],[251,0,141,7],[251,15,123,10],[251,17,142,7,"catch"],[251,22,123,10],[251,23,142,13],[251,33,142,14,"error"],[251,38,142,13],[251,40,142,24],[252,0,143,8,"console"],[252,16,143,8,"console"],[252,23,143,15],[252,24,143,16,"log"],[252,27,143,8],[252,28,143,20,"error"],[252,33,143,8],[253,0,144,7],[253,15,123,10],[253,16,104,22],[255,0,104,22],[256,0,104,22],[257,0,104,22],[258,0,104,22],[259,0,104,22],[260,0,104,22],[261,0,104,22],[261,5,104,2],[263,0,148,2],[263,8,148,8,"onSetTheme"],[263,18,148,18],[263,21,148,21],[263,30,148,8,"onSetTheme"],[263,40,148,21],[263,41,148,28,"isDark"],[263,47,148,21],[264,0,148,21],[265,0,148,21],[266,0,148,21],[267,0,148,21],[268,0,148,21],[269,0,148,21],[270,0,150,6,"setIsDarkMode"],[270,14,150,6,"setIsDarkMode"],[270,27,150,19],[270,28,150,20,"isDark"],[270,34,150,19],[270,35,150,6],[271,0,151,12,"val"],[271,14,151,12,"val"],[271,17,148,21],[271,20,151,18,"isDark"],[271,26,151,24],[271,27,151,25,"toString"],[271,35,151,18],[271,37,148,21],[272,0,148,21],[273,0,148,21],[273,48,152,12,"AsyncStorage"],[273,70,152,25,"setItem"],[273,77,152,12],[273,78,152,33],[273,91,152,12],[273,93,152,48,"val"],[273,96,152,12],[273,97,148,21],[275,0,148,21],[276,0,148,21],[277,0,148,21],[279,0,148,21],[280,0,148,21],[281,0,148,21],[282,0,154,6,"console"],[282,14,154,6,"console"],[282,21,154,13],[282,22,154,14,"log"],[282,25,154,6],[282,26,154,18],[282,53,154,6],[284,0,148,21],[285,0,148,21],[286,0,148,21],[287,0,148,21],[288,0,148,21],[289,0,148,21],[290,0,148,21],[290,5,148,2],[292,0,158,2],[292,8,158,8,"getStoredDarkThemeData"],[292,30,158,30],[292,33,158,33],[292,42,158,8,"getStoredDarkThemeData"],[292,64,158,33],[293,0,158,33],[294,0,158,33],[295,0,158,33],[296,0,158,33],[297,0,158,33],[298,0,158,33],[299,0,158,33],[300,0,158,33],[300,48,160,26,"AsyncStorage"],[300,70,160,39,"getItem"],[300,77,160,26],[300,78,160,47],[300,91,160,26],[300,92,158,33],[302,0,158,33],[303,0,160,12,"value"],[303,14,160,12,"value"],[303,19,158,33],[305,0,161,6],[305,18,161,10,"value"],[305,23,161,15],[305,28,161,20],[305,32,161,6],[305,34,161,26],[306,0,163,14,"isTrueSet"],[306,16,163,14,"isTrueSet"],[306,25,161,26],[306,28,163,26,"value"],[306,33,163,31],[306,38,163,36],[306,44,161,26],[307,0,164,8,"setIsDarkMode"],[307,16,164,8,"setIsDarkMode"],[307,29,164,21],[307,30,164,22,"isTrueSet"],[307,39,164,21],[307,40,164,8],[308,0,165,7],[310,0,158,33],[311,0,158,33],[313,0,158,33],[314,0,158,33],[315,0,158,33],[316,0,168,6,"console"],[316,14,168,6,"console"],[316,21,168,13],[316,22,168,14,"log"],[316,25,168,6],[316,26,168,18],[316,60,168,6],[318,0,158,33],[319,0,158,33],[320,0,158,33],[321,0,158,33],[322,0,158,33],[323,0,158,33],[324,0,158,33],[324,5,158,2],[326,0,171,2,"React"],[326,19,171,8,"useEffect"],[326,28,171,2],[326,29,171,18],[326,41,171,24],[327,0,172,4,"SplashScreen"],[327,39,172,17,"hide"],[327,43,172,4],[329,0,173,4,"fetchMovies"],[329,6,173,4,"fetchMovies"],[329,17,173,15],[329,18,173,16,"setMoviesState"],[329,32,173,15],[329,34,173,32],[329,44,173,15],[329,45,173,4],[330,0,174,4,"fetchMovies"],[330,6,174,4,"fetchMovies"],[330,17,174,15],[330,18,174,16,"setMoviesState"],[330,32,174,15],[330,34,174,32],[330,44,174,15],[330,45,174,4],[331,0,175,4,"fetchMovies"],[331,6,175,4,"fetchMovies"],[331,17,175,15],[331,18,175,16,"setMoviesState"],[331,32,175,15],[331,34,175,32],[331,43,175,15],[331,44,175,4],[332,0,176,4,"fetchMovies"],[332,6,176,4,"fetchMovies"],[332,17,176,15],[332,18,176,16,"setMoviesState"],[332,32,176,15],[332,34,176,32],[332,44,176,15],[332,45,176,4],[333,0,179,4,"getStoredDarkThemeData"],[333,6,179,4,"getStoredDarkThemeData"],[333,28,179,26],[334,0,180,3],[334,5,171,2],[334,7,180,5],[334,9,171,2],[336,0,182,2],[336,11,183,4],[336,40,183,5],[336,67,183,4],[337,0,183,4],[338,0,183,4],[339,0,183,4],[340,0,183,4],[341,0,183,4],[342,0,183,4],[343,0,183,4],[343,7,184,6],[343,36,184,7],[343,58,184,6],[344,0,185,8],[344,6,185,8],[344,14,185,16],[344,16,185,18,"isDarkMode"],[344,26,185,28],[344,29,185,31],[344,44,185,28],[344,47,185,49],[344,61,184,6],[345,0,186,8],[345,6,186,8],[345,21,186,23],[345,23,186,25,"bkgStyle"],[345,31,186,33],[345,32,186,34,"bkgColor"],[345,40,184,6],[346,0,184,6],[347,0,184,6],[348,0,184,6],[349,0,184,6],[350,0,184,6],[351,0,184,6],[352,0,184,6],[352,6,183,4],[352,8,188,6],[352,37,188,7],[352,59,188,6],[353,0,189,8],[353,6,189,8],[353,14,189,16],[353,16,189,18,"bkgStyle"],[353,24,188,6],[354,0,190,8],[354,6,190,8],[354,16,190,18],[354,18,190,20,"isDarkMode"],[354,28,188,6],[355,0,191,8],[355,6,191,8],[355,19,191,21],[355,21,191,23,"setIsDarkMode"],[355,34,188,6],[356,0,192,8],[356,6,192,8],[356,17,192,19],[356,19,192,21,"moviesState"],[356,30,188,6],[357,0,193,8],[357,6,193,8],[357,24,193,26],[357,26,193,28,"handleAddWatchList"],[357,44,188,6],[358,0,194,8],[358,6,194,8],[358,25,194,27],[358,27,194,29,"handleAddFavourites"],[358,46,188,6],[359,0,195,8],[359,6,195,8],[359,27,195,29],[359,29,195,31,"handleRemoveWatchList"],[359,50,188,6],[360,0,196,8],[360,6,196,8],[360,28,196,30],[360,30,196,32,"handleRemoveFavourites"],[360,52,188,6],[361,0,197,8],[361,6,197,8],[361,20,197,22],[361,22,197,24,"watchListState"],[361,36,188,6],[362,0,198,8],[362,6,198,8],[362,21,198,23],[362,23,198,25,"favouritesState"],[362,38,188,6],[363,0,199,8],[363,6,199,8],[363,16,199,18],[363,18,199,20,"onSetTheme"],[363,28,188,6],[364,0,188,6],[365,0,188,6],[366,0,188,6],[367,0,188,6],[368,0,188,6],[369,0,188,6],[370,0,188,6],[370,6,183,4],[370,7,182,2],[371,0,203,1],[371,3,16,0],[373,5,16,6,"App"],[373,8],[375,7,16,6,"App"],[375,10],[376,17,205,15,"App"],[376,20]],"functionMap":{"names":["<global>","App","handleAddWatchList","setWatchListState$argument_0","handleAddFavourites","setFavouritesState$argument_0","handleRemoveWatchList","state.filter$argument_0","handleRemoveFavourites","saveWatchListAndFavouriteStateData","readWatchListAndFavouriteStateData","React.useEffect$argument_0","fetchMovies","fetch.then$argument_0","fetch.then.then$argument_0","setMoviesState$argument_0","fetch.then.then._catch$argument_0","onSetTheme","getStoredDarkThemeData"],"mappings":"AAA;YCe;6BC8B;sBCC;KDE;GDC;8BGE;uBCC;KDE;GHC;gCKE;sBHC,wBI,0BJ,CG;GLC;iCOE;uBHC,wBE,0BF,CG;GPC;6CQE;GRW;6CSE;GTc;kBUE;GVE;kBUE;GVE;sBWG;YCoB,6BD;YEC;uBCC;SDc;OFC;aIC;OJE;GXC;qBgBG;GhBQ;iCiBE;GjBY;kBUC;GVS;CDuB"}},"type":"js/module"}]}