{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"prop-types","data":{"isAsync":false,"locs":[]}},{"name":"./react-native","data":{"isAsync":false,"locs":[]}},{"name":"./ensure-native-module-available","data":{"isAsync":false,"locs":[]}},{"name":"./create-icon-source-cache","data":{"isAsync":false,"locs":[]}},{"name":"./icon-button","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIconSet;\n  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[12], \"./react-native\");\n\n  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./ensure-native-module-available\"));\n\n  var _createIconSourceCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./create-icon-source-cache\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./icon-button\"));\n\n  var _jsxFileName = \"/home/moglix/tmdb_movies_app/node_modules/react-native-vector-icons/lib/create-icon-set.js\";\n  var _excluded = [\"name\", \"size\", \"color\", \"style\", \"children\"];\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _reactNative.Platform.select({\n      windows: \"/Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));\n\n    var Icon = function (_PureComponent) {\n      (0, _inherits2.default)(Icon, _PureComponent);\n\n      var _super = _createSuper(Icon);\n\n      function Icon() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.root = null;\n\n        _this.handleRef = function (ref) {\n          _this.root = ref;\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              children = _this$props.children,\n              props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCodePoint(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }\n          }), glyph, children);\n        }\n      }]);\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.propTypes = {\n      allowFontScaling: _propTypes.default.bool,\n      name: IconNamePropType,\n      size: _propTypes.default.number,\n      color: _propTypes.default.any,\n      children: _propTypes.default.node,\n      style: _propTypes.default.any\n    };\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    var imageSourceCache = (0, _createIconSourceCache.default)();\n\n    function resolveGlyph(name) {\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        return String.fromCodePoint(glyph);\n      }\n\n      return glyph;\n    }\n\n    function getImageSourceSync(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = resolveGlyph(name);\n      var processedColor = (0, _reactNative.processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      if (imageSourceCache.has(cacheKey)) {\n        return imageSourceCache.get(cacheKey);\n      }\n\n      try {\n        var imagePath = NativeIconAPI.getImageForFontSync(fontReference, glyph, size, processedColor);\n        var value = {\n          uri: imagePath,\n          scale: _reactNative.PixelRatio.get()\n        };\n        imageSourceCache.setValue(cacheKey, value);\n        return value;\n      } catch (error) {\n        imageSourceCache.setError(cacheKey, error);\n        throw error;\n      }\n    }\n\n    function getImageSource(name) {\n      var size,\n          color,\n          glyph,\n          processedColor,\n          cacheKey,\n          imagePath,\n          value,\n          _args = arguments;\n      return _regenerator.default.async(function getImageSource$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              size = _args.length > 1 && _args[1] !== undefined ? _args[1] : DEFAULT_ICON_SIZE;\n              color = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_ICON_COLOR;\n              (0, _ensureNativeModuleAvailable.default)();\n              glyph = resolveGlyph(name);\n              processedColor = (0, _reactNative.processColor)(color);\n              cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n              if (!imageSourceCache.has(cacheKey)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", imageSourceCache.get(cacheKey));\n\n            case 8:\n              _context.prev = 8;\n              _context.next = 11;\n              return _regenerator.default.awrap(NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor));\n\n            case 11:\n              imagePath = _context.sent;\n              value = {\n                uri: imagePath,\n                scale: _reactNative.PixelRatio.get()\n              };\n              imageSourceCache.setValue(cacheKey, value);\n              return _context.abrupt(\"return\", value);\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](8);\n              imageSourceCache.setError(cacheKey, _context.t0);\n              throw _context.t0;\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[8, 17]], Promise);\n    }\n\n    function loadFont() {\n      var file,\n          _args2 = arguments;\n      return _regenerator.default.async(function loadFont$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              file = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : fontFile;\n\n              if (!(_reactNative.Platform.OS === 'ios')) {\n                _context2.next = 7;\n                break;\n              }\n\n              (0, _ensureNativeModuleAvailable.default)();\n\n              if (file) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error('Unable to load font, because no file was specified. ');\n\n            case 5:\n              _context2.next = 7;\n              return _regenerator.default.awrap(NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, (0, _toConsumableArray2.default)(file.split('.'))));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.getImageSource = getImageSource;\n    Icon.getImageSourceSync = getImageSourceSync;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","lineCount":302,"map":[[28,0,1,0],[30,0,2,0],[32,0,3,0],[34,0,11,0],[36,0,12,0],[38,0,13,0],[51,0,15,7],[51,6,15,13,"NativeIconAPI"],[51,19,15,26],[51,22,16,2,"NativeModules"],[51,49,16,16,"RNVectorIconsManager"],[51,69,16,2],[51,73,16,40,"NativeModules"],[51,100,16,54,"RNVectorIconsModule"],[51,119,15,7],[53,0,18,7],[53,6,18,13,"DEFAULT_ICON_SIZE"],[53,23,18,30],[53,26,18,33],[53,28,18,7],[55,0,19,7],[55,6,19,13,"DEFAULT_ICON_COLOR"],[55,24,19,31],[55,27,19,34],[55,34,19,7],[58,0,21,15],[58,11,21,24,"createIconSet"],[58,24,21,15],[58,25,22,2,"glyphMap"],[58,33,21,15],[58,35,23,2,"fontFamily"],[58,45,21,15],[58,47,24,2,"fontFile"],[58,55,21,15],[58,57,25,2,"fontStyle"],[58,66,21,15],[58,68,26,2],[59,0,28,2],[59,8,28,8,"fontBasename"],[59,20,28,20],[59,23,28,23,"fontFile"],[59,31,28,31],[59,34,29,6,"fontFile"],[59,42,29,14],[59,43,29,15,"replace"],[59,50,29,6],[59,51,29,23],[59,65,29,6],[59,67,29,39],[59,69,29,6],[59,70,28,31],[59,73,30,6,"fontFamily"],[59,83,28,2],[61,0,32,2],[61,8,32,8,"fontReference"],[61,21,32,21],[61,24,32,24,"Platform"],[61,46,32,33,"select"],[61,52,32,24],[61,53,32,40],[62,0,33,4,"windows"],[62,6,33,4,"windows"],[62,13,33,11],[62,28,33,24,"fontFile"],[62,36,33,11],[62,45,33,36,"fontFamily"],[62,55,32,40],[63,0,34,4,"android"],[63,6,34,4,"android"],[63,13,34,11],[63,15,34,13,"fontBasename"],[63,27,32,40],[64,0,35,4,"web"],[64,6,35,4,"web"],[64,9,35,7],[64,11,35,9,"fontBasename"],[64,23,32,40],[65,0,36,4,"default"],[65,6,36,4,"default"],[65,13,36,11],[65,15,36,13,"fontFamily"],[66,0,32,40],[66,5,32,24],[66,6,32,2],[68,0,39,2],[68,8,39,8,"IconNamePropType"],[68,24,39,24],[68,27,39,27,"PropTypes"],[68,46,39,37,"oneOf"],[68,51,39,27],[68,52,39,43,"Object"],[68,58,39,49],[68,59,39,50,"keys"],[68,63,39,43],[68,64,39,55,"glyphMap"],[68,72,39,43],[68,73,39,27],[68,74,39,2],[70,0,26,2],[70,8,41,8,"Icon"],[70,12,26,2],[71,0,26,2],[73,0,26,2],[75,0,26,2],[76,0,26,2],[78,0,26,2],[80,0,26,2],[81,0,26,2],[82,0,26,2],[84,0,26,2],[85,0,26,2],[85,14,42,4,"root"],[85,18,26,2],[85,21,42,11],[85,25,26,2],[87,0,26,2],[87,14,64,4,"handleRef"],[87,23,26,2],[87,26,64,16],[87,36,64,16,"ref"],[87,39,64,19],[87,41,64,23],[88,0,65,6],[88,16,65,11,"root"],[88,20,65,6],[88,23,65,18,"ref"],[88,26,65,6],[89,0,66,5],[89,9,26,2],[91,0,26,2],[92,0,26,2],[94,0,26,2],[95,0,26,2],[96,0,26,2],[96,15,58,4],[96,39,58,19,"nativeProps"],[96,50,58,4],[96,52,58,32],[97,0,59,6],[97,14,59,10],[97,19,59,15,"root"],[97,23,59,6],[97,25,59,21],[98,0,60,8],[98,17,60,13,"root"],[98,21,60,8],[98,22,60,18,"setNativeProps"],[98,36,60,8],[98,37,60,33,"nativeProps"],[98,48,60,8],[99,0,61,7],[100,0,62,5],[101,0,26,2],[102,0,26,2],[103,0,26,2],[103,15,68,4],[103,33,68,13],[104,0,69,6],[104,28,69,63],[104,33,69,68,"props"],[104,38,69,6],[105,0,69,6],[105,14,69,14,"name"],[105,18,69,6],[105,33,69,14,"name"],[105,37,69,6],[106,0,69,6],[106,14,69,20,"size"],[106,18,69,6],[106,33,69,20,"size"],[106,37,69,6],[107,0,69,6],[107,14,69,26,"color"],[107,19,69,6],[107,34,69,26,"color"],[107,39,69,6],[108,0,69,6],[108,14,69,33,"style"],[108,19,69,6],[108,34,69,33,"style"],[108,39,69,6],[109,0,69,6],[109,14,69,40,"children"],[109,22,69,6],[109,37,69,40,"children"],[109,45,69,6],[110,0,69,6],[110,14,69,53,"props"],[110,19,69,6],[111,0,71,6],[111,14,71,10,"glyph"],[111,19,71,15],[111,22,71,18,"name"],[111,26,71,22],[111,29,71,25,"glyphMap"],[111,37,71,33],[111,38,71,34,"name"],[111,42,71,33],[111,43,71,25],[111,47,71,43],[111,50,71,22],[111,53,71,49],[111,55,71,6],[113,0,72,6],[113,14,72,10],[113,21,72,17,"glyph"],[113,26,72,10],[113,31,72,27],[113,39,72,6],[113,41,72,37],[114,0,73,8,"glyph"],[114,12,73,8,"glyph"],[114,17,73,13],[114,20,73,16,"String"],[114,26,73,22],[114,27,73,23,"fromCodePoint"],[114,40,73,16],[114,41,73,37,"glyph"],[114,46,73,16],[114,47,73,8],[115,0,74,7],[117,0,76,6],[117,14,76,12,"styleDefaults"],[117,27,76,25],[117,30,76,28],[118,0,77,8,"fontSize"],[118,12,77,8,"fontSize"],[118,20,77,16],[118,22,77,18,"size"],[118,26,76,28],[119,0,78,8,"color"],[119,12,78,8,"color"],[119,17,78,13],[119,19,78,8,"color"],[120,0,76,28],[120,11,76,6],[121,0,81,6],[121,14,81,12,"styleOverrides"],[121,28,81,26],[121,31,81,29],[122,0,82,8,"fontFamily"],[122,12,82,8,"fontFamily"],[122,22,82,18],[122,24,82,20,"fontReference"],[122,37,81,29],[123,0,83,8,"fontWeight"],[123,12,83,8,"fontWeight"],[123,22,83,18],[123,24,83,20],[123,32,81,29],[124,0,84,8,"fontStyle"],[124,12,84,8,"fontStyle"],[124,21,84,17],[124,23,84,19],[125,0,81,29],[125,11,81,6],[126,0,87,6,"props"],[126,10,87,6,"props"],[126,15,87,11],[126,16,87,12,"style"],[126,21,87,6],[126,24,87,20],[126,25,87,21,"styleDefaults"],[126,38,87,20],[126,40,87,36,"style"],[126,45,87,20],[126,47,87,43,"styleOverrides"],[126,61,87,20],[126,63,87,59,"fontStyle"],[126,72,87,68],[126,76,87,72],[126,78,87,20],[126,79,87,6],[127,0,88,6,"props"],[127,10,88,6,"props"],[127,15,88,11],[127,16,88,12,"ref"],[127,19,88,6],[127,22,88,18],[127,27,88,23,"handleRef"],[127,36,88,6],[128,0,90,6],[128,17,91,8],[128,46,91,9],[128,63,91,8],[128,92,91,18,"props"],[128,97,91,8],[129,0,91,8],[130,0,91,8],[131,0,91,8],[132,0,91,8],[133,0,91,8],[134,0,91,8],[135,0,91,8],[135,14,92,11,"glyph"],[135,19,91,8],[135,21,93,11,"children"],[135,29,91,8],[135,30,90,6],[136,0,96,5],[137,0,26,2],[138,0,26,2],[139,0,26,2],[139,6,41,21,"PureComponent"],[139,26,26,2],[141,0,41,8,"Icon"],[141,4,41,8,"Icon"],[141,8,26,2],[141,9,44,11,"propTypes"],[141,18,26,2],[141,21,44,23],[142,0,45,6,"allowFontScaling"],[142,6,45,6,"allowFontScaling"],[142,22,45,22],[142,24,45,24,"PropTypes"],[142,43,45,34,"bool"],[142,47,44,23],[143,0,46,6,"name"],[143,6,46,6,"name"],[143,10,46,10],[143,12,46,12,"IconNamePropType"],[143,28,44,23],[144,0,47,6,"size"],[144,6,47,6,"size"],[144,10,47,10],[144,12,47,12,"PropTypes"],[144,31,47,22,"number"],[144,37,44,23],[145,0,48,6,"color"],[145,6,48,6,"color"],[145,11,48,11],[145,13,48,13,"PropTypes"],[145,32,48,23,"any"],[145,35,44,23],[146,0,49,6,"children"],[146,6,49,6,"children"],[146,14,49,14],[146,16,49,16,"PropTypes"],[146,35,49,26,"node"],[146,39,44,23],[147,0,50,6,"style"],[147,6,50,6,"style"],[147,11,50,11],[147,13,50,13,"PropTypes"],[147,32,50,23,"any"],[148,0,44,23],[148,5,26,2],[149,0,41,8,"Icon"],[149,4,41,8,"Icon"],[149,8,26,2],[149,9,53,11,"defaultProps"],[149,21,26,2],[149,24,53,26],[150,0,54,6,"size"],[150,6,54,6,"size"],[150,10,54,10],[150,12,54,12,"DEFAULT_ICON_SIZE"],[150,29,53,26],[151,0,55,6,"allowFontScaling"],[151,6,55,6,"allowFontScaling"],[151,22,55,22],[151,24,55,24],[152,0,53,26],[152,5,26,2],[153,0,99,2],[153,8,99,8,"imageSourceCache"],[153,24,99,24],[153,27,99,27],[153,64,99,2],[155,0,101,2],[155,13,101,11,"resolveGlyph"],[155,25,101,2],[155,26,101,24,"name"],[155,30,101,2],[155,32,101,30],[156,0,102,4],[156,10,102,10,"glyph"],[156,15,102,15],[156,18,102,18,"glyphMap"],[156,26,102,26],[156,27,102,27,"name"],[156,31,102,26],[156,32,102,18],[156,36,102,36],[156,39,102,4],[158,0,103,4],[158,10,103,8],[158,17,103,15,"glyph"],[158,22,103,8],[158,27,103,25],[158,35,103,4],[158,37,103,35],[159,0,104,6],[159,15,104,13,"String"],[159,21,104,19],[159,22,104,20,"fromCodePoint"],[159,35,104,13],[159,36,104,34,"glyph"],[159,41,104,13],[159,42,104,6],[160,0,105,5],[162,0,106,4],[162,13,106,11,"glyph"],[162,18,106,4],[163,0,107,3],[165,0,109,2],[165,13,109,11,"getImageSourceSync"],[165,31,109,2],[165,32,110,4,"name"],[165,36,109,2],[165,38,113,4],[166,0,113,4],[166,10,111,4,"size"],[166,14,113,4],[166,85,111,11,"DEFAULT_ICON_SIZE"],[166,102,113,4],[167,0,113,4],[167,10,112,4,"color"],[167,15,113,4],[167,86,112,12,"DEFAULT_ICON_COLOR"],[167,104,113,4],[168,0,114,4],[169,0,116,4],[169,10,116,10,"glyph"],[169,15,116,15],[169,18,116,18,"resolveGlyph"],[169,30,116,30],[169,31,116,31,"name"],[169,35,116,30],[169,36,116,4],[170,0,117,4],[170,10,117,10,"processedColor"],[170,24,117,24],[170,27,117,27],[170,58,117,40,"color"],[170,63,117,27],[170,64,117,4],[171,0,118,4],[171,10,118,10,"cacheKey"],[171,18,118,18],[171,21,118,24,"glyph"],[171,26,118,18],[171,35,118,33,"size"],[171,39,118,18],[171,48,118,41,"processedColor"],[171,62,118,4],[173,0,120,4],[173,10,120,8,"imageSourceCache"],[173,26,120,24],[173,27,120,25,"has"],[173,30,120,8],[173,31,120,29,"cacheKey"],[173,39,120,8],[173,40,120,4],[173,42,120,40],[174,0,121,6],[174,15,121,13,"imageSourceCache"],[174,31,121,29],[174,32,121,30,"get"],[174,35,121,13],[174,36,121,34,"cacheKey"],[174,44,121,13],[174,45,121,6],[175,0,122,5],[177,0,123,4],[177,10,123,8],[178,0,124,6],[178,12,124,12,"imagePath"],[178,21,124,21],[178,24,124,24,"NativeIconAPI"],[178,37,124,37],[178,38,124,38,"getImageForFontSync"],[178,57,124,24],[178,58,125,8,"fontReference"],[178,71,124,24],[178,73,126,8,"glyph"],[178,78,124,24],[178,80,127,8,"size"],[178,84,124,24],[178,86,128,8,"processedColor"],[178,100,124,24],[178,101,124,6],[179,0,130,6],[179,12,130,12,"value"],[179,17,130,17],[179,20,130,20],[180,0,130,22,"uri"],[180,10,130,22,"uri"],[180,13,130,25],[180,15,130,27,"imagePath"],[180,24,130,20],[181,0,130,38,"scale"],[181,10,130,38,"scale"],[181,15,130,43],[181,17,130,45,"PixelRatio"],[181,41,130,56,"get"],[181,44,130,45],[182,0,130,20],[182,9,130,6],[183,0,131,6,"imageSourceCache"],[183,8,131,6,"imageSourceCache"],[183,24,131,22],[183,25,131,23,"setValue"],[183,33,131,6],[183,34,131,32,"cacheKey"],[183,42,131,6],[183,44,131,42,"value"],[183,49,131,6],[184,0,132,6],[184,15,132,13,"value"],[184,20,132,6],[185,0,133,5],[185,7,123,4],[185,8,133,6],[185,15,133,13,"error"],[185,20,133,6],[185,22,133,20],[186,0,134,6,"imageSourceCache"],[186,8,134,6,"imageSourceCache"],[186,24,134,22],[186,25,134,23,"setError"],[186,33,134,6],[186,34,134,32,"cacheKey"],[186,42,134,6],[186,44,134,42,"error"],[186,49,134,6],[187,0,135,6],[187,14,135,12,"error"],[187,19,135,6],[188,0,136,5],[189,0,137,3],[191,0,139,2],[191,13,139,17,"getImageSource"],[191,27,139,2],[191,28,140,4,"name"],[191,32,139,2],[192,0,139,2],[193,0,139,2],[194,0,139,2],[195,0,139,2],[196,0,139,2],[197,0,139,2],[198,0,139,2],[199,0,139,2],[200,0,139,2],[201,0,139,2],[202,0,139,2],[203,0,139,2],[204,0,141,4,"size"],[204,14,141,4,"size"],[204,18,139,2],[204,77,141,11,"DEFAULT_ICON_SIZE"],[204,94,139,2],[205,0,142,4,"color"],[205,14,142,4,"color"],[205,19,139,2],[205,78,142,12,"DEFAULT_ICON_COLOR"],[205,96,139,2],[206,0,144,4],[207,0,146,10,"glyph"],[207,14,146,10,"glyph"],[207,19,139,2],[207,22,146,18,"resolveGlyph"],[207,34,146,30],[207,35,146,31,"name"],[207,39,146,30],[207,40,139,2],[208,0,147,10,"processedColor"],[208,14,147,10,"processedColor"],[208,28,139,2],[208,31,147,27],[208,62,147,40,"color"],[208,67,147,27],[208,68,139,2],[209,0,148,10,"cacheKey"],[209,14,148,10,"cacheKey"],[209,22,139,2],[209,25,148,24,"glyph"],[209,30,139,2],[209,39,148,33,"size"],[209,43,139,2],[209,52,148,41,"processedColor"],[209,66,139,2],[211,0,139,2],[211,19,150,8,"imageSourceCache"],[211,35,150,24],[211,36,150,25,"has"],[211,39,150,8],[211,40,150,29,"cacheKey"],[211,48,150,8],[211,49,139,2],[212,0,139,2],[213,0,139,2],[214,0,139,2],[216,0,139,2],[216,47,151,13,"imageSourceCache"],[216,63,151,29],[216,64,151,30,"get"],[216,67,151,13],[216,68,151,34,"cacheKey"],[216,76,151,13],[216,77,139,2],[218,0,139,2],[219,0,139,2],[220,0,139,2],[221,0,139,2],[221,48,154,30,"NativeIconAPI"],[221,61,154,43],[221,62,154,44,"getImageForFont"],[221,77,154,30],[221,78,155,8,"fontReference"],[221,91,154,30],[221,93,156,8,"glyph"],[221,98,154,30],[221,100,157,8,"size"],[221,104,154,30],[221,106,158,8,"processedColor"],[221,120,154,30],[221,121,139,2],[223,0,139,2],[224,0,154,12,"imagePath"],[224,14,154,12,"imagePath"],[224,23,139,2],[225,0,160,12,"value"],[225,14,160,12,"value"],[225,19,139,2],[225,22,160,20],[226,0,160,22,"uri"],[226,16,160,22,"uri"],[226,19,160,25],[226,21,160,27,"imagePath"],[226,30,160,20],[227,0,160,38,"scale"],[227,16,160,38,"scale"],[227,21,160,43],[227,23,160,45,"PixelRatio"],[227,47,160,56,"get"],[227,50,160,45],[228,0,160,20],[228,15,139,2],[229,0,161,6,"imageSourceCache"],[229,14,161,6,"imageSourceCache"],[229,30,161,22],[229,31,161,23,"setValue"],[229,39,161,6],[229,40,161,32,"cacheKey"],[229,48,161,6],[229,50,161,42,"value"],[229,55,161,6],[230,0,139,2],[230,47,162,13,"value"],[230,52,139,2],[232,0,139,2],[233,0,139,2],[234,0,139,2],[235,0,164,6,"imageSourceCache"],[235,14,164,6,"imageSourceCache"],[235,30,164,22],[235,31,164,23,"setError"],[235,39,164,6],[235,40,164,32,"cacheKey"],[235,48,164,6],[236,0,139,2],[238,0,139,2],[239,0,139,2],[240,0,139,2],[241,0,139,2],[242,0,139,2],[243,0,139,2],[244,0,139,2],[246,0,169,2],[246,13,169,17,"loadFont"],[246,21,169,2],[247,0,169,2],[248,0,169,2],[249,0,169,2],[250,0,169,2],[251,0,169,2],[252,0,169,2],[253,0,169,26,"file"],[253,14,169,26,"file"],[253,18,169,2],[253,80,169,33,"fontFile"],[253,88,169,2],[255,0,169,2],[255,20,170,8,"Platform"],[255,42,170,17,"OS"],[255,44,170,8],[255,49,170,24],[255,54,169,2],[256,0,169,2],[257,0,169,2],[258,0,169,2],[260,0,171,6],[262,0,169,2],[262,18,172,11,"file"],[262,22,169,2],[263,0,169,2],[264,0,169,2],[265,0,169,2],[267,0,169,2],[267,20,173,14],[267,24,173,18,"Error"],[267,29,173,14],[267,30,173,24],[267,84,173,14],[267,85,169,2],[269,0,169,2],[270,0,169,2],[271,0,169,2],[271,48,175,12,"NativeIconAPI"],[271,61,175,25],[271,62,175,26,"loadFontWithFileName"],[271,82,175,12],[271,89,175,12,"NativeIconAPI"],[271,102,175,25],[271,137,175,50,"file"],[271,141,175,54],[271,142,175,55,"split"],[271,147,175,50],[271,148,175,61],[271,151,175,50],[271,152,175,25],[271,154,169,2],[273,0,169,2],[274,0,169,2],[275,0,169,2],[276,0,169,2],[277,0,169,2],[278,0,169,2],[279,0,169,2],[281,0,179,2],[281,13,179,11,"hasIcon"],[281,20,179,2],[281,21,179,19,"name"],[281,25,179,2],[281,27,179,25],[282,0,180,4],[282,13,180,11,"Object"],[282,19,180,17],[282,20,180,18,"prototype"],[282,29,180,11],[282,30,180,28,"hasOwnProperty"],[282,44,180,11],[282,45,180,43,"call"],[282,49,180,11],[282,50,180,48,"glyphMap"],[282,58,180,11],[282,60,180,58,"name"],[282,64,180,11],[282,65,180,4],[283,0,181,3],[285,0,183,2],[285,13,183,11,"getRawGlyphMap"],[285,27,183,2],[285,30,183,28],[286,0,184,4],[286,13,184,11,"glyphMap"],[286,21,184,4],[287,0,185,3],[289,0,187,2],[289,13,187,11,"getFontFamily"],[289,26,187,2],[289,29,187,27],[290,0,188,4],[290,13,188,11,"fontReference"],[290,26,188,4],[291,0,189,3],[293,0,191,2,"Icon"],[293,4,191,2,"Icon"],[293,8,191,6],[293,9,191,7,"Button"],[293,15,191,2],[293,18,191,16],[293,43,191,42,"Icon"],[293,47,191,16],[293,48,191,2],[294,0,192,2,"Icon"],[294,4,192,2,"Icon"],[294,8,192,6],[294,9,192,7,"getImageSource"],[294,23,192,2],[294,26,192,24,"getImageSource"],[294,40,192,2],[295,0,193,2,"Icon"],[295,4,193,2,"Icon"],[295,8,193,6],[295,9,193,7,"getImageSourceSync"],[295,27,193,2],[295,30,193,28,"getImageSourceSync"],[295,48,193,2],[296,0,194,2,"Icon"],[296,4,194,2,"Icon"],[296,8,194,6],[296,9,194,7,"loadFont"],[296,17,194,2],[296,20,194,18,"loadFont"],[296,28,194,2],[297,0,195,2,"Icon"],[297,4,195,2,"Icon"],[297,8,195,6],[297,9,195,7,"hasIcon"],[297,16,195,2],[297,19,195,17,"hasIcon"],[297,26,195,2],[298,0,196,2,"Icon"],[298,4,196,2,"Icon"],[298,8,196,6],[298,9,196,7,"getRawGlyphMap"],[298,23,196,2],[298,26,196,24,"getRawGlyphMap"],[298,40,196,2],[299,0,197,2,"Icon"],[299,4,197,2,"Icon"],[299,8,197,6],[299,9,197,7,"getFontFamily"],[299,22,197,2],[299,25,197,23,"getFontFamily"],[299,38,197,2],[300,0,199,2],[300,11,199,9,"Icon"],[300,15,199,2],[301,0,200,1]],"functionMap":{"names":["<global>","createIconSet","Icon","Icon#setNativeProps","Icon#handleRef","Icon#render","resolveGlyph","getImageSourceSync","getImageSource","loadFont","hasIcon","getRawGlyphMap","getFontFamily"],"mappings":"AAA;eCoB;ECoB;ICiB;KDI;gBEE;KFE;IGE;KH4B;GDC;EKI;GLM;EME;GN4B;EOE;GP4B;EQE;GRQ;ESE;GTE;EUE;GVE;EWE;GXE;CDW"}},"type":"js/module"}]}