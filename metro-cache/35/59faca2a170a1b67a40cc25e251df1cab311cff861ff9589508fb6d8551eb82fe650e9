{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"../vendor/core/ErrorUtils","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":19},"end":{"line":13,"column":55}}]}},{"name":"../Performance/Systrace","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":17},"end":{"line":14,"column":51}}]}},{"name":"../Utilities/deepFreezeAndThrowOnMutationInDev","data":{"isAsync":false,"locs":[{"start":{"line":16,"column":42},"end":{"line":16,"column":99}}]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":17,"column":18},"end":{"line":17,"column":38}}]}},{"name":"../Utilities/stringifySafe","data":{"isAsync":false,"locs":[{"start":{"line":18,"column":22},"end":{"line":18,"column":59}}]}},{"name":"../Utilities/warnOnce","data":{"isAsync":false,"locs":[{"start":{"line":19,"column":17},"end":{"line":19,"column":49}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var ErrorUtils = _$$_REQUIRE(_dependencyMap[3], \"../vendor/core/ErrorUtils\");\n\n  var Systrace = _$$_REQUIRE(_dependencyMap[4], \"../Performance/Systrace\");\n\n  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[5], \"../Utilities/deepFreezeAndThrowOnMutationInDev\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[6], \"invariant\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[7], \"../Utilities/stringifySafe\").default;\n\n  var warnOnce = _$$_REQUIRE(_dependencyMap[8], \"../Utilities/warnOnce\");\n\n  var TO_JS = 0;\n  var TO_NATIVE = 1;\n  var MODULE_IDS = 0;\n  var METHOD_IDS = 1;\n  var PARAMS = 2;\n  var MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n  var TRACE_TAG_REACT_APPS = 1 << 17;\n  var DEBUG_INFO_LIMIT = 32;\n\n  var MessageQueue = function () {\n    function MessageQueue() {\n      _classCallCheck(this, MessageQueue);\n\n      this._lazyCallableModules = {};\n      this._queue = [[], [], [], 0];\n      this._successCallbacks = new Map();\n      this._failureCallbacks = new Map();\n      this._callID = 0;\n      this._lastFlush = 0;\n      this._eventLoopStartTime = Date.now();\n      this._immediatesCallback = null;\n\n      if (__DEV__) {\n        this._debugInfo = {};\n        this._remoteModuleTable = {};\n        this._remoteMethodTable = {};\n      }\n\n      this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);\n      this.flushedQueue = this.flushedQueue.bind(this);\n      this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);\n    }\n\n    _createClass(MessageQueue, [{\n      key: \"callFunctionReturnFlushedQueue\",\n      value: function callFunctionReturnFlushedQueue(module, method, args) {\n        var _this = this;\n\n        this.__guard(function () {\n          _this.__callFunction(module, method, args);\n        });\n\n        return this.flushedQueue();\n      }\n    }, {\n      key: \"callFunctionReturnResultAndFlushedQueue\",\n      value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {}\n    }, {\n      key: \"invokeCallbackAndReturnFlushedQueue\",\n      value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {\n        var _this2 = this;\n\n        this.__guard(function () {\n          _this2.__invokeCallback(cbID, args);\n        });\n\n        return this.flushedQueue();\n      }\n    }, {\n      key: \"flushedQueue\",\n      value: function flushedQueue() {\n        var _this3 = this;\n\n        this.__guard(function () {\n          _this3.__callImmediates();\n        });\n\n        var queue = this._queue;\n        this._queue = [[], [], [], this._callID];\n        return queue[0].length ? queue : null;\n      }\n    }, {\n      key: \"getEventLoopRunningTime\",\n      value: function getEventLoopRunningTime() {\n        return Date.now() - this._eventLoopStartTime;\n      }\n    }, {\n      key: \"registerCallableModule\",\n      value: function registerCallableModule(name, module) {\n        this._lazyCallableModules[name] = function () {\n          return module;\n        };\n      }\n    }, {\n      key: \"registerLazyCallableModule\",\n      value: function registerLazyCallableModule(name, factory) {\n        var module;\n        var getValue = factory;\n\n        this._lazyCallableModules[name] = function () {\n          if (getValue) {\n            module = getValue();\n            getValue = null;\n          }\n\n          return module;\n        };\n      }\n    }, {\n      key: \"getCallableModule\",\n      value: function getCallableModule(name) {\n        var getValue = this._lazyCallableModules[name];\n        return getValue ? getValue() : null;\n      }\n    }, {\n      key: \"callNativeSyncHook\",\n      value: function callNativeSyncHook(moduleID, methodID, params, onFail, onSucc) {\n        if (__DEV__) {\n          invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\\n\\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');\n        }\n\n        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n        return global.nativeCallSyncHook(moduleID, methodID, params);\n      }\n    }, {\n      key: \"processCallbacks\",\n      value: function processCallbacks(moduleID, methodID, params, onFail, onSucc) {\n        var _this4 = this;\n\n        if (onFail || onSucc) {\n          if (__DEV__) {\n            this._debugInfo[this._callID] = [moduleID, methodID];\n\n            if (this._callID > DEBUG_INFO_LIMIT) {\n              delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n            }\n\n            if (this._successCallbacks.size > 500) {\n              var info = {};\n\n              this._successCallbacks.forEach(function (_, callID) {\n                var debug = _this4._debugInfo[callID];\n                var module = debug && _this4._remoteModuleTable[debug[0]];\n                var method = debug && _this4._remoteMethodTable[debug[0]][debug[1]];\n                info[callID] = {\n                  module: module,\n                  method: method\n                };\n              });\n\n              warnOnce('excessive-number-of-pending-callbacks', \"Please report: Excessive number of pending callbacks: \" + this._successCallbacks.size + \". Some pending callbacks that might have leaked by never being called from native code: \" + stringifySafe(info));\n            }\n          }\n\n          onFail && params.push(this._callID << 1);\n          onSucc && params.push(this._callID << 1 | 1);\n\n          this._successCallbacks.set(this._callID, onSucc);\n\n          this._failureCallbacks.set(this._callID, onFail);\n        }\n\n        if (__DEV__) {\n          global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);\n        }\n\n        this._callID++;\n      }\n    }, {\n      key: \"enqueueNativeCall\",\n      value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {\n        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n\n        this._queue[MODULE_IDS].push(moduleID);\n\n        this._queue[METHOD_IDS].push(methodID);\n\n        if (__DEV__) {\n          var isValidArgument = function isValidArgument(val) {\n            var t = typeof val;\n\n            if (t === 'undefined' || t === 'null' || t === 'boolean' || t === 'string') {\n              return true;\n            }\n\n            if (t === 'number') {\n              return isFinite(val);\n            }\n\n            if (t === 'function' || t !== 'object') {\n              return false;\n            }\n\n            if (Array.isArray(val)) {\n              return val.every(isValidArgument);\n            }\n\n            for (var k in val) {\n              if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n                return false;\n              }\n            }\n\n            return true;\n          };\n\n          var replacer = function replacer(key, val) {\n            var t = typeof val;\n\n            if (t === 'function') {\n              return '<<Function ' + val.name + '>>';\n            } else if (t === 'number' && !isFinite(val)) {\n              return '<<' + val.toString() + '>>';\n            } else {\n              return val;\n            }\n          };\n\n          invariant(isValidArgument(params), '%s is not usable as a native method argument', JSON.stringify(params, replacer));\n          deepFreezeAndThrowOnMutationInDev(params);\n        }\n\n        this._queue[PARAMS].push(params);\n\n        var now = Date.now();\n\n        if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {\n          var queue = this._queue;\n          this._queue = [[], [], [], this._callID];\n          this._lastFlush = now;\n          global.nativeFlushQueueImmediate(queue);\n        }\n\n        Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n\n        if (__DEV__ && this.__spy && isFinite(moduleID)) {\n          this.__spy({\n            type: TO_NATIVE,\n            module: this._remoteModuleTable[moduleID],\n            method: this._remoteMethodTable[moduleID][methodID],\n            args: params\n          });\n        } else if (this.__spy) {\n          this.__spy({\n            type: TO_NATIVE,\n            module: moduleID + '',\n            method: methodID,\n            args: params\n          });\n        }\n      }\n    }, {\n      key: \"createDebugLookup\",\n      value: function createDebugLookup(moduleID, name, methods) {\n        if (__DEV__) {\n          this._remoteModuleTable[moduleID] = name;\n          this._remoteMethodTable[moduleID] = methods || [];\n        }\n      }\n    }, {\n      key: \"setImmediatesCallback\",\n      value: function setImmediatesCallback(fn) {\n        this._immediatesCallback = fn;\n      }\n    }, {\n      key: \"__guard\",\n      value: function __guard(fn) {\n        if (this.__shouldPauseOnThrow()) {\n          fn();\n        } else {\n          try {\n            fn();\n          } catch (error) {\n            ErrorUtils.reportFatalError(error);\n          }\n        }\n      }\n    }, {\n      key: \"__shouldPauseOnThrow\",\n      value: function __shouldPauseOnThrow() {\n        return typeof DebuggerInternal !== 'undefined' && DebuggerInternal.shouldPauseOnThrow === true;\n      }\n    }, {\n      key: \"__callImmediates\",\n      value: function __callImmediates() {\n        Systrace.beginEvent('JSTimers.callImmediates()');\n\n        if (this._immediatesCallback != null) {\n          this._immediatesCallback();\n        }\n\n        Systrace.endEvent();\n      }\n    }, {\n      key: \"__callFunction\",\n      value: function __callFunction(module, method, args) {\n        this._lastFlush = Date.now();\n        this._eventLoopStartTime = this._lastFlush;\n\n        if (__DEV__ || this.__spy) {\n          Systrace.beginEvent(module + \".\" + method + \"(\" + stringifySafe(args) + \")\");\n        } else {\n          Systrace.beginEvent(module + \".\" + method + \"(...)\");\n        }\n\n        if (this.__spy) {\n          this.__spy({\n            type: TO_JS,\n            module: module,\n            method: method,\n            args: args\n          });\n        }\n\n        var moduleMethods = this.getCallableModule(module);\n        invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);\n        invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);\n        moduleMethods[method].apply(moduleMethods, args);\n        Systrace.endEvent();\n      }\n    }, {\n      key: \"__invokeCallback\",\n      value: function __invokeCallback(cbID, args) {\n        this._lastFlush = Date.now();\n        this._eventLoopStartTime = this._lastFlush;\n        var callID = cbID >>> 1;\n        var isSuccess = cbID & 1;\n        var callback = isSuccess ? this._successCallbacks.get(callID) : this._failureCallbacks.get(callID);\n\n        if (__DEV__) {\n          var debug = this._debugInfo[callID];\n\n          var _module = debug && this._remoteModuleTable[debug[0]];\n\n          var method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n          invariant(callback, \"No callback found with cbID \" + cbID + \" and callID \" + callID + \" for \" + (method ? \" \" + _module + \".\" + method + \" - most likely the callback was already invoked\" : \"module \" + (_module || '<unknown>')) + (\". Args: '\" + stringifySafe(args) + \"'\"));\n          var profileName = debug ? '<callback for ' + _module + '.' + method + '>' : cbID;\n\n          if (callback && this.__spy) {\n            this.__spy({\n              type: TO_JS,\n              module: null,\n              method: profileName,\n              args: args\n            });\n          }\n\n          Systrace.beginEvent(\"MessageQueue.invokeCallback(\" + profileName + \", \" + stringifySafe(args) + \")\");\n        }\n\n        if (!callback) {\n          return;\n        }\n\n        this._successCallbacks.delete(callID);\n\n        this._failureCallbacks.delete(callID);\n\n        callback.apply(void 0, _toConsumableArray(args));\n\n        if (__DEV__) {\n          Systrace.endEvent();\n        }\n      }\n    }], [{\n      key: \"spy\",\n      value: function spy(spyOrToggle) {\n        if (spyOrToggle === true) {\n          MessageQueue.prototype.__spy = function (info) {\n            console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + \" : \" + (\"\" + (info.module ? info.module + '.' : '') + info.method) + (\"(\" + JSON.stringify(info.args) + \")\"));\n          };\n        } else if (spyOrToggle === false) {\n          MessageQueue.prototype.__spy = null;\n        } else {\n          MessageQueue.prototype.__spy = spyOrToggle;\n        }\n      }\n    }]);\n\n    return MessageQueue;\n  }();\n\n  module.exports = MessageQueue;\n});","lineCount":395,"map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"ErrorUtils"],[10,16,13,16],[10,19,13,19,"require"],[10,30,13,26],[10,78,13,0],[12,0,14,0],[12,6,14,6,"Systrace"],[12,14,14,14],[12,17,14,17,"require"],[12,28,14,24],[12,74,14,0],[14,0,16,0],[14,6,16,6,"deepFreezeAndThrowOnMutationInDev"],[14,39,16,39],[14,42,16,42,"require"],[14,53,16,49],[14,122,16,0],[16,0,17,0],[16,6,17,6,"invariant"],[16,15,17,15],[16,18,17,18,"require"],[16,29,17,25],[16,61,17,0],[18,0,18,0],[18,6,18,6,"stringifySafe"],[18,19,18,19],[18,22,18,22,"require"],[18,33,18,29],[18,82,18,22],[18,83,18,60,"default"],[18,90,18,0],[20,0,19,0],[20,6,19,6,"warnOnce"],[20,14,19,14],[20,17,19,17,"require"],[20,28,19,24],[20,72,19,0],[22,0,29,0],[22,6,29,6,"TO_JS"],[22,11,29,11],[22,14,29,14],[22,15,29,0],[23,0,30,0],[23,6,30,6,"TO_NATIVE"],[23,15,30,15],[23,18,30,18],[23,19,30,0],[24,0,32,0],[24,6,32,6,"MODULE_IDS"],[24,16,32,16],[24,19,32,19],[24,20,32,0],[25,0,33,0],[25,6,33,6,"METHOD_IDS"],[25,16,33,16],[25,19,33,19],[25,20,33,0],[26,0,34,0],[26,6,34,6,"PARAMS"],[26,12,34,12],[26,15,34,15],[26,16,34,0],[27,0,35,0],[27,6,35,6,"MIN_TIME_BETWEEN_FLUSHES_MS"],[27,33,35,33],[27,36,35,36],[27,37,35,0],[28,0,38,0],[28,6,38,6,"TRACE_TAG_REACT_APPS"],[28,26,38,26],[28,29,38,29],[28,34,38,34],[28,36,38,0],[29,0,40,0],[29,6,40,6,"DEBUG_INFO_LIMIT"],[29,22,40,22],[29,25,40,25],[29,27,40,0],[31,6,42,6,"MessageQueue"],[31,18],[32,0,58,2],[32,28,58,16],[33,0,58,16],[35,0,59,4],[35,11,59,9,"_lazyCallableModules"],[35,31,59,4],[35,34,59,32],[35,36,59,4],[36,0,60,4],[36,11,60,9,"_queue"],[36,17,60,4],[36,20,60,18],[36,21,60,19],[36,23,60,18],[36,25,60,23],[36,27,60,18],[36,29,60,27],[36,31,60,18],[36,33,60,31],[36,34,60,18],[36,35,60,4],[37,0,61,4],[37,11,61,9,"_successCallbacks"],[37,28,61,4],[37,31,61,29],[37,35,61,33,"Map"],[37,38,61,29],[37,40,61,4],[38,0,62,4],[38,11,62,9,"_failureCallbacks"],[38,28,62,4],[38,31,62,29],[38,35,62,33,"Map"],[38,38,62,29],[38,40,62,4],[39,0,63,4],[39,11,63,9,"_callID"],[39,18,63,4],[39,21,63,19],[39,22,63,4],[40,0,64,4],[40,11,64,9,"_lastFlush"],[40,21,64,4],[40,24,64,22],[40,25,64,4],[41,0,65,4],[41,11,65,9,"_eventLoopStartTime"],[41,30,65,4],[41,33,65,31,"Date"],[41,37,65,35],[41,38,65,36,"now"],[41,41,65,31],[41,43,65,4],[42,0,66,4],[42,11,66,9,"_immediatesCallback"],[42,30,66,4],[42,33,66,31],[42,37,66,4],[44,0,68,4],[44,10,68,8,"__DEV__"],[44,17,68,4],[44,19,68,17],[45,0,69,6],[45,13,69,11,"_debugInfo"],[45,23,69,6],[45,26,69,24],[45,28,69,6],[46,0,70,6],[46,13,70,11,"_remoteModuleTable"],[46,31,70,6],[46,34,70,32],[46,36,70,6],[47,0,71,6],[47,13,71,11,"_remoteMethodTable"],[47,31,71,6],[47,34,71,32],[47,36,71,6],[48,0,72,5],[50,0,74,5],[50,10,74,4],[50,11,74,16,"callFunctionReturnFlushedQueue"],[50,41,74,4],[50,44,74,49],[50,49,74,54,"callFunctionReturnFlushedQueue"],[50,79,74,49],[50,80,74,85,"bind"],[50,84,74,49],[50,85,75,6],[50,89,74,49],[50,90,74,4],[51,0,77,5],[51,10,77,4],[51,11,77,16,"flushedQueue"],[51,23,77,4],[51,26,77,31],[51,31,77,36,"flushedQueue"],[51,43,77,31],[51,44,77,49,"bind"],[51,48,77,31],[51,49,77,54],[51,53,77,31],[51,54,77,4],[52,0,78,5],[52,10,78,4],[52,11,78,16,"invokeCallbackAndReturnFlushedQueue"],[52,46,78,4],[52,49,78,54],[52,54,78,59,"invokeCallbackAndReturnFlushedQueue"],[52,89,78,54],[52,90,78,95,"bind"],[52,94,78,54],[52,95,79,6],[52,99,78,54],[52,100,78,4],[53,0,81,3],[57,13,103,2],[57,53,104,4,"module"],[57,59,103,2],[57,61,105,4,"method"],[57,67,103,2],[57,69,106,4,"args"],[57,73,103,2],[57,75,107,63],[58,0,107,63],[60,0,108,4],[60,13,108,9,"__guard"],[60,20,108,4],[60,21,108,17],[60,33,108,23],[61,0,109,6],[61,10,109,6],[61,15,109,10],[61,16,109,11,"__callFunction"],[61,30,109,6],[61,31,109,26,"module"],[61,37,109,6],[61,39,109,34,"method"],[61,45,109,6],[61,47,109,42,"args"],[61,51,109,6],[62,0,110,5],[62,9,108,4],[64,0,112,4],[64,15,112,11],[64,20,112,16,"flushedQueue"],[64,32,112,11],[64,34,112,4],[65,0,113,3],[68,13,116,2],[68,62,117,4,"module"],[68,68,116,2],[68,70,118,4,"method"],[68,76,116,2],[68,78,119,4,"args"],[68,82,116,2],[68,84,120,10],[68,85,120,12],[71,13,122,2],[71,58,123,4,"cbID"],[71,62,122,2],[71,64,124,4,"args"],[71,68,122,2],[71,70,125,63],[72,0,125,63],[74,0,126,4],[74,13,126,9,"__guard"],[74,20,126,4],[74,21,126,17],[74,33,126,23],[75,0,127,6],[75,10,127,6],[75,16,127,10],[75,17,127,11,"__invokeCallback"],[75,33,127,6],[75,34,127,28,"cbID"],[75,38,127,6],[75,40,127,34,"args"],[75,44,127,6],[76,0,128,5],[76,9,126,4],[78,0,130,4],[78,15,130,11],[78,20,130,16,"flushedQueue"],[78,32,130,11],[78,34,130,4],[79,0,131,3],[82,13,133,2],[82,37,133,76],[83,0,133,76],[85,0,134,4],[85,13,134,9,"__guard"],[85,20,134,4],[85,21,134,17],[85,33,134,23],[86,0,135,6],[86,10,135,6],[86,16,135,10],[86,17,135,11,"__callImmediates"],[86,33,135,6],[87,0,136,5],[87,9,134,4],[89,0,138,4],[89,12,138,10,"queue"],[89,17,138,15],[89,20,138,18],[89,25,138,23,"_queue"],[89,31,138,4],[90,0,139,4],[90,13,139,9,"_queue"],[90,19,139,4],[90,22,139,18],[90,23,139,19],[90,25,139,18],[90,27,139,23],[90,29,139,18],[90,31,139,27],[90,33,139,18],[90,35,139,31],[90,40,139,36,"_callID"],[90,47,139,18],[90,48,139,4],[91,0,140,4],[91,15,140,11,"queue"],[91,20,140,16],[91,21,140,17],[91,22,140,16],[91,23,140,11],[91,24,140,20,"length"],[91,30,140,11],[91,33,140,29,"queue"],[91,38,140,11],[91,41,140,37],[91,45,140,4],[92,0,141,3],[95,13,143,2],[95,48,143,36],[96,0,144,4],[96,15,144,11,"Date"],[96,19,144,15],[96,20,144,16,"now"],[96,23,144,11],[96,28,144,24],[96,33,144,29,"_eventLoopStartTime"],[96,52,144,4],[97,0,145,3],[100,13,147,2],[100,45,147,25,"name"],[100,49,147,2],[100,51,147,39,"module"],[100,57,147,2],[100,59,147,55],[101,0,148,4],[101,13,148,9,"_lazyCallableModules"],[101,33,148,4],[101,34,148,30,"name"],[101,38,148,4],[101,42,148,38],[102,0,148,38],[102,17,148,44,"module"],[102,23,148,38],[103,0,148,38],[103,9,148,4],[104,0,149,3],[107,13,151,2],[107,49,151,29,"name"],[107,53,151,2],[107,55,151,43,"factory"],[107,62,151,2],[107,64,151,68],[108,0,152,4],[108,12,152,8,"module"],[108,18,152,4],[109,0,153,4],[109,12,153,8,"getValue"],[109,20,153,35],[109,23,153,38,"factory"],[109,30,153,4],[111,0,154,4],[111,13,154,9,"_lazyCallableModules"],[111,33,154,4],[111,34,154,30,"name"],[111,38,154,4],[111,42,154,38],[111,54,154,44],[112,0,155,6],[112,14,155,10,"getValue"],[112,22,155,6],[112,24,155,20],[113,0,156,8,"module"],[113,12,156,8,"module"],[113,18,156,14],[113,21,156,17,"getValue"],[113,29,156,25],[113,31,156,8],[114,0,157,8,"getValue"],[114,12,157,8,"getValue"],[114,20,157,16],[114,23,157,19],[114,27,157,8],[115,0,158,7],[117,0,159,6],[117,17,159,13,"module"],[117,23,159,6],[118,0,160,5],[118,9,154,4],[119,0,161,3],[122,13,163,2],[122,40,163,20,"name"],[122,44,163,2],[122,46,163,46],[123,0,164,4],[123,12,164,10,"getValue"],[123,20,164,18],[123,23,164,21],[123,28,164,26,"_lazyCallableModules"],[123,48,164,21],[123,49,164,47,"name"],[123,53,164,21],[123,54,164,4],[124,0,165,4],[124,15,165,11,"getValue"],[124,23,165,19],[124,26,165,22,"getValue"],[124,34,165,30],[124,36,165,19],[124,39,165,35],[124,43,165,4],[125,0,166,3],[128,13,168,2],[128,41,169,4,"moduleID"],[128,49,168,2],[128,51,170,4,"methodID"],[128,59,168,2],[128,61,171,4,"params"],[128,67,168,2],[128,69,172,4,"onFail"],[128,75,168,2],[128,77,173,4,"onSucc"],[128,83,168,2],[128,85,174,9],[129,0,175,4],[129,12,175,8,"__DEV__"],[129,19,175,4],[129,21,175,17],[130,0,176,6,"invariant"],[130,10,176,6,"invariant"],[130,19,176,15],[130,20,177,8,"global"],[130,26,177,14],[130,27,177,15,"nativeCallSyncHook"],[130,45,176,15],[130,47,178,8],[130,90,179,10],[130,163,178,8],[130,166,180,10],[130,240,178,8],[130,243,181,10],[130,259,176,15],[130,260,176,6],[131,0,183,5],[133,0,184,4],[133,13,184,9,"processCallbacks"],[133,29,184,4],[133,30,184,26,"moduleID"],[133,38,184,4],[133,40,184,36,"methodID"],[133,48,184,4],[133,50,184,46,"params"],[133,56,184,4],[133,58,184,54,"onFail"],[133,64,184,4],[133,66,184,62,"onSucc"],[133,72,184,4],[134,0,185,4],[134,15,185,11,"global"],[134,21,185,17],[134,22,185,18,"nativeCallSyncHook"],[134,40,185,11],[134,41,185,37,"moduleID"],[134,49,185,11],[134,51,185,47,"methodID"],[134,59,185,11],[134,61,185,57,"params"],[134,67,185,11],[134,68,185,4],[135,0,186,3],[138,13,188,2],[138,39,189,4,"moduleID"],[138,47,188,2],[138,49,190,4,"methodID"],[138,57,188,2],[138,59,191,4,"params"],[138,65,188,2],[138,67,192,4,"onFail"],[138,73,188,2],[138,75,193,4,"onSucc"],[138,81,188,2],[138,83,194,4],[139,0,194,4],[141,0,195,4],[141,12,195,8,"onFail"],[141,18,195,14],[141,22,195,18,"onSucc"],[141,28,195,4],[141,30,195,26],[142,0,196,6],[142,14,196,10,"__DEV__"],[142,21,196,6],[142,23,196,19],[143,0,197,8],[143,17,197,13,"_debugInfo"],[143,27,197,8],[143,28,197,24],[143,33,197,29,"_callID"],[143,40,197,8],[143,44,197,40],[143,45,197,41,"moduleID"],[143,53,197,40],[143,55,197,51,"methodID"],[143,63,197,40],[143,64,197,8],[145,0,198,8],[145,16,198,12],[145,21,198,17,"_callID"],[145,28,198,12],[145,31,198,27,"DEBUG_INFO_LIMIT"],[145,47,198,8],[145,49,198,45],[146,0,199,10],[146,21,199,17],[146,26,199,22,"_debugInfo"],[146,36,199,17],[146,37,199,33],[146,42,199,38,"_callID"],[146,49,199,33],[146,52,199,48,"DEBUG_INFO_LIMIT"],[146,68,199,17],[146,69,199,10],[147,0,200,9],[149,0,201,8],[149,16,201,12],[149,21,201,17,"_successCallbacks"],[149,38,201,12],[149,39,201,35,"size"],[149,43,201,12],[149,46,201,42],[149,49,201,8],[149,51,201,47],[150,0,202,10],[150,18,202,16,"info"],[150,22,202,20],[150,25,202,23],[150,27,202,10],[152,0,203,10],[152,19,203,15,"_successCallbacks"],[152,36,203,10],[152,37,203,33,"forEach"],[152,44,203,10],[152,45,203,41],[152,55,203,42,"_"],[152,56,203,41],[152,58,203,45,"callID"],[152,64,203,41],[152,66,203,56],[153,0,204,12],[153,20,204,18,"debug"],[153,25,204,23],[153,28,204,26],[153,34,204,30],[153,35,204,31,"_debugInfo"],[153,45,204,26],[153,46,204,42,"callID"],[153,52,204,26],[153,53,204,12],[154,0,205,12],[154,20,205,18,"module"],[154,26,205,24],[154,29,205,27,"debug"],[154,34,205,32],[154,38,205,36],[154,44,205,40],[154,45,205,41,"_remoteModuleTable"],[154,63,205,36],[154,64,205,60,"debug"],[154,69,205,65],[154,70,205,66],[154,71,205,65],[154,72,205,36],[154,73,205,12],[155,0,206,12],[155,20,206,18,"method"],[155,26,206,24],[155,29,206,27,"debug"],[155,34,206,32],[155,38,206,36],[155,44,206,40],[155,45,206,41,"_remoteMethodTable"],[155,63,206,36],[155,64,206,60,"debug"],[155,69,206,65],[155,70,206,66],[155,71,206,65],[155,72,206,36],[155,74,206,70,"debug"],[155,79,206,75],[155,80,206,76],[155,81,206,75],[155,82,206,36],[155,83,206,12],[156,0,207,12,"info"],[156,16,207,12,"info"],[156,20,207,16],[156,21,207,17,"callID"],[156,27,207,16],[156,28,207,12],[156,31,207,27],[157,0,207,28,"module"],[157,18,207,28,"module"],[157,24,207,34],[157,26,207,28,"module"],[157,32,207,27],[158,0,207,36,"method"],[158,18,207,36,"method"],[158,24,207,42],[158,26,207,36,"method"],[159,0,207,27],[159,17,207,12],[160,0,208,11],[160,15,203,10],[162,0,209,10,"warnOnce"],[162,14,209,10,"warnOnce"],[162,22,209,18],[162,23,210,12],[162,62,209,18],[162,123,212,14],[162,128,212,19,"_successCallbacks"],[162,145,212,14],[162,146,212,37,"size"],[162,150,209,18],[162,246,213,103,"stringifySafe"],[162,259,213,116],[162,260,214,14,"info"],[162,264,213,116],[162,265,209,18],[162,266,209,10],[163,0,217,9],[164,0,218,7],[166,0,222,6,"onFail"],[166,10,222,6,"onFail"],[166,16,222,12],[166,20,222,16,"params"],[166,26,222,22],[166,27,222,23,"push"],[166,31,222,16],[166,32,222,28],[166,37,222,33,"_callID"],[166,44,222,28],[166,48,222,44],[166,49,222,16],[166,50,222,6],[167,0,224,6,"onSucc"],[167,10,224,6,"onSucc"],[167,16,224,12],[167,20,224,16,"params"],[167,26,224,22],[167,27,224,23,"push"],[167,31,224,16],[167,32,224,29],[167,37,224,34,"_callID"],[167,44,224,29],[167,48,224,45],[167,49,224,28],[167,52,224,50],[167,53,224,16],[167,54,224,6],[169,0,225,6],[169,15,225,11,"_successCallbacks"],[169,32,225,6],[169,33,225,29,"set"],[169,36,225,6],[169,37,225,33],[169,42,225,38,"_callID"],[169,49,225,6],[169,51,225,47,"onSucc"],[169,57,225,6],[171,0,226,6],[171,15,226,11,"_failureCallbacks"],[171,32,226,6],[171,33,226,29,"set"],[171,36,226,6],[171,37,226,33],[171,42,226,38,"_callID"],[171,49,226,6],[171,51,226,47,"onFail"],[171,57,226,6],[172,0,227,5],[174,0,228,4],[174,12,228,8,"__DEV__"],[174,19,228,4],[174,21,228,17],[175,0,229,6,"global"],[175,10,229,6,"global"],[175,16,229,12],[175,17,229,13,"nativeTraceBeginAsyncFlow"],[175,42,229,6],[175,46,230,8,"global"],[175,52,230,14],[175,53,230,15,"nativeTraceBeginAsyncFlow"],[175,78,230,8],[175,79,231,10,"TRACE_TAG_REACT_APPS"],[175,99,230,8],[175,101,232,10],[175,109,230,8],[175,111,233,10],[175,116,233,15,"_callID"],[175,123,230,8],[175,124,229,6],[176,0,235,5],[178,0,236,4],[178,13,236,9,"_callID"],[178,20,236,4],[179,0,237,3],[182,13,239,2],[182,40,240,4,"moduleID"],[182,48,239,2],[182,50,241,4,"methodID"],[182,58,239,2],[182,60,242,4,"params"],[182,66,239,2],[182,68,243,4,"onFail"],[182,74,239,2],[182,76,244,4,"onSucc"],[182,82,239,2],[182,84,245,4],[183,0,246,4],[183,13,246,9,"processCallbacks"],[183,29,246,4],[183,30,246,26,"moduleID"],[183,38,246,4],[183,40,246,36,"methodID"],[183,48,246,4],[183,50,246,46,"params"],[183,56,246,4],[183,58,246,54,"onFail"],[183,64,246,4],[183,66,246,62,"onSucc"],[183,72,246,4],[185,0,248,4],[185,13,248,9,"_queue"],[185,19,248,4],[185,20,248,16,"MODULE_IDS"],[185,30,248,4],[185,32,248,28,"push"],[185,36,248,4],[185,37,248,33,"moduleID"],[185,45,248,4],[187,0,249,4],[187,13,249,9,"_queue"],[187,19,249,4],[187,20,249,16,"METHOD_IDS"],[187,30,249,4],[187,32,249,28,"push"],[187,36,249,4],[187,37,249,33,"methodID"],[187,45,249,4],[189,0,251,4],[189,12,251,8,"__DEV__"],[189,19,251,4],[189,21,251,17],[190,0,256,6],[190,14,256,12,"isValidArgument"],[190,29,256,27],[190,32,256,30],[190,41,256,12,"isValidArgument"],[190,56,256,30],[190,57,256,30,"val"],[190,60,256,33],[190,62,256,37],[191,0,257,8],[191,16,257,14,"t"],[191,17,257,15],[191,20,257,18],[191,27,257,25,"val"],[191,30,257,8],[193,0,258,8],[193,16,259,10,"t"],[193,17,259,11],[193,22,259,16],[193,33,259,10],[193,37,260,10,"t"],[193,38,260,11],[193,43,260,16],[193,49,259,10],[193,53,261,10,"t"],[193,54,261,11],[193,59,261,16],[193,68,259,10],[193,72,262,10,"t"],[193,73,262,11],[193,78,262,16],[193,86,258,8],[193,88,263,10],[194,0,264,10],[194,21,264,17],[194,25,264,10],[195,0,265,9],[197,0,266,8],[197,16,266,12,"t"],[197,17,266,13],[197,22,266,18],[197,30,266,8],[197,32,266,28],[198,0,267,10],[198,21,267,17,"isFinite"],[198,29,267,25],[198,30,267,26,"val"],[198,33,267,25],[198,34,267,10],[199,0,268,9],[201,0,269,8],[201,16,269,12,"t"],[201,17,269,13],[201,22,269,18],[201,32,269,12],[201,36,269,32,"t"],[201,37,269,33],[201,42,269,38],[201,50,269,8],[201,52,269,48],[202,0,270,10],[202,21,270,17],[202,26,270,10],[203,0,271,9],[205,0,272,8],[205,16,272,12,"Array"],[205,21,272,17],[205,22,272,18,"isArray"],[205,29,272,12],[205,30,272,26,"val"],[205,33,272,12],[205,34,272,8],[205,36,272,32],[206,0,273,10],[206,21,273,17,"val"],[206,24,273,20],[206,25,273,21,"every"],[206,30,273,17],[206,31,273,27,"isValidArgument"],[206,46,273,17],[206,47,273,10],[207,0,274,9],[209,0,275,8],[209,17,275,13],[209,21,275,19,"k"],[209,22,275,8],[209,26,275,24,"val"],[209,29,275,8],[209,31,275,29],[210,0,276,10],[210,18,276,14],[210,25,276,21,"val"],[210,28,276,24],[210,29,276,25,"k"],[210,30,276,24],[210,31,276,14],[210,36,276,32],[210,46,276,14],[210,50,276,46],[210,51,276,47,"isValidArgument"],[210,66,276,62],[210,67,276,63,"val"],[210,70,276,66],[210,71,276,67,"k"],[210,72,276,66],[210,73,276,62],[210,74,276,10],[210,76,276,72],[211,0,277,12],[211,23,277,19],[211,28,277,12],[212,0,278,11],[213,0,279,9],[215,0,280,8],[215,19,280,15],[215,23,280,8],[216,0,281,7],[216,11,256,6],[218,0,286,6],[218,14,286,12,"replacer"],[218,22,286,20],[218,25,286,23],[218,34,286,12,"replacer"],[218,42,286,23],[218,43,286,24,"key"],[218,46,286,23],[218,48,286,29,"val"],[218,51,286,23],[218,53,286,37],[219,0,287,8],[219,16,287,14,"t"],[219,17,287,15],[219,20,287,18],[219,27,287,25,"val"],[219,30,287,8],[221,0,288,8],[221,16,288,12,"t"],[221,17,288,13],[221,22,288,18],[221,32,288,8],[221,34,288,30],[222,0,289,10],[222,21,289,17],[222,37,289,33,"val"],[222,40,289,36],[222,41,289,37,"name"],[222,45,289,17],[222,48,289,44],[222,52,289,10],[223,0,290,9],[223,13,288,8],[223,19,290,15],[223,23,290,19,"t"],[223,24,290,20],[223,29,290,25],[223,37,290,19],[223,41,290,37],[223,42,290,38,"isFinite"],[223,50,290,46],[223,51,290,47,"val"],[223,54,290,46],[223,55,290,15],[223,57,290,53],[224,0,291,10],[224,21,291,17],[224,28,291,24,"val"],[224,31,291,27],[224,32,291,28,"toString"],[224,40,291,24],[224,42,291,17],[224,45,291,41],[224,49,291,10],[225,0,292,9],[225,13,290,15],[225,19,292,15],[226,0,293,10],[226,21,293,17,"val"],[226,24,293,10],[227,0,294,9],[228,0,295,7],[228,11,286,6],[230,0,298,6,"invariant"],[230,10,298,6,"invariant"],[230,19,298,15],[230,20,299,8,"isValidArgument"],[230,35,299,23],[230,36,299,24,"params"],[230,42,299,23],[230,43,298,15],[230,45,300,8],[230,91,298,15],[230,93,301,8,"JSON"],[230,97,301,12],[230,98,301,13,"stringify"],[230,107,301,8],[230,108,301,23,"params"],[230,114,301,8],[230,116,301,31,"replacer"],[230,124,301,8],[230,125,298,15],[230,126,298,6],[231,0,305,6,"deepFreezeAndThrowOnMutationInDev"],[231,10,305,6,"deepFreezeAndThrowOnMutationInDev"],[231,43,305,39],[231,44,305,41,"params"],[231,50,305,39],[231,51,305,6],[232,0,306,5],[234,0,307,4],[234,13,307,9,"_queue"],[234,19,307,4],[234,20,307,16,"PARAMS"],[234,26,307,4],[234,28,307,24,"push"],[234,32,307,4],[234,33,307,29,"params"],[234,39,307,4],[236,0,309,4],[236,12,309,10,"now"],[236,15,309,13],[236,18,309,16,"Date"],[236,22,309,20],[236,23,309,21,"now"],[236,26,309,16],[236,28,309,4],[238,0,310,4],[238,12,311,6,"global"],[238,18,311,12],[238,19,311,13,"nativeFlushQueueImmediate"],[238,44,311,6],[238,48,312,6,"now"],[238,51,312,9],[238,54,312,12],[238,59,312,17,"_lastFlush"],[238,69,312,6],[238,73,312,31,"MIN_TIME_BETWEEN_FLUSHES_MS"],[238,100,310,4],[238,102,313,6],[239,0,314,6],[239,14,314,12,"queue"],[239,19,314,17],[239,22,314,20],[239,27,314,25,"_queue"],[239,33,314,6],[240,0,315,6],[240,15,315,11,"_queue"],[240,21,315,6],[240,24,315,20],[240,25,315,21],[240,27,315,20],[240,29,315,25],[240,31,315,20],[240,33,315,29],[240,35,315,20],[240,37,315,33],[240,42,315,38,"_callID"],[240,49,315,20],[240,50,315,6],[241,0,316,6],[241,15,316,11,"_lastFlush"],[241,25,316,6],[241,28,316,24,"now"],[241,31,316,6],[242,0,317,6,"global"],[242,10,317,6,"global"],[242,16,317,12],[242,17,317,13,"nativeFlushQueueImmediate"],[242,42,317,6],[242,43,317,39,"queue"],[242,48,317,6],[243,0,318,5],[245,0,319,4,"Systrace"],[245,8,319,4,"Systrace"],[245,16,319,12],[245,17,319,13,"counterEvent"],[245,29,319,4],[245,30,319,26],[245,58,319,4],[245,60,319,56],[245,65,319,61,"_queue"],[245,71,319,56],[245,72,319,68],[245,73,319,56],[245,75,319,71,"length"],[245,81,319,4],[247,0,320,4],[247,12,320,8,"__DEV__"],[247,19,320,15],[247,23,320,19],[247,28,320,24,"__spy"],[247,33,320,8],[247,37,320,33,"isFinite"],[247,45,320,41],[247,46,320,42,"moduleID"],[247,54,320,41],[247,55,320,4],[247,57,320,53],[248,0,321,6],[248,15,321,11,"__spy"],[248,20,321,6],[248,21,321,17],[249,0,322,8,"type"],[249,12,322,8,"type"],[249,16,322,12],[249,18,322,14,"TO_NATIVE"],[249,27,321,17],[250,0,323,8,"module"],[250,12,323,8,"module"],[250,18,323,14],[250,20,323,16],[250,25,323,21,"_remoteModuleTable"],[250,43,323,16],[250,44,323,40,"moduleID"],[250,52,323,16],[250,53,321,17],[251,0,324,8,"method"],[251,12,324,8,"method"],[251,18,324,14],[251,20,324,16],[251,25,324,21,"_remoteMethodTable"],[251,43,324,16],[251,44,324,40,"moduleID"],[251,52,324,16],[251,54,324,50,"methodID"],[251,62,324,16],[251,63,321,17],[252,0,325,8,"args"],[252,12,325,8,"args"],[252,16,325,12],[252,18,325,14,"params"],[253,0,321,17],[253,11,321,6],[254,0,327,5],[254,9,320,4],[254,15,327,11],[254,19,327,15],[254,24,327,20,"__spy"],[254,29,327,11],[254,31,327,27],[255,0,328,6],[255,15,328,11,"__spy"],[255,20,328,6],[255,21,328,17],[256,0,329,8,"type"],[256,12,329,8,"type"],[256,16,329,12],[256,18,329,14,"TO_NATIVE"],[256,27,328,17],[257,0,330,8,"module"],[257,12,330,8,"module"],[257,18,330,14],[257,20,330,16,"moduleID"],[257,28,330,24],[257,31,330,27],[257,33,328,17],[258,0,331,8,"method"],[258,12,331,8,"method"],[258,18,331,14],[258,20,331,16,"methodID"],[258,28,328,17],[259,0,332,8,"args"],[259,12,332,8,"args"],[259,16,332,12],[259,18,332,14,"params"],[260,0,328,17],[260,11,328,6],[261,0,334,5],[262,0,335,3],[265,13,337,2],[265,40,338,4,"moduleID"],[265,48,337,2],[265,50,339,4,"name"],[265,54,337,2],[265,56,340,4,"methods"],[265,63,337,2],[265,65,341,4],[266,0,342,4],[266,12,342,8,"__DEV__"],[266,19,342,4],[266,21,342,17],[267,0,343,6],[267,15,343,11,"_remoteModuleTable"],[267,33,343,6],[267,34,343,30,"moduleID"],[267,42,343,6],[267,46,343,42,"name"],[267,50,343,6],[268,0,344,6],[268,15,344,11,"_remoteMethodTable"],[268,33,344,6],[268,34,344,30,"moduleID"],[268,42,344,6],[268,46,344,42,"methods"],[268,53,344,49],[268,57,344,53],[268,59,344,6],[269,0,345,5],[270,0,346,3],[273,13,351,2],[273,44,351,24,"fn"],[273,46,351,2],[273,48,351,40],[274,0,352,4],[274,13,352,9,"_immediatesCallback"],[274,32,352,4],[274,35,352,31,"fn"],[274,37,352,4],[275,0,353,3],[278,13,359,2],[278,30,359,10,"fn"],[278,32,359,2],[278,34,359,26],[279,0,360,4],[279,12,360,8],[279,17,360,13,"__shouldPauseOnThrow"],[279,37,360,8],[279,39,360,4],[279,41,360,37],[280,0,361,6,"fn"],[280,10,361,6,"fn"],[280,12,361,8],[281,0,362,5],[281,9,360,4],[281,15,362,11],[282,0,363,6],[282,14,363,10],[283,0,364,8,"fn"],[283,12,364,8,"fn"],[283,14,364,10],[284,0,365,7],[284,11,363,6],[284,12,365,8],[284,19,365,15,"error"],[284,24,365,8],[284,26,365,22],[285,0,366,8,"ErrorUtils"],[285,12,366,8,"ErrorUtils"],[285,22,366,18],[285,23,366,19,"reportFatalError"],[285,39,366,8],[285,40,366,36,"error"],[285,45,366,8],[286,0,367,7],[287,0,368,5],[288,0,369,3],[291,13,376,2],[291,45,376,34],[292,0,377,4],[292,15,379,6],[292,22,379,13,"DebuggerInternal"],[292,38,379,6],[292,43,379,34],[292,54,379,6],[292,58,380,6,"DebuggerInternal"],[292,74,380,22],[292,75,380,23,"shouldPauseOnThrow"],[292,93,380,6],[292,98,380,46],[292,102,377,4],[293,0,382,3],[296,13,384,2],[296,41,384,21],[297,0,385,4,"Systrace"],[297,8,385,4,"Systrace"],[297,16,385,12],[297,17,385,13,"beginEvent"],[297,27,385,4],[297,28,385,24],[297,55,385,4],[299,0,386,4],[299,12,386,8],[299,17,386,13,"_immediatesCallback"],[299,36,386,8],[299,40,386,36],[299,44,386,4],[299,46,386,42],[300,0,387,6],[300,15,387,11,"_immediatesCallback"],[300,34,387,6],[301,0,388,5],[303,0,389,4,"Systrace"],[303,8,389,4,"Systrace"],[303,16,389,12],[303,17,389,13,"endEvent"],[303,25,389,4],[304,0,390,3],[307,13,392,2],[307,37,392,17,"module"],[307,43,392,2],[307,45,392,33,"method"],[307,51,392,2],[307,53,392,49,"args"],[307,57,392,2],[307,59,392,68],[308,0,393,4],[308,13,393,9,"_lastFlush"],[308,23,393,4],[308,26,393,22,"Date"],[308,30,393,26],[308,31,393,27,"now"],[308,34,393,22],[308,36,393,4],[309,0,394,4],[309,13,394,9,"_eventLoopStartTime"],[309,32,394,4],[309,35,394,31],[309,40,394,36,"_lastFlush"],[309,50,394,4],[311,0,395,4],[311,12,395,8,"__DEV__"],[311,19,395,15],[311,23,395,19],[311,28,395,24,"__spy"],[311,33,395,4],[311,35,395,31],[312,0,396,6,"Systrace"],[312,10,396,6,"Systrace"],[312,18,396,14],[312,19,396,15,"beginEvent"],[312,29,396,6],[312,30,396,29,"module"],[312,36,396,6],[312,45,396,39,"method"],[312,51,396,6],[312,60,396,49,"stringifySafe"],[312,73,396,62],[312,74,396,63,"args"],[312,78,396,62],[312,79,396,6],[313,0,397,5],[313,9,395,4],[313,15,397,11],[314,0,398,6,"Systrace"],[314,10,398,6,"Systrace"],[314,18,398,14],[314,19,398,15,"beginEvent"],[314,29,398,6],[314,30,398,29,"module"],[314,36,398,6],[314,45,398,39,"method"],[314,51,398,6],[315,0,399,5],[317,0,400,4],[317,12,400,8],[317,17,400,13,"__spy"],[317,22,400,4],[317,24,400,20],[318,0,401,6],[318,15,401,11,"__spy"],[318,20,401,6],[318,21,401,17],[319,0,401,18,"type"],[319,12,401,18,"type"],[319,16,401,22],[319,18,401,24,"TO_JS"],[319,23,401,17],[320,0,401,31,"module"],[320,12,401,31,"module"],[320,18,401,37],[320,20,401,31,"module"],[320,26,401,17],[321,0,401,39,"method"],[321,12,401,39,"method"],[321,18,401,45],[321,20,401,39,"method"],[321,26,401,17],[322,0,401,47,"args"],[322,12,401,47,"args"],[322,16,401,51],[322,18,401,47,"args"],[323,0,401,17],[323,11,401,6],[324,0,402,5],[326,0,403,4],[326,12,403,10,"moduleMethods"],[326,25,403,23],[326,28,403,26],[326,33,403,31,"getCallableModule"],[326,50,403,26],[326,51,403,49,"module"],[326,57,403,26],[326,58,403,4],[327,0,404,4,"invariant"],[327,8,404,4,"invariant"],[327,17,404,13],[327,18,405,6],[327,19,405,7],[327,20,405,8,"moduleMethods"],[327,33,404,13],[327,35,406,6],[327,95,404,13],[327,97,407,6,"module"],[327,103,404,13],[327,105,408,6,"method"],[327,111,404,13],[327,112,404,4],[328,0,410,4,"invariant"],[328,8,410,4,"invariant"],[328,17,410,13],[328,18,411,6],[328,19,411,7],[328,20,411,8,"moduleMethods"],[328,33,411,21],[328,34,411,22,"method"],[328,40,411,21],[328,41,410,13],[328,43,412,6],[328,82,410,13],[328,84,413,6,"method"],[328,90,410,13],[328,92,414,6,"module"],[328,98,410,13],[328,99,410,4],[329,0,416,4,"moduleMethods"],[329,8,416,4,"moduleMethods"],[329,21,416,17],[329,22,416,18,"method"],[329,28,416,17],[329,29,416,4],[329,30,416,26,"apply"],[329,35,416,4],[329,36,416,32,"moduleMethods"],[329,49,416,4],[329,51,416,47,"args"],[329,55,416,4],[330,0,417,4,"Systrace"],[330,8,417,4,"Systrace"],[330,16,417,12],[330,17,417,13,"endEvent"],[330,25,417,4],[331,0,418,3],[334,13,420,2],[334,39,420,19,"cbID"],[334,43,420,2],[334,45,420,33,"args"],[334,49,420,2],[334,51,420,46],[335,0,421,4],[335,13,421,9,"_lastFlush"],[335,23,421,4],[335,26,421,22,"Date"],[335,30,421,26],[335,31,421,27,"now"],[335,34,421,22],[335,36,421,4],[336,0,422,4],[336,13,422,9,"_eventLoopStartTime"],[336,32,422,4],[336,35,422,31],[336,40,422,36,"_lastFlush"],[336,50,422,4],[337,0,426,4],[337,12,426,10,"callID"],[337,18,426,16],[337,21,426,19,"cbID"],[337,25,426,23],[337,30,426,28],[337,31,426,4],[338,0,428,4],[338,12,428,10,"isSuccess"],[338,21,428,19],[338,24,428,22,"cbID"],[338,28,428,26],[338,31,428,29],[338,32,428,4],[339,0,429,4],[339,12,429,10,"callback"],[339,20,429,18],[339,23,429,21,"isSuccess"],[339,32,429,30],[339,35,430,8],[339,40,430,13,"_successCallbacks"],[339,57,430,8],[339,58,430,31,"get"],[339,61,430,8],[339,62,430,35,"callID"],[339,68,430,8],[339,69,429,30],[339,72,431,8],[339,77,431,13,"_failureCallbacks"],[339,94,431,8],[339,95,431,31,"get"],[339,98,431,8],[339,99,431,35,"callID"],[339,105,431,8],[339,106,429,4],[341,0,433,4],[341,12,433,8,"__DEV__"],[341,19,433,4],[341,21,433,17],[342,0,434,6],[342,14,434,12,"debug"],[342,19,434,17],[342,22,434,20],[342,27,434,25,"_debugInfo"],[342,37,434,20],[342,38,434,36,"callID"],[342,44,434,20],[342,45,434,6],[344,0,435,6],[344,14,435,12,"module"],[344,21,435,18],[344,24,435,21,"debug"],[344,29,435,26],[344,33,435,30],[344,38,435,35,"_remoteModuleTable"],[344,56,435,30],[344,57,435,54,"debug"],[344,62,435,59],[344,63,435,60],[344,64,435,59],[344,65,435,30],[344,66,435,6],[346,0,436,6],[346,14,436,12,"method"],[346,20,436,18],[346,23,436,21,"debug"],[346,28,436,26],[346,32,436,30],[346,37,436,35,"_remoteMethodTable"],[346,55,436,30],[346,56,436,54,"debug"],[346,61,436,59],[346,62,436,60],[346,63,436,59],[346,64,436,30],[346,66,436,64,"debug"],[346,71,436,69],[346,72,436,70],[346,73,436,69],[346,74,436,30],[346,75,436,6],[347,0,437,6,"invariant"],[347,10,437,6,"invariant"],[347,19,437,15],[347,20,438,8,"callback"],[347,28,437,15],[347,30,439,8],[347,63,439,39,"cbID"],[347,67,439,8],[347,87,439,58,"callID"],[347,93,439,8],[347,107,440,11,"method"],[347,113,440,17],[347,122,441,18,"module"],[347,129,440,17],[347,138,441,28,"method"],[347,144,440,17],[347,212,442,24,"module"],[347,219,442,30],[347,223,442,34],[347,234,440,17],[347,235,439,8],[347,254,443,22,"stringifySafe"],[347,267,443,35],[347,268,443,36,"args"],[347,272,443,35],[347,273,439,8],[347,280,437,15],[347,281,437,6],[348,0,445,6],[348,14,445,12,"profileName"],[348,25,445,23],[348,28,445,26,"debug"],[348,33,445,31],[348,36,446,10],[348,55,446,29,"module"],[348,62,446,10],[348,65,446,38],[348,68,446,10],[348,71,446,44,"method"],[348,77,446,10],[348,80,446,53],[348,83,445,31],[348,86,447,10,"cbID"],[348,90,445,6],[350,0,448,6],[350,14,448,10,"callback"],[350,22,448,18],[350,26,448,22],[350,31,448,27,"__spy"],[350,36,448,6],[350,38,448,34],[351,0,449,8],[351,17,449,13,"__spy"],[351,22,449,8],[351,23,449,19],[352,0,449,20,"type"],[352,14,449,20,"type"],[352,18,449,24],[352,20,449,26,"TO_JS"],[352,25,449,19],[353,0,449,33,"module"],[353,14,449,33,"module"],[353,20,449,39],[353,22,449,41],[353,26,449,19],[354,0,449,47,"method"],[354,14,449,47,"method"],[354,20,449,53],[354,22,449,55,"profileName"],[354,33,449,19],[355,0,449,68,"args"],[355,14,449,68,"args"],[355,18,449,72],[355,20,449,68,"args"],[356,0,449,19],[356,13,449,8],[357,0,450,7],[359,0,451,6,"Systrace"],[359,10,451,6,"Systrace"],[359,18,451,14],[359,19,451,15,"beginEvent"],[359,29,451,6],[359,63,452,39,"profileName"],[359,74,451,6],[359,84,452,55,"stringifySafe"],[359,97,452,68],[359,98,452,69,"args"],[359,102,452,68],[359,103,451,6],[360,0,454,5],[362,0,456,4],[362,12,456,8],[362,13,456,9,"callback"],[362,21,456,4],[362,23,456,19],[363,0,457,6],[364,0,458,5],[366,0,460,4],[366,13,460,9,"_successCallbacks"],[366,30,460,4],[366,31,460,27,"delete"],[366,37,460,4],[366,38,460,34,"callID"],[366,44,460,4],[368,0,461,4],[368,13,461,9,"_failureCallbacks"],[368,30,461,4],[368,31,461,27,"delete"],[368,37,461,4],[368,38,461,34,"callID"],[368,44,461,4],[370,0,462,4,"callback"],[370,8,462,4,"callback"],[370,16,462,12],[370,22,462,4],[370,50,462,16,"args"],[370,54,462,4],[372,0,464,4],[372,12,464,8,"__DEV__"],[372,19,464,4],[372,21,464,17],[373,0,465,6,"Systrace"],[373,10,465,6,"Systrace"],[373,18,465,14],[373,19,465,15,"endEvent"],[373,27,465,6],[374,0,466,5],[375,0,467,3],[378,13,87,2],[378,26,87,13,"spyOrToggle"],[378,37,87,2],[378,39,87,63],[379,0,88,4],[379,12,88,8,"spyOrToggle"],[379,23,88,19],[379,28,88,24],[379,32,88,4],[379,34,88,30],[380,0,89,6,"MessageQueue"],[380,10,89,6,"MessageQueue"],[380,22,89,18],[380,23,89,19,"prototype"],[380,32,89,6],[380,33,89,29,"__spy"],[380,38,89,6],[380,41,89,37],[380,51,89,37,"info"],[380,55,89,41],[380,57,89,45],[381,0,90,8,"console"],[381,12,90,8,"console"],[381,19,90,15],[381,20,90,16,"log"],[381,23,90,8],[381,24,91,10],[381,25,91,13,"info"],[381,29,91,17],[381,30,91,18,"type"],[381,34,91,13],[381,39,91,27,"TO_JS"],[381,44,91,13],[381,47,91,35],[381,54,91,13],[381,57,91,45],[381,64,91,10],[381,83,92,15,"info"],[381,87,92,19],[381,88,92,20,"module"],[381,94,92,15],[381,97,92,29,"info"],[381,101,92,33],[381,102,92,34,"module"],[381,108,92,29],[381,111,92,43],[381,114,92,15],[381,117,92,49],[381,119,91,10],[381,123,92,54,"info"],[381,127,92,58],[381,128,92,59,"method"],[381,134,91,10],[381,145,93,16,"JSON"],[381,149,93,20],[381,150,93,21,"stringify"],[381,159,93,16],[381,160,93,31,"info"],[381,164,93,35],[381,165,93,36,"args"],[381,169,93,16],[381,170,91,10],[381,177,90,8],[382,0,95,7],[382,11,89,6],[383,0,96,5],[383,9,88,4],[383,15,96,11],[383,19,96,15,"spyOrToggle"],[383,30,96,26],[383,35,96,31],[383,40,96,11],[383,42,96,38],[384,0,97,6,"MessageQueue"],[384,10,97,6,"MessageQueue"],[384,22,97,18],[384,23,97,19,"prototype"],[384,32,97,6],[384,33,97,29,"__spy"],[384,38,97,6],[384,41,97,37],[384,45,97,6],[385,0,98,5],[385,9,96,11],[385,15,98,11],[386,0,99,6,"MessageQueue"],[386,10,99,6,"MessageQueue"],[386,22,99,18],[386,23,99,19,"prototype"],[386,32,99,6],[386,33,99,29,"__spy"],[386,38,99,6],[386,41,99,37,"spyOrToggle"],[386,52,99,6],[387,0,100,5],[388,0,101,3],[394,0,470,0,"module"],[394,2,470,0,"module"],[394,8,470,6],[394,9,470,7,"exports"],[394,16,470,0],[394,19,470,17,"MessageQueue"],[394,31,470,0]],"functionMap":{"names":["<global>","MessageQueue","constructor","spy","prototype.__spy","callFunctionReturnFlushedQueue","__guard$argument_0","callFunctionReturnResultAndFlushedQueue","invokeCallbackAndReturnFlushedQueue","flushedQueue","getEventLoopRunningTime","registerCallableModule","_lazyCallableModules.name","registerLazyCallableModule","getCallableModule","callNativeSyncHook","processCallbacks","_successCallbacks.forEach$argument_0","enqueueNativeCall","isValidArgument","replacer","createDebugLookup","setImmediatesCallback","__guard","__shouldPauseOnThrow","__callImmediates","__callFunction","__invokeCallback"],"mappings":"AAA;ACyC;ECgB;GDuB;EEM;qCCE;ODM;GFM;EIE;iBCK;KDE;GJG;EMG;YNI;EOE;iBFI;KEE;GPG;EQE;iBHC;KGE;GRK;ESE;GTE;EUE;sCCC,YD;GVC;EYE;sCDG;KCM;GZC;EaE;GbG;EcE;GdkB;EeE;yCCe;WDK;Gf6B;EiBE;8BCiB;ODyB;uBEK;OFS;GjBwC;EoBE;GpBS;EqBK;GrBE;EsBM;GtBU;EuBO;GvBM;EwBE;GxBM;EyBE;GzB0B;E0BE;G1B+C;CDC"}},"type":"js/module"}]}