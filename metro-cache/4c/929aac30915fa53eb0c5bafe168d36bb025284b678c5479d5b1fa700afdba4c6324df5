{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"../Utilities/infoLog","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":16},"end":{"line":13,"column":47}}]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var infoLog = _$$_REQUIRE(_dependencyMap[3], \"../Utilities/infoLog\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var DEBUG = false;\n\n  var TaskQueue = function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n\n      _classCallCheck(this, TaskQueue);\n\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n\n    _createClass(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        var _this = this;\n\n        tasks.forEach(function (task) {\n          return _this.enqueue(task);\n        });\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(function (queue) {\n          return _objectSpread(_objectSpread({}, queue), {}, {\n            tasks: queue.tasks.filter(function (task) {\n              return tasksToCancel.indexOf(task) === -1;\n            })\n          });\n        }).filter(function (queue, idx) {\n          return queue.tasks.length > 0 || idx === 0;\n        });\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n\n        if (queue.length) {\n          var task = queue.shift();\n\n          try {\n            if (task.gen) {\n              DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n\n              this._genPromise(task);\n            } else if (task.run) {\n              DEBUG && infoLog('TaskQueue: run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('TaskQueue: run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n\n          DEBUG && infoLog('TaskQueue: popped queue: ', {\n            stackIdx: stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        var _this2 = this;\n\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n\n        var stackIdx = this._queueStack.length - 1;\n        DEBUG && infoLog('TaskQueue: push new queue: ', {\n          stackIdx: stackIdx\n        });\n        DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n        task.gen().then(function () {\n          DEBUG && infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx: stackIdx,\n            queueStackSize: _this2._queueStack.length\n          });\n          _this2._queueStack[stackIdx].popable = true;\n          _this2.hasTasksToProcess() && _this2._onMoreTasks();\n        }).catch(function (ex) {\n          ex.message = \"TaskQueue: Error resolving Promise in task \" + task.name + \": \" + ex.message;\n          throw ex;\n        }).done();\n      }\n    }]);\n\n    return TaskQueue;\n  }();\n\n  module.exports = TaskQueue;\n});","lineCount":143,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"infoLog"],[14,13,13,13],[14,16,13,16,"require"],[14,27,13,23],[14,70,13,0],[16,0,14,0],[16,6,14,6,"invariant"],[16,15,14,15],[16,18,14,18,"require"],[16,29,14,25],[16,61,14,0],[18,0,28,0],[18,6,28,6,"DEBUG"],[18,11,28,18],[18,14,28,21],[18,19,28,0],[20,6,46,6,"TaskQueue"],[20,15],[21,0,54,2],[21,29,54,61],[22,0,54,61],[22,10,54,15,"onMoreTasks"],[22,21,54,61],[22,29,54,15,"onMoreTasks"],[22,40,54,61],[24,0,54,61],[26,0,55,4],[26,11,55,9,"_onMoreTasks"],[26,23,55,4],[26,26,55,24,"onMoreTasks"],[26,37,55,4],[27,0,56,4],[27,11,56,9,"_queueStack"],[27,22,56,4],[27,25,56,23],[27,26,56,24],[28,0,56,25,"tasks"],[28,8,56,25,"tasks"],[28,13,56,30],[28,15,56,32],[28,17,56,24],[29,0,56,36,"popable"],[29,8,56,36,"popable"],[29,15,56,43],[29,17,56,45],[30,0,56,24],[30,7,56,23],[30,8,56,4],[31,0,57,3],[35,13,64,2],[35,30,64,10,"task"],[35,34,64,2],[35,36,64,28],[36,0,65,4],[36,13,65,9,"_getCurrentQueue"],[36,29,65,4],[36,32,65,28,"push"],[36,36,65,4],[36,37,65,33,"task"],[36,41,65,4],[37,0,66,3],[40,13,68,2],[40,35,68,15,"tasks"],[40,40,68,2],[40,42,68,41],[41,0,68,41],[43,0,69,4,"tasks"],[43,8,69,4,"tasks"],[43,13,69,9],[43,14,69,10,"forEach"],[43,21,69,4],[43,22,69,18],[43,32,69,18,"task"],[43,36,69,22],[44,0,69,22],[44,17,69,26],[44,22,69,30],[44,23,69,31,"enqueue"],[44,30,69,26],[44,31,69,39,"task"],[44,35,69,26],[44,36,69,22],[45,0,69,22],[45,9,69,4],[46,0,70,3],[49,13,72,2],[49,34,72,14,"tasksToCancel"],[49,47,72,2],[49,49,72,48],[50,0,74,4],[50,13,74,9,"_queueStack"],[50,24,74,4],[50,27,74,23],[50,32,74,28,"_queueStack"],[50,43,74,23],[50,44,75,7,"map"],[50,47,74,23],[50,48,75,11],[50,58,75,11,"queue"],[50,63,75,16],[51,0,75,16],[51,49,76,11,"queue"],[51,54,75,16],[52,0,77,8,"tasks"],[52,12,77,8,"tasks"],[52,17,77,13],[52,19,77,15,"queue"],[52,24,77,20],[52,25,77,21,"tasks"],[52,30,77,15],[52,31,77,27,"filter"],[52,37,77,15],[52,38,77,34],[52,48,77,34,"task"],[52,52,77,38],[53,0,77,38],[53,21,77,42,"tasksToCancel"],[53,34,77,55],[53,35,77,56,"indexOf"],[53,42,77,42],[53,43,77,64,"task"],[53,47,77,42],[53,53,77,74],[53,54,77,75],[53,55,77,38],[54,0,77,38],[54,13,77,15],[55,0,75,16],[56,0,75,16],[56,9,74,23],[56,11,79,7,"filter"],[56,17,74,23],[56,18,79,14],[56,28,79,15,"queue"],[56,33,79,14],[56,35,79,22,"idx"],[56,38,79,14],[57,0,79,14],[57,17,79,30,"queue"],[57,22,79,35],[57,23,79,36,"tasks"],[57,28,79,30],[57,29,79,42,"length"],[57,35,79,30],[57,38,79,51],[57,39,79,30],[57,43,79,56,"idx"],[57,46,79,59],[57,51,79,64],[57,52,79,14],[58,0,79,14],[58,9,74,23],[58,10,74,4],[59,0,80,3],[62,13,92,2],[62,42,92,31],[63,0,93,4],[63,15,93,11],[63,20,93,16,"_getCurrentQueue"],[63,36,93,11],[63,39,93,35,"length"],[63,45,93,11],[63,48,93,44],[63,49,93,4],[64,0,94,3],[67,13,99,2],[67,36,99,22],[68,0,100,4],[68,12,100,10,"queue"],[68,17,100,15],[68,20,100,18],[68,25,100,23,"_getCurrentQueue"],[68,41,100,18],[68,43,100,4],[70,0,101,4],[70,12,101,8,"queue"],[70,17,101,13],[70,18,101,14,"length"],[70,24,101,4],[70,26,101,22],[71,0,102,6],[71,14,102,12,"task"],[71,18,102,16],[71,21,102,19,"queue"],[71,26,102,24],[71,27,102,25,"shift"],[71,32,102,19],[71,34,102,6],[73,0,103,6],[73,14,103,10],[74,0,104,8],[74,16,104,12,"task"],[74,20,104,16],[74,21,104,17,"gen"],[74,24,104,8],[74,26,104,22],[75,0,105,10,"DEBUG"],[75,14,105,10,"DEBUG"],[75,19,105,15],[75,23,105,19,"infoLog"],[75,30,105,26],[75,31,105,27],[75,67,105,63,"task"],[75,71,105,67],[75,72,105,68,"name"],[75,76,105,26],[75,77,105,10],[77,0,106,10],[77,19,106,15,"_genPromise"],[77,30,106,10],[77,31,106,28,"task"],[77,35,106,10],[78,0,107,9],[78,13,104,8],[78,19,107,15],[78,23,107,19,"task"],[78,27,107,23],[78,28,107,24,"run"],[78,31,107,15],[78,33,107,29],[79,0,108,10,"DEBUG"],[79,14,108,10,"DEBUG"],[79,19,108,15],[79,23,108,19,"infoLog"],[79,30,108,26],[79,31,108,27],[79,56,108,52,"task"],[79,60,108,56],[79,61,108,57,"name"],[79,65,108,26],[79,66,108,10],[80,0,109,10,"task"],[80,14,109,10,"task"],[80,18,109,14],[80,19,109,15,"run"],[80,22,109,10],[81,0,110,9],[81,13,107,15],[81,19,110,15],[82,0,111,10,"invariant"],[82,14,111,10,"invariant"],[82,23,111,19],[82,24,112,12],[82,31,112,19,"task"],[82,35,112,12],[82,40,112,28],[82,50,111,19],[82,52,113,12],[82,114,114,14,"JSON"],[82,118,114,18],[82,119,114,19,"stringify"],[82,128,114,14],[82,129,114,29,"task"],[82,133,114,14],[82,135,114,35],[82,139,114,14],[82,141,114,41],[82,142,114,14],[82,143,111,19],[82,144,111,10],[83,0,116,10,"DEBUG"],[83,14,116,10,"DEBUG"],[83,19,116,15],[83,23,116,19,"infoLog"],[83,30,116,26],[83,31,116,27],[83,62,116,26],[83,63,116,10],[84,0,117,10,"task"],[84,14,117,10,"task"],[84,18,117,14],[85,0,118,9],[86,0,119,7],[86,11,103,6],[86,12,119,8],[86,19,119,15,"e"],[86,20,119,8],[86,22,119,18],[87,0,120,8,"e"],[87,12,120,8,"e"],[87,13,120,9],[87,14,120,10,"message"],[87,21,120,8],[87,24,121,10],[87,57,121,43,"task"],[87,61,121,47],[87,62,121,48,"name"],[87,66,121,43],[87,70,121,56],[87,72,121,10],[87,76,121,62],[87,80,121,10],[87,83,121,69,"e"],[87,84,121,70],[87,85,121,71,"message"],[87,92,120,8],[88,0,122,8],[88,18,122,14,"e"],[88,19,122,8],[89,0,123,7],[90,0,124,5],[91,0,125,3],[94,13,134,2],[94,41,134,34],[95,0,135,4],[95,12,135,10,"stackIdx"],[95,20,135,18],[95,23,135,21],[95,28,135,26,"_queueStack"],[95,39,135,21],[95,40,135,38,"length"],[95,46,135,21],[95,49,135,47],[95,50,135,4],[96,0,136,4],[96,12,136,10,"queue"],[96,17,136,15],[96,20,136,18],[96,25,136,23,"_queueStack"],[96,36,136,18],[96,37,136,35,"stackIdx"],[96,45,136,18],[96,46,136,4],[98,0,137,4],[98,12,138,6,"queue"],[98,17,138,11],[98,18,138,12,"popable"],[98,25,138,6],[98,29,139,6,"queue"],[98,34,139,11],[98,35,139,12,"tasks"],[98,40,139,6],[98,41,139,18,"length"],[98,47,139,6],[98,52,139,29],[98,53,138,6],[98,57,140,6],[98,62,140,11,"_queueStack"],[98,73,140,6],[98,74,140,23,"length"],[98,80,140,6],[98,83,140,32],[98,84,137,4],[98,86,141,6],[99,0,142,6],[99,15,142,11,"_queueStack"],[99,26,142,6],[99,27,142,23,"pop"],[99,30,142,6],[101,0,143,6,"DEBUG"],[101,10,143,6,"DEBUG"],[101,15,143,11],[101,19,144,8,"infoLog"],[101,26,144,15],[101,27,144,16],[101,54,144,15],[101,56,144,45],[102,0,145,10,"stackIdx"],[102,12,145,10,"stackIdx"],[102,20,145,18],[102,22,145,10,"stackIdx"],[102,30,144,45],[103,0,146,10,"queueStackSize"],[103,12,146,10,"queueStackSize"],[103,26,146,24],[103,28,146,26],[103,33,146,31,"_queueStack"],[103,44,146,26],[103,45,146,43,"length"],[104,0,144,45],[104,11,144,15],[104,12,143,6],[105,0,148,6],[105,17,148,13],[105,22,148,18,"_getCurrentQueue"],[105,38,148,13],[105,40,148,6],[106,0,149,5],[106,9,137,4],[106,15,149,11],[107,0,150,6],[107,17,150,13,"queue"],[107,22,150,18],[107,23,150,19,"tasks"],[107,28,150,6],[108,0,151,5],[109,0,152,3],[112,13,154,2],[112,34,154,14,"task"],[112,38,154,2],[112,40,154,33],[113,0,154,33],[115,0,159,4],[115,13,159,9,"_queueStack"],[115,24,159,4],[115,25,159,21,"push"],[115,29,159,4],[115,30,159,26],[116,0,159,27,"tasks"],[116,10,159,27,"tasks"],[116,15,159,32],[116,17,159,34],[116,19,159,26],[117,0,159,38,"popable"],[117,10,159,38,"popable"],[117,17,159,45],[117,19,159,47],[118,0,159,26],[118,9,159,4],[120,0,160,4],[120,12,160,10,"stackIdx"],[120,20,160,18],[120,23,160,21],[120,28,160,26,"_queueStack"],[120,39,160,21],[120,40,160,38,"length"],[120,46,160,21],[120,49,160,47],[120,50,160,4],[121,0,161,4,"DEBUG"],[121,8,161,4,"DEBUG"],[121,13,161,9],[121,17,161,13,"infoLog"],[121,24,161,20],[121,25,161,21],[121,54,161,20],[121,56,161,52],[122,0,161,53,"stackIdx"],[122,10,161,53,"stackIdx"],[122,18,161,61],[122,20,161,53,"stackIdx"],[123,0,161,52],[123,9,161,20],[123,10,161,4],[124,0,162,4,"DEBUG"],[124,8,162,4,"DEBUG"],[124,13,162,9],[124,17,162,13,"infoLog"],[124,24,162,20],[124,25,162,21],[124,55,162,51,"task"],[124,59,162,55],[124,60,162,56,"name"],[124,64,162,20],[124,65,162,4],[125,0,163,4,"task"],[125,8,163,4,"task"],[125,12,163,8],[125,13,164,7,"gen"],[125,16,163,4],[125,19,165,7,"then"],[125,23,163,4],[125,24,165,12],[125,36,165,18],[126,0,166,8,"DEBUG"],[126,10,166,8,"DEBUG"],[126,15,166,13],[126,19,167,10,"infoLog"],[126,26,167,17],[126,27,167,18],[126,63,167,54,"task"],[126,67,167,58],[126,68,167,59,"name"],[126,72,167,17],[126,74,167,65],[127,0,168,12,"stackIdx"],[127,12,168,12,"stackIdx"],[127,20,168,20],[127,22,168,12,"stackIdx"],[127,30,167,65],[128,0,169,12,"queueStackSize"],[128,12,169,12,"queueStackSize"],[128,26,169,26],[128,28,169,28],[128,34,169,32],[128,35,169,33,"_queueStack"],[128,46,169,28],[128,47,169,45,"length"],[129,0,167,65],[129,11,167,17],[129,12,166,8],[130,0,171,8],[130,10,171,8],[130,16,171,12],[130,17,171,13,"_queueStack"],[130,28,171,8],[130,29,171,25,"stackIdx"],[130,37,171,8],[130,39,171,35,"popable"],[130,46,171,8],[130,49,171,45],[130,53,171,8],[131,0,172,8],[131,10,172,8],[131,16,172,12],[131,17,172,13,"hasTasksToProcess"],[131,34,172,8],[131,40,172,36],[131,46,172,40],[131,47,172,41,"_onMoreTasks"],[131,59,172,36],[131,61,172,8],[132,0,173,7],[132,9,163,4],[132,11,174,7,"catch"],[132,16,163,4],[132,17,174,13],[132,27,174,13,"ex"],[132,29,174,15],[132,31,174,19],[133,0,175,8,"ex"],[133,10,175,8,"ex"],[133,12,175,10],[133,13,175,11,"message"],[133,20,175,8],[133,71,176,10,"task"],[133,75,176,14],[133,76,176,15,"name"],[133,80,175,8],[133,90,177,13,"ex"],[133,92,177,15],[133,93,177,16,"message"],[133,100,175,8],[134,0,178,8],[134,16,178,14,"ex"],[134,18,178,8],[135,0,179,7],[135,9,163,4],[135,11,180,7,"done"],[135,15,163,4],[136,0,181,3],[142,0,184,0,"module"],[142,2,184,0,"module"],[142,8,184,6],[142,9,184,7,"exports"],[142,16,184,0],[142,19,184,17,"TaskQueue"],[142,28,184,0]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0"],"mappings":"AAA;AC6C;ECQ;GDG;EEO;GFE;EGE;kBCC,0BD;GHC;EKE;WCG;kCCE,0CD;QDC;cGC,mDH;GLC;ESY;GTE;EUK;GV0B;EWS;GXkB;EYE;YCW;ODQ;aEC;OFK;GZE;CDC"}},"type":"js/module"}]}