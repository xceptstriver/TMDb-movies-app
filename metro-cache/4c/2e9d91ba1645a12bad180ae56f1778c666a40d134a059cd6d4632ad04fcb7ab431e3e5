{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"query-string","data":{"isAsync":false,"locs":[]}},{"name":"./checkLegacyPathConfig","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"query-string\"));\n\n  var _checkLegacyPathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./checkLegacyPathConfig\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n\n    return route;\n  };\n\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n\n    var _checkLegacyPathConfi = (0, _checkLegacyPathConfig.default)(options),\n        _checkLegacyPathConfi2 = (0, _slicedToArray2.default)(_checkLegacyPathConfi, 2),\n        legacy = _checkLegacyPathConfi2[0],\n        compatOptions = _checkLegacyPathConfi2[1];\n\n    var configs = compatOptions ? createNormalizedConfigs(legacy, compatOptions.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern = void 0;\n      var focusedParams = void 0;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n      var nestedRouteNames = [];\n      var hasNext = true;\n\n      while (route.name in currentOptions && hasNext) {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n\n        if (route.params) {\n          (function () {\n            var _currentOptions$route;\n\n            var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n            var currentParams = fromEntries(Object.entries(route.params).map(function (_ref) {\n              var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n                  key = _ref2[0],\n                  value = _ref2[1];\n\n              return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n            }));\n\n            if (pattern) {\n              (0, _extends2.default)(allParams, currentParams);\n            }\n\n            if (focusedRoute === route) {\n              var _pattern;\n\n              focusedParams = _objectSpread({}, currentParams);\n              (_pattern = pattern) == null ? void 0 : _pattern.split('/').filter(function (p) {\n                return p.startsWith(':');\n              }).forEach(function (p) {\n                var name = getParamName(p);\n\n                if (focusedParams) {\n                  delete focusedParams[name];\n                }\n              });\n            }\n          })();\n        }\n\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            hasNext = false;\n          }\n        }\n      }\n\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n\n          if (p === '*') {\n            if (legacy) {\n              throw new Error(\"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/configuring-links/#updating-config\");\n            }\n\n            return route.name;\n          }\n\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n\n            if (_value === undefined && p.endsWith('?')) {\n              return '';\n            }\n\n            return encodeURIComponent(_value);\n          }\n\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            delete focusedParams[param];\n          }\n        }\n\n        var query = queryString.stringify(focusedParams);\n\n        if (query) {\n          path += \"?\" + query;\n        }\n      }\n\n      current = route.state;\n    };\n\n    while (current) {\n      _loop();\n    }\n\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n\n  var fromEntries = function fromEntries(entries) {\n    return entries.reduce(function (acc, _ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          k = _ref4[0],\n          v = _ref4[1];\n\n      if (acc.hasOwnProperty(k)) {\n        throw new Error(\"A value for key '\" + k + \"' already exists in the object.\");\n      }\n\n      acc[k] = v;\n      return acc;\n    }, {});\n  };\n\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n\n  var joinPaths = function joinPaths() {\n    var _ref5;\n\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return (_ref5 = []).concat.apply(_ref5, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n\n  var createConfigItem = function createConfigItem(legacy, config, parentPattern) {\n    var _pattern3;\n\n    if (typeof config === 'string') {\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n\n      return {\n        pattern: _pattern2\n      };\n    }\n\n    var pattern;\n\n    if (legacy) {\n      pattern = config.exact !== true && parentPattern && config.path ? joinPaths(parentPattern, config.path) : config.path;\n    } else {\n      if (config.exact && config.path === undefined) {\n        throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n      }\n\n      pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    }\n\n    var screens = config.screens ? createNormalizedConfigs(legacy, config.screens, pattern) : undefined;\n    return {\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n\n  var createNormalizedConfigs = function createNormalizedConfigs(legacy, options, pattern) {\n    return fromEntries(Object.entries(options).map(function (_ref6) {\n      var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n          name = _ref7[0],\n          c = _ref7[1];\n\n      var result = createConfigItem(legacy, c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":254,"map":[[17,0,1,0],[19,0,7,0],[29,0,22,0],[29,6,22,6,"getActiveRoute"],[29,20,22,20],[29,23,22,23],[29,32,22,6,"getActiveRoute"],[29,46,22,23],[29,47,22,24,"state"],[29,52,22,23],[29,54,22,76],[30,0,23,2],[30,8,23,8,"route"],[30,13,23,13],[30,16,24,4],[30,23,24,11,"state"],[30,28,24,16],[30,29,24,17,"index"],[30,34,24,4],[30,39,24,27],[30,47,24,4],[30,50,25,8,"state"],[30,55,25,13],[30,56,25,14,"routes"],[30,62,25,8],[30,63,25,21,"state"],[30,68,25,26],[30,69,25,27,"index"],[30,74,25,8],[30,75,24,4],[30,78,26,8,"state"],[30,83,26,13],[30,84,26,14,"routes"],[30,90,26,8],[30,91,26,21,"state"],[30,96,26,26],[30,97,26,27,"routes"],[30,103,26,21],[30,104,26,34,"length"],[30,110,26,21],[30,113,26,43],[30,114,26,8],[30,115,23,2],[32,0,28,2],[32,8,28,6,"route"],[32,13,28,11],[32,14,28,12,"state"],[32,19,28,2],[32,21,28,19],[33,0,29,4],[33,13,29,11,"getActiveRoute"],[33,27,29,25],[33,28,29,26,"route"],[33,33,29,31],[33,34,29,32,"state"],[33,39,29,25],[33,40,29,4],[34,0,30,3],[36,0,32,2],[36,11,32,9,"route"],[36,16,32,2],[37,0,33,1],[37,3,22,0],[39,0,64,15],[39,11,64,24,"getPathFromState"],[39,27,64,15],[39,28,65,2,"state"],[39,33,64,15],[39,35,66,2,"options"],[39,42,64,15],[39,44,67,10],[40,0,68,2],[40,8,68,6,"state"],[40,13,68,11],[40,17,68,15],[40,21,68,2],[40,23,68,21],[41,0,69,4],[41,12,69,10,"Error"],[41,17,69,15],[41,18,70,6],[41,97,69,15],[41,98,69,4],[42,0,72,3],[44,0,74,2],[44,32,74,34],[44,68,74,56,"options"],[44,75,74,34],[44,76,74,2],[45,0,74,2],[46,0,74,2],[46,8,74,9,"legacy"],[46,14,74,2],[47,0,74,2],[47,8,74,17,"compatOptions"],[47,21,74,2],[49,0,77,2],[49,8,77,8,"configs"],[49,15,77,43],[49,18,77,46,"compatOptions"],[49,31,77,59],[49,34,78,6,"createNormalizedConfigs"],[49,57,78,29],[49,58,78,30,"legacy"],[49,64,78,29],[49,66,78,38,"compatOptions"],[49,79,78,51],[49,80,78,52,"screens"],[49,87,78,29],[49,88,77,59],[49,91,79,6],[49,93,77,2],[50,0,81,2],[50,8,81,6,"path"],[50,12,81,10],[50,15,81,13],[50,18,81,2],[51,0,82,2],[51,8,82,6,"current"],[51,15,82,32],[51,18,82,35,"state"],[51,23,82,2],[52,0,84,2],[52,8,84,8,"allParams"],[52,17,84,38],[52,20,84,41],[52,22,84,2],[54,0,67,10],[55,0,87,4],[55,10,87,8,"index"],[55,15,87,13],[55,18,87,16],[55,25,87,23,"current"],[55,32,87,30],[55,33,87,31,"index"],[55,38,87,16],[55,43,87,41],[55,51,87,16],[55,54,87,52,"current"],[55,61,87,59],[55,62,87,60,"index"],[55,67,87,16],[55,70,87,68],[55,71,87,4],[56,0,88,4],[56,10,88,8,"route"],[56,15,88,13],[56,18,88,16,"current"],[56,25,88,23],[56,26,88,24,"routes"],[56,32,88,16],[56,33,88,31,"index"],[56,38,88,16],[56,39,88,4],[57,0,92,4],[57,10,92,8,"pattern"],[57,17,92,35],[57,26,92,4],[58,0,94,4],[58,10,94,8,"focusedParams"],[58,23,94,54],[58,32,94,4],[59,0,95,4],[59,10,95,8,"focusedRoute"],[59,22,95,20],[59,25,95,23,"getActiveRoute"],[59,39,95,37],[59,40,95,38,"state"],[59,45,95,37],[59,46,95,4],[60,0,96,4],[60,10,96,8,"currentOptions"],[60,24,96,22],[60,27,96,25,"configs"],[60,34,96,4],[61,0,99,4],[61,10,99,8,"nestedRouteNames"],[61,26,99,24],[61,29,99,27],[61,31,99,4],[62,0,101,4],[62,10,101,8,"hasNext"],[62,17,101,15],[62,20,101,18],[62,24,101,4],[64,0,103,4],[64,13,103,11,"route"],[64,18,103,16],[64,19,103,17,"name"],[64,23,103,11],[64,27,103,25,"currentOptions"],[64,41,103,11],[64,45,103,43,"hasNext"],[64,52,103,4],[64,54,103,52],[65,0,104,6,"pattern"],[65,8,104,6,"pattern"],[65,15,104,13],[65,18,104,16,"currentOptions"],[65,32,104,30],[65,33,104,31,"route"],[65,38,104,36],[65,39,104,37,"name"],[65,43,104,30],[65,44,104,16],[65,45,104,43,"pattern"],[65,52,104,6],[66,0,106,6,"nestedRouteNames"],[66,8,106,6,"nestedRouteNames"],[66,24,106,22],[66,25,106,23,"push"],[66,29,106,6],[66,30,106,28,"route"],[66,35,106,33],[66,36,106,34,"name"],[66,40,106,6],[68,0,108,6],[68,12,108,10,"route"],[68,17,108,15],[68,18,108,16,"params"],[68,24,108,6],[68,26,108,24],[69,0,108,24],[70,0,108,24],[72,0,109,8],[72,16,109,14,"stringify"],[72,25,109,23],[72,53,109,26,"currentOptions"],[72,67,109,40],[72,68,109,41,"route"],[72,73,109,46],[72,74,109,47,"name"],[72,78,109,40],[72,79,109,23],[72,100,109,26],[72,122,109,54,"stringify"],[72,131,109,8],[73,0,111,8],[73,16,111,14,"currentParams"],[73,29,111,27],[73,32,111,30,"fromEntries"],[73,43,111,41],[73,44,112,10,"Object"],[73,50,112,16],[73,51,112,17,"entries"],[73,58,112,10],[73,59,112,25,"route"],[73,64,112,30],[73,65,112,31,"params"],[73,71,112,10],[73,73,112,39,"map"],[73,76,112,10],[73,77,112,43],[74,0,112,43],[75,0,112,43],[75,18,112,45,"key"],[75,21,112,43],[76,0,112,43],[76,18,112,50,"value"],[76,23,112,43],[78,0,112,43],[78,21,112,61],[78,22,113,12,"key"],[78,25,112,61],[78,27,114,12,"stringify"],[78,36,114,21],[78,44,114,12],[78,48,114,12,"stringify"],[78,57,114,21],[78,58,114,24,"key"],[78,61,114,21],[78,62,114,12],[78,65,114,31,"stringify"],[78,74,114,40],[78,75,114,41,"key"],[78,78,114,40],[78,79,114,31],[78,80,114,46,"value"],[78,85,114,31],[78,86,114,12],[78,89,114,55,"String"],[78,95,114,61],[78,96,114,62,"value"],[78,101,114,61],[78,102,112,61],[78,103,112,43],[79,0,112,43],[79,13,112,10],[79,14,111,41],[79,15,111,8],[81,0,118,8],[81,16,118,12,"pattern"],[81,23,118,8],[81,25,118,21],[82,0,119,10],[82,37,119,24,"allParams"],[82,46,119,10],[82,48,119,35,"currentParams"],[82,61,119,10],[83,0,120,9],[85,0,122,8],[85,16,122,12,"focusedRoute"],[85,28,122,24],[85,33,122,29,"route"],[85,38,122,8],[85,40,122,36],[86,0,122,36],[88,0,125,10,"focusedParams"],[88,14,125,10,"focusedParams"],[88,27,125,23],[88,48,125,31,"currentParams"],[88,61,125,23],[88,62,125,10],[89,0,127,10],[89,26,127,10,"pattern"],[89,33,127,17],[89,42,127,10],[89,63,128,14,"split"],[89,68,127,10],[89,69,128,20],[89,72,127,10],[89,74,129,13,"filter"],[89,80,127,10],[89,81,129,20],[89,91,129,21,"p"],[89,92,129,20],[90,0,129,20],[90,23,129,27,"p"],[90,24,129,28],[90,25,129,29,"startsWith"],[90,35,129,27],[90,36,129,40],[90,39,129,27],[90,40,129,20],[91,0,129,20],[91,15,127,10],[91,17,131,13,"forEach"],[91,24,127,10],[91,25,131,21],[91,35,131,22,"p"],[91,36,131,21],[91,38,131,28],[92,0,132,14],[92,20,132,20,"name"],[92,24,132,24],[92,27,132,27,"getParamName"],[92,39,132,39],[92,40,132,40,"p"],[92,41,132,39],[92,42,132,14],[94,0,135,14],[94,20,135,18,"focusedParams"],[94,33,135,14],[94,35,135,33],[95,0,137,16],[95,25,137,23,"focusedParams"],[95,38,137,36],[95,39,137,37,"name"],[95,43,137,36],[95,44,137,16],[96,0,138,15],[97,0,139,13],[97,15,127,10],[98,0,140,9],[99,0,108,24],[100,0,141,7],[102,0,144,6],[102,12,144,10],[102,13,144,11,"currentOptions"],[102,27,144,25],[102,28,144,26,"route"],[102,33,144,31],[102,34,144,32,"name"],[102,38,144,25],[102,39,144,11],[102,40,144,38,"screens"],[102,47,144,10],[102,51,144,49,"route"],[102,56,144,54],[102,57,144,55,"state"],[102,62,144,49],[102,67,144,65,"undefined"],[102,76,144,6],[102,78,144,76],[103,0,145,8,"hasNext"],[103,10,145,8,"hasNext"],[103,17,145,15],[103,20,145,18],[103,25,145,8],[104,0,146,7],[104,9,144,6],[104,15,146,13],[105,0,147,8,"index"],[105,10,147,8,"index"],[105,15,147,13],[105,18,148,10],[105,25,148,17,"route"],[105,30,148,22],[105,31,148,23,"state"],[105,36,148,17],[105,37,148,29,"index"],[105,42,148,10],[105,47,148,39],[105,55,148,10],[105,58,149,14,"route"],[105,63,149,19],[105,64,149,20,"state"],[105,69,149,14],[105,70,149,26,"index"],[105,75,148,10],[105,78,150,14,"route"],[105,83,150,19],[105,84,150,20,"state"],[105,89,150,14],[105,90,150,26,"routes"],[105,96,150,14],[105,97,150,33,"length"],[105,103,150,14],[105,106,150,42],[105,107,147,8],[106,0,152,8],[106,14,152,14,"nextRoute"],[106,23,152,23],[106,26,152,26,"route"],[106,31,152,31],[106,32,152,32,"state"],[106,37,152,26],[106,38,152,38,"routes"],[106,44,152,26],[106,45,152,45,"index"],[106,50,152,26],[106,51,152,8],[107,0,153,8],[107,14,153,14,"nestedConfig"],[107,26,153,26],[107,29,153,29,"currentOptions"],[107,43,153,43],[107,44,153,44,"route"],[107,49,153,49],[107,50,153,50,"name"],[107,54,153,43],[107,55,153,29],[107,56,153,56,"screens"],[107,63,153,8],[109,0,156,8],[109,14,156,12,"nestedConfig"],[109,26,156,24],[109,30,156,28,"nextRoute"],[109,39,156,37],[109,40,156,38,"name"],[109,44,156,28],[109,48,156,46,"nestedConfig"],[109,60,156,8],[109,62,156,60],[110,0,157,10,"route"],[110,12,157,10,"route"],[110,17,157,15],[110,20,157,18,"nextRoute"],[110,29,157,10],[111,0,158,10,"currentOptions"],[111,12,158,10,"currentOptions"],[111,26,158,24],[111,29,158,27,"nestedConfig"],[111,41,158,10],[112,0,159,9],[112,11,156,8],[112,17,159,15],[113,0,161,10,"hasNext"],[113,12,161,10,"hasNext"],[113,19,161,17],[113,22,161,20],[113,27,161,10],[114,0,162,9],[115,0,163,7],[116,0,164,5],[118,0,166,4],[118,10,166,8,"pattern"],[118,17,166,15],[118,22,166,20,"undefined"],[118,31,166,4],[118,33,166,31],[119,0,167,6,"pattern"],[119,8,167,6,"pattern"],[119,15,167,13],[119,18,167,16,"nestedRouteNames"],[119,34,167,32],[119,35,167,33,"join"],[119,39,167,16],[119,40,167,38],[119,43,167,16],[119,44,167,6],[120,0,168,5],[122,0,170,4],[122,10,170,8,"currentOptions"],[122,24,170,22],[122,25,170,23,"route"],[122,30,170,28],[122,31,170,29,"name"],[122,35,170,22],[122,36,170,8],[122,41,170,39,"undefined"],[122,50,170,4],[122,52,170,50],[123,0,171,6,"path"],[123,8,171,6,"path"],[123,12,171,10],[123,16,171,14,"pattern"],[123,23,171,21],[123,24,172,9,"split"],[123,29,171,14],[123,30,172,15],[123,33,171,14],[123,35,173,9,"map"],[123,38,171,14],[123,39,173,13],[123,49,173,14,"p"],[123,50,173,13],[123,52,173,20],[124,0,174,10],[124,14,174,16,"name"],[124,18,174,20],[124,21,174,23,"getParamName"],[124,33,174,35],[124,34,174,36,"p"],[124,35,174,35],[124,36,174,10],[126,0,179,10],[126,14,179,14,"p"],[126,15,179,15],[126,20,179,20],[126,23,179,10],[126,25,179,25],[127,0,180,12],[127,16,180,16,"legacy"],[127,22,180,12],[127,24,180,24],[128,0,181,14],[128,20,181,20],[128,24,181,24,"Error"],[128,29,181,20],[128,30,182,16],[128,174,181,20],[128,175,181,14],[129,0,184,13],[131,0,186,12],[131,19,186,19,"route"],[131,24,186,24],[131,25,186,25,"name"],[131,29,186,12],[132,0,187,11],[134,0,190,10],[134,14,190,14,"p"],[134,15,190,15],[134,16,190,16,"startsWith"],[134,26,190,14],[134,27,190,27],[134,30,190,14],[134,31,190,10],[134,33,190,33],[135,0,191,12],[135,16,191,18,"value"],[135,22,191,23],[135,25,191,26,"allParams"],[135,34,191,35],[135,35,191,36,"name"],[135,39,191,35],[135,40,191,12],[137,0,193,12],[137,16,193,16,"value"],[137,22,193,21],[137,27,193,26,"undefined"],[137,36,193,16],[137,40,193,39,"p"],[137,41,193,40],[137,42,193,41,"endsWith"],[137,50,193,39],[137,51,193,50],[137,54,193,39],[137,55,193,12],[137,57,193,56],[138,0,195,14],[138,21,195,21],[138,23,195,14],[139,0,196,13],[141,0,198,12],[141,19,198,19,"encodeURIComponent"],[141,37,198,37],[141,38,198,38,"value"],[141,44,198,37],[141,45,198,12],[142,0,199,11],[144,0,201,10],[144,17,201,17,"encodeURIComponent"],[144,35,201,35],[144,36,201,36,"p"],[144,37,201,35],[144,38,201,10],[145,0,202,9],[145,9,171,14],[145,11,203,9,"join"],[145,15,171,14],[145,16,203,14],[145,19,171,14],[145,20,171,6],[146,0,204,5],[146,7,170,4],[146,13,204,11],[147,0,205,6,"path"],[147,8,205,6,"path"],[147,12,205,10],[147,16,205,14,"encodeURIComponent"],[147,34,205,32],[147,35,205,33,"route"],[147,40,205,38],[147,41,205,39,"name"],[147,45,205,32],[147,46,205,6],[148,0,206,5],[150,0,208,4],[150,10,208,8],[150,11,208,9,"focusedParams"],[150,24,208,4],[150,26,208,24],[151,0,209,6,"focusedParams"],[151,8,209,6,"focusedParams"],[151,21,209,19],[151,24,209,22,"focusedRoute"],[151,36,209,34],[151,37,209,35,"params"],[151,43,209,6],[152,0,210,5],[154,0,212,4],[154,10,212,8,"route"],[154,15,212,13],[154,16,212,14,"state"],[154,21,212,4],[154,23,212,21],[155,0,213,6,"path"],[155,8,213,6,"path"],[155,12,213,10],[155,16,213,14],[155,19,213,6],[156,0,214,5],[156,7,212,4],[156,13,214,11],[156,17,214,15,"focusedParams"],[156,30,214,11],[156,32,214,30],[157,0,215,6],[157,13,215,11],[157,17,215,15,"param"],[157,22,215,6],[157,26,215,24,"focusedParams"],[157,39,215,6],[157,41,215,39],[158,0,216,8],[158,14,216,12,"focusedParams"],[158,27,216,25],[158,28,216,26,"param"],[158,33,216,25],[158,34,216,12],[158,39,216,37],[158,50,216,8],[158,52,216,50],[159,0,218,10],[159,19,218,17,"focusedParams"],[159,32,218,30],[159,33,218,31,"param"],[159,38,218,30],[159,39,218,10],[160,0,219,9],[161,0,220,7],[163,0,222,6],[163,12,222,12,"query"],[163,17,222,17],[163,20,222,20,"queryString"],[163,31,222,31],[163,32,222,32,"stringify"],[163,41,222,20],[163,42,222,42,"focusedParams"],[163,55,222,20],[163,56,222,6],[165,0,224,6],[165,12,224,10,"query"],[165,17,224,6],[165,19,224,17],[166,0,225,8,"path"],[166,10,225,8,"path"],[166,14,225,12],[166,24,225,20,"query"],[166,29,225,8],[167,0,226,7],[168,0,227,5],[170,0,229,4,"current"],[170,6,229,4,"current"],[170,13,229,11],[170,16,229,14,"route"],[170,21,229,19],[170,22,229,20,"state"],[170,27,229,4],[171,0,67,10],[173,0,86,2],[173,11,86,9,"current"],[173,18,86,2],[173,20,86,18],[174,0,86,18],[175,0,230,3],[177,0,233,2,"path"],[177,4,233,2,"path"],[177,8,233,6],[177,11,233,9,"path"],[177,15,233,13],[177,16,233,14,"replace"],[177,23,233,9],[177,24,233,22],[177,30,233,9],[177,32,233,30],[177,35,233,9],[177,36,233,2],[178,0,234,2,"path"],[178,4,234,2,"path"],[178,8,234,6],[178,11,234,9,"path"],[178,15,234,13],[178,16,234,14,"length"],[178,22,234,9],[178,25,234,23],[178,26,234,9],[178,29,234,27,"path"],[178,33,234,31],[178,34,234,32,"replace"],[178,41,234,27],[178,42,234,40],[178,47,234,27],[178,49,234,47],[178,51,234,27],[178,52,234,9],[178,55,234,53,"path"],[178,59,234,2],[179,0,236,2],[179,11,236,9,"path"],[179,15,236,2],[180,0,237,1],[182,0,240,0],[182,6,240,6,"fromEntries"],[182,17,240,17],[182,20,240,20],[182,29,240,6,"fromEntries"],[182,40,240,20],[182,41,240,42,"entries"],[182,48,240,20],[183,0,240,20],[183,11,241,2,"entries"],[183,18,241,9],[183,19,241,10,"reduce"],[183,25,241,2],[183,26,241,17],[183,36,241,18,"acc"],[183,39,241,17],[183,48,241,34],[184,0,241,34],[185,0,241,34],[185,10,241,24,"k"],[185,11,241,34],[186,0,241,34],[186,10,241,27,"v"],[186,11,241,34],[188,0,242,4],[188,10,242,8,"acc"],[188,13,242,11],[188,14,242,12,"hasOwnProperty"],[188,28,242,8],[188,29,242,27,"k"],[188,30,242,8],[188,31,242,4],[188,33,242,31],[189,0,243,6],[189,14,243,12],[189,18,243,16,"Error"],[189,23,243,12],[189,46,243,42,"k"],[189,47,243,12],[189,84,243,6],[190,0,244,5],[192,0,246,4,"acc"],[192,6,246,4,"acc"],[192,9,246,7],[192,10,246,8,"k"],[192,11,246,7],[192,12,246,4],[192,15,246,13,"v"],[192,16,246,4],[193,0,247,4],[193,13,247,11,"acc"],[193,16,247,4],[194,0,248,3],[194,5,241,2],[194,7,248,5],[194,9,241,2],[194,10,240,20],[195,0,240,20],[195,3,240,0],[197,0,250,0],[197,6,250,6,"getParamName"],[197,18,250,18],[197,21,250,21],[197,30,250,6,"getParamName"],[197,42,250,21],[197,43,250,22,"pattern"],[197,50,250,21],[198,0,250,21],[198,11,251,2,"pattern"],[198,18,251,9],[198,19,251,10,"replace"],[198,26,251,2],[198,27,251,18],[198,31,251,2],[198,33,251,24],[198,35,251,2],[198,37,251,28,"replace"],[198,44,251,2],[198,45,251,36],[198,50,251,2],[198,52,251,43],[198,54,251,2],[198,55,250,21],[199,0,250,21],[199,3,250,0],[201,0,253,0],[201,6,253,6,"joinPaths"],[201,15,253,15],[201,18,253,18],[201,27,253,6,"joinPaths"],[201,36,253,18],[202,0,253,18],[204,0,253,18],[204,38,253,22,"paths"],[204,43,253,18],[205,0,253,22,"paths"],[205,6,253,22,"paths"],[205,11,253,18],[206,0,253,18],[208,0,253,18],[208,11,254,2],[208,20,254,3],[208,22,254,2],[208,24,255,5,"concat"],[208,30,254,2],[208,77,255,15,"paths"],[208,82,255,20],[208,83,255,21,"map"],[208,86,255,15],[208,87,255,25],[208,97,255,26,"p"],[208,98,255,25],[209,0,255,25],[209,13,255,32,"p"],[209,14,255,33],[209,15,255,34,"split"],[209,20,255,32],[209,21,255,40],[209,24,255,32],[209,25,255,25],[210,0,255,25],[210,5,255,15],[210,6,254,2],[210,9,256,5,"filter"],[210,15,254,2],[210,16,256,12,"Boolean"],[210,23,254,2],[210,25,257,5,"join"],[210,29,254,2],[210,30,257,10],[210,33,254,2],[210,34,253,18],[211,0,253,18],[211,3,253,0],[213,0,259,0],[213,6,259,6,"createConfigItem"],[213,22,259,22],[213,25,259,25],[213,34,259,6,"createConfigItem"],[213,50,259,25],[213,51,260,2,"legacy"],[213,57,259,25],[213,59,261,2,"config"],[213,65,259,25],[213,67,262,2,"parentPattern"],[213,80,259,25],[213,82,263,17],[214,0,263,17],[216,0,264,2],[216,8,264,6],[216,15,264,13,"config"],[216,21,264,6],[216,26,264,24],[216,34,264,2],[216,36,264,34],[217,0,266,4],[217,10,266,10,"pattern"],[217,19,266,17],[217,22,266,20,"parentPattern"],[217,35,266,33],[217,38,266,36,"joinPaths"],[217,47,266,45],[217,48,266,46,"parentPattern"],[217,61,266,45],[217,63,266,61,"config"],[217,69,266,45],[217,70,266,33],[217,73,266,71,"config"],[217,79,266,4],[219,0,268,4],[219,13,268,11],[220,0,268,13,"pattern"],[220,8,268,13,"pattern"],[220,15,268,20],[220,17,268,13,"pattern"],[221,0,268,11],[221,7,268,4],[222,0,269,3],[224,0,273,2],[224,8,273,6,"pattern"],[224,15,273,2],[226,0,275,2],[226,8,275,6,"legacy"],[226,14,275,2],[226,16,275,14],[227,0,276,4,"pattern"],[227,6,276,4,"pattern"],[227,13,276,11],[227,16,277,6,"config"],[227,22,277,12],[227,23,277,13,"exact"],[227,28,277,6],[227,33,277,23],[227,37,277,6],[227,41,277,31,"parentPattern"],[227,54,277,6],[227,58,277,48,"config"],[227,64,277,54],[227,65,277,55,"path"],[227,69,277,6],[227,72,278,10,"joinPaths"],[227,81,278,19],[227,82,278,20,"parentPattern"],[227,95,278,19],[227,97,278,35,"config"],[227,103,278,41],[227,104,278,42,"path"],[227,108,278,19],[227,109,277,6],[227,112,279,10,"config"],[227,118,279,16],[227,119,279,17,"path"],[227,123,276,4],[228,0,280,3],[228,5,275,2],[228,11,280,9],[229,0,281,4],[229,10,281,8,"config"],[229,16,281,14],[229,17,281,15,"exact"],[229,22,281,8],[229,26,281,24,"config"],[229,32,281,30],[229,33,281,31,"path"],[229,37,281,24],[229,42,281,40,"undefined"],[229,51,281,4],[229,53,281,51],[230,0,282,6],[230,14,282,12],[230,18,282,16,"Error"],[230,23,282,12],[230,24,283,8],[230,174,282,12],[230,175,282,6],[231,0,285,5],[233,0,287,4,"pattern"],[233,6,287,4,"pattern"],[233,13,287,11],[233,16,288,6,"config"],[233,22,288,12],[233,23,288,13,"exact"],[233,28,288,6],[233,33,288,23],[233,37,288,6],[233,40,289,10,"joinPaths"],[233,49,289,19],[233,50,289,20,"parentPattern"],[233,63,289,33],[233,67,289,37],[233,69,289,19],[233,71,289,41,"config"],[233,77,289,47],[233,78,289,48,"path"],[233,82,289,41],[233,86,289,56],[233,88,289,19],[233,89,288,6],[233,92,290,10,"config"],[233,98,290,16],[233,99,290,17,"path"],[233,103,290,10],[233,107,290,25],[233,109,287,4],[234,0,291,3],[236,0,293,2],[236,8,293,8,"screens"],[236,15,293,15],[236,18,293,18,"config"],[236,24,293,24],[236,25,293,25,"screens"],[236,32,293,18],[236,35,294,6,"createNormalizedConfigs"],[236,58,294,29],[236,59,294,30,"legacy"],[236,65,294,29],[236,67,294,38,"config"],[236,73,294,44],[236,74,294,45,"screens"],[236,81,294,29],[236,83,294,54,"pattern"],[236,90,294,29],[236,91,293,18],[236,94,295,6,"undefined"],[236,103,293,2],[237,0,297,2],[237,11,297,9],[238,0,299,4,"pattern"],[238,6,299,4,"pattern"],[238,13,299,11],[238,28,299,13,"pattern"],[238,35,299,11],[238,56,299,13],[238,66,299,22,"split"],[238,71,299,13],[238,72,299,28],[238,75,299,13],[238,77,299,33,"filter"],[238,83,299,13],[238,84,299,40,"Boolean"],[238,91,299,13],[238,93,299,49,"join"],[238,97,299,13],[238,98,299,54],[238,101,299,13],[238,102,297,9],[239,0,300,4,"stringify"],[239,6,300,4,"stringify"],[239,15,300,13],[239,17,300,15,"config"],[239,23,300,21],[239,24,300,22,"stringify"],[239,33,297,9],[240,0,301,4,"screens"],[240,6,301,4,"screens"],[240,13,301,11],[240,15,301,4,"screens"],[241,0,297,9],[241,5,297,2],[242,0,303,1],[242,3,259,0],[244,0,305,0],[244,6,305,6,"createNormalizedConfigs"],[244,29,305,29],[244,32,305,32],[244,41,305,6,"createNormalizedConfigs"],[244,64,305,32],[244,65,306,2,"legacy"],[244,71,305,32],[244,73,307,2,"options"],[244,80,305,32],[244,82,308,2,"pattern"],[244,89,305,32],[245,0,305,32],[245,11,310,2,"fromEntries"],[245,22,310,13],[245,23,311,4,"Object"],[245,29,311,10],[245,30,311,11,"entries"],[245,37,311,4],[245,38,311,19,"options"],[245,45,311,4],[245,47,311,28,"map"],[245,50,311,4],[245,51,311,32],[245,68,311,47],[246,0,311,47],[247,0,311,47],[247,10,311,34,"name"],[247,14,311,47],[248,0,311,47],[248,10,311,40,"c"],[248,11,311,47],[250,0,312,6],[250,10,312,12,"result"],[250,16,312,18],[250,19,312,21,"createConfigItem"],[250,35,312,37],[250,36,312,38,"legacy"],[250,42,312,37],[250,44,312,46,"c"],[250,45,312,37],[250,47,312,49,"pattern"],[250,54,312,37],[250,55,312,6],[251,0,314,6],[251,13,314,13],[251,14,314,14,"name"],[251,18,314,13],[251,20,314,20,"result"],[251,26,314,13],[251,27,314,6],[252,0,315,5],[252,5,311,4],[252,6,310,13],[252,7,305,32],[253,0,305,32],[253,3,305,0]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","<anonymous>","pattern.split.map$argument_0","fromEntries","entries.reduce$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCqB;CDW;eE+B;2CCgD;WDG;oBEc,wBF;qBEE;aFQ;aGkC;SH6B;CFmC;oBMG;iBCC;GDO,qBN;qBQE;8CRC;kBSE;yBCE,mBD;cTE;yBWE;CX4C;gCYE;gCTM;KSI;GZC"}},"type":"js/module"}]}