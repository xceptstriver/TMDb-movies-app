{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false,"locs":[]}},{"name":"../RNGestureHandlerModule","data":{"isAsync":false,"locs":[]}},{"name":"../State","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../RNGestureHandlerModule\"));\n\n  var _State = _$$_REQUIRE(_dependencyMap[12], \"../State\");\n\n  var _UIManager$getViewMan, _stateToPropMappings;\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), customGHEventsConfig);\n  var UIManagerConstants = (_UIManager$getViewMan = UIManager.getViewManagerConfig == null ? void 0 : UIManager.getViewManagerConfig('getConstants')) != null ? _UIManager$getViewMan : UIManager.getConstants == null ? void 0 : UIManager.getConstants();\n\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManagerConstants.genericDirectEventTypes), customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    validProps.forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n\n      return handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.State.UNDETERMINED, undefined), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.State.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(_ref2) {\n    var name = _ref2.name,\n        _ref2$allowedProps = _ref2.allowedProps,\n        allowedProps = _ref2$allowedProps === void 0 ? [] : _ref2$allowedProps,\n        _ref2$config = _ref2.config,\n        config = _ref2$config === void 0 ? {} : _ref2$config,\n        transformProps = _ref2.transformProps,\n        _ref2$customNativePro = _ref2.customNativeProps,\n        customNativeProps = _ref2$customNativePro === void 0 ? [] : _ref2$customNativePro;\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      var _super = _createSuper(Handler);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n        _this.updateEnqueued = null;\n\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent == null ? void 0 : _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(event);\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null ? void 0 : _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n\n          if (_reactNative.Platform.OS === 'web') {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _this.propsRef);\n          } else {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag);\n          }\n        };\n\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n        };\n\n        _this.handlerTag = handlerTag++;\n        _this.config = {};\n        _this.propsRef = React.createRef();\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this.handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          var props = this.props;\n\n          if (hasUnresolvedRefs(props)) {\n            this.updateEnqueued = setImmediate(function () {\n              _this2.updateEnqueued = null;\n\n              _this2.update();\n            });\n          }\n\n          this.createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler(findNodeHandle(this.viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this.viewNode);\n\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag);\n          }\n\n          this.update();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n\n          if (this.updateEnqueued) {\n            clearImmediate(this.updateEnqueued);\n          }\n\n          var handlerID = this.props.id;\n\n          if (handlerID) {\n            delete handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n\n          if (!(0, _areEqual.default)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var events = {\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          };\n          this.propsRef.current = events;\n          var child = React.Children.only(this.props.children);\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return React.cloneElement(child, _objectSpread({\n            ref: this.refHandler,\n            collapsable: false\n          }, events), grandChildren);\n        }\n      }]);\n      return Handler;\n    }(React.Component);\n\n    Handler.displayName = name;\n    return Handler;\n  }\n});","lineCount":384,"map":[[23,0,1,0],[25,0,2,0],[27,0,9,0],[29,0,10,0],[31,0,12,0],[47,0,21,0],[47,11,21,9,"findNodeHandle"],[47,25,21,0],[47,26,22,2,"node"],[47,30,21,0],[47,32,23,73],[48,0,24,2],[48,8,24,6,"Platform"],[48,30,24,15,"OS"],[48,32,24,6],[48,37,24,22],[48,42,24,2],[48,44,24,29],[48,51,24,36,"node"],[48,55,24,29],[49,0,25,2],[49,11,25,9],[49,44,25,26,"node"],[49,48,25,9],[49,49,25,2],[50,0,26,1],[52,0,28,0],[52,30,28,27,"NativeModules"],[52,56,28,0],[52,57,28,8,"UIManager"],[52,66,28,0],[53,0,28,0],[53,6,28,8,"UIManager"],[53,15,28,0],[53,53,28,20],[53,55,28,0],[54,0,30,0],[54,6,30,6,"customGHEventsConfig"],[54,26,30,26],[54,29,30,29],[55,0,31,2,"onGestureHandlerEvent"],[55,4,31,2,"onGestureHandlerEvent"],[55,25,31,23],[55,27,31,25],[56,0,31,27,"registrationName"],[56,6,31,27,"registrationName"],[56,22,31,43],[56,24,31,45],[57,0,31,25],[57,5,30,29],[58,0,32,2,"onGestureHandlerStateChange"],[58,4,32,2,"onGestureHandlerStateChange"],[58,31,32,29],[58,33,32,31],[59,0,33,4,"registrationName"],[59,6,33,4,"registrationName"],[59,22,33,20],[59,24,33,22],[60,0,32,31],[61,0,30,29],[61,3,30,0],[62,0,41,0,"UIManager"],[62,2,41,0,"UIManager"],[62,11,41,9],[62,12,41,10,"genericDirectEventTypes"],[62,35,41,0],[62,70,42,5,"UIManager"],[62,79,42,14],[62,80,42,15,"genericDirectEventTypes"],[62,103,41,0],[62,106,43,5,"customGHEventsConfig"],[62,126,41,0],[63,0,48,0],[63,6,48,6,"UIManagerConstants"],[63,24,48,24],[63,52,49,2,"UIManager"],[63,61,49,11],[63,62,49,12,"getViewManagerConfig"],[63,82,48,24],[63,102,49,2,"UIManager"],[63,111,49,11],[63,112,49,12,"getViewManagerConfig"],[63,132,49,2],[63,133,49,35],[63,147,49,2],[63,148,48,24],[63,184,50,2,"UIManager"],[63,193,50,11],[63,194,50,12,"getConstants"],[63,206,48,24],[63,226,50,2,"UIManager"],[63,235,50,11],[63,236,50,12,"getConstants"],[63,248,50,2],[63,250,48,0],[65,0,52,0],[65,6,52,4,"UIManagerConstants"],[65,24,52,0],[65,26,52,24],[66,0,53,2,"UIManagerConstants"],[66,4,53,2,"UIManagerConstants"],[66,22,53,20],[66,23,53,21,"genericDirectEventTypes"],[66,46,53,2],[66,81,54,7,"UIManagerConstants"],[66,99,54,25],[66,100,54,26,"genericDirectEventTypes"],[66,123,53,2],[66,126,55,7,"customGHEventsConfig"],[66,146,53,2],[67,0,57,1],[69,0,60,0],[69,30,67,4,"UIManager"],[69,39,60,0],[69,40,61,2,"setJSResponder"],[69,54,60,0],[70,0,60,0],[70,6,61,18,"oldSetJSResponder"],[70,23,60,0],[70,61,61,38],[70,73,61,44],[70,74,63,3],[70,75,60,0],[71,0,60,0],[71,30,67,4,"UIManager"],[71,39,60,0],[71,40,64,2,"clearJSResponder"],[71,56,60,0],[72,0,60,0],[72,6,64,20,"oldClearJSResponder"],[72,25,60,0],[72,63,64,42],[72,75,64,48],[72,76,66,3],[72,77,60,0],[74,0,68,0,"UIManager"],[74,2,68,0,"UIManager"],[74,11,68,9],[74,12,68,10,"setJSResponder"],[74,26,68,0],[74,29,68,27],[74,39,68,28,"tag"],[74,42,68,27],[74,44,68,41,"blockNativeResponder"],[74,64,68,27],[74,66,68,75],[75,0,69,2,"RNGestureHandlerModule"],[75,36,69,25,"handleSetJSResponder"],[75,56,69,2],[75,57,69,46,"tag"],[75,60,69,2],[75,62,69,51,"blockNativeResponder"],[75,82,69,2],[77,0,70,2,"oldSetJSResponder"],[77,4,70,2,"oldSetJSResponder"],[77,21,70,19],[77,22,70,20,"tag"],[77,25,70,19],[77,27,70,25,"blockNativeResponder"],[77,47,70,19],[77,48,70,2],[78,0,71,1],[78,3,68,0],[80,0,72,0,"UIManager"],[80,2,72,0,"UIManager"],[80,11,72,9],[80,12,72,10,"clearJSResponder"],[80,28,72,0],[80,31,72,29],[80,43,72,35],[81,0,73,2,"RNGestureHandlerModule"],[81,36,73,25,"handleClearJSResponder"],[81,58,73,2],[83,0,74,2,"oldClearJSResponder"],[83,4,74,2,"oldClearJSResponder"],[83,23,74,21],[84,0,75,1],[84,3,72,0],[86,0,77,0],[86,6,77,4,"handlerTag"],[86,16,77,14],[86,19,77,17],[86,20,77,0],[87,0,78,0],[87,6,78,6,"handlerIDToTag"],[87,20,78,44],[87,23,78,47],[87,25,78,0],[89,0,80,0],[89,11,80,9,"isConfigParam"],[89,24,80,0],[89,25,80,23,"param"],[89,30,80,0],[89,32,80,39,"name"],[89,36,80,0],[89,38,80,53],[90,0,83,2],[90,11,84,4,"param"],[90,16,84,9],[90,21,84,14,"undefined"],[90,30,84,4],[90,35,85,5,"param"],[90,40,85,10],[90,45,85,15,"Object"],[90,51,85,21],[90,52,85,22,"param"],[90,57,85,21],[90,58,85,5],[90,62,86,6],[90,64,86,8],[90,80,86,25,"param"],[90,85,86,6],[90,86,84,4],[90,91,87,4,"name"],[90,95,87,8],[90,100,87,13],[90,122,84,4],[90,126,88,4,"name"],[90,130,88,8],[90,135,88,13],[90,151,83,2],[91,0,90,1],[93,0,92,0],[93,11,92,9,"filterConfig"],[93,23,92,0],[93,24,93,2,"props"],[93,29,92,0],[93,31,94,2,"validProps"],[93,41,92,0],[93,43,96,2],[94,0,96,2],[94,8,95,2,"defaults"],[94,16,96,2],[94,87,95,38],[94,89,96,2],[96,0,97,2],[96,8,97,8,"res"],[96,11,97,11],[96,32,97,19,"defaults"],[96,40,97,11],[96,41,97,2],[98,0,98,2,"validProps"],[98,4,98,2,"validProps"],[98,14,98,12],[98,15,98,13,"forEach"],[98,22,98,2],[98,23,98,21],[98,33,98,22,"key"],[98,36,98,21],[98,38,98,30],[99,0,99,4],[99,10,99,10,"value"],[99,15,99,15],[99,18,99,18,"props"],[99,23,99,23],[99,24,99,24,"key"],[99,27,99,23],[99,28,99,4],[101,0,100,4],[101,10,100,8,"isConfigParam"],[101,23,100,21],[101,24,100,22,"value"],[101,29,100,21],[101,31,100,29,"key"],[101,34,100,21],[101,35,100,4],[101,37,100,35],[102,0,101,6],[102,12,101,10,"value"],[102,18,101,15],[102,21,101,18,"props"],[102,26,101,23],[102,27,101,24,"key"],[102,30,101,23],[102,31,101,6],[104,0,102,6],[104,12,102,10,"key"],[104,15,102,13],[104,20,102,18],[104,42,102,10],[104,46,102,44,"key"],[104,49,102,47],[104,54,102,52],[104,63,102,6],[104,65,102,63],[105,0,103,8,"value"],[105,10,103,8,"value"],[105,16,103,13],[105,19,103,16,"transformIntoHandlerTags"],[105,43,103,40],[105,44,103,41,"props"],[105,49,103,46],[105,50,103,47,"key"],[105,53,103,46],[105,54,103,40],[105,55,103,8],[106,0,104,7],[106,9,102,6],[106,15,104,13],[106,19,104,17,"key"],[106,22,104,20],[106,27,104,25],[106,36,104,13],[106,38,104,36],[107,0,105,8],[107,14,105,12],[107,21,105,19,"value"],[107,27,105,12],[107,32,105,29],[107,40,105,8],[107,42,105,39],[108,0,106,10,"value"],[108,12,106,10,"value"],[108,18,106,15],[108,21,106,18],[109,0,106,20,"top"],[109,14,106,20,"top"],[109,17,106,23],[109,19,106,25,"value"],[109,25,106,18],[110,0,106,32,"left"],[110,14,106,32,"left"],[110,18,106,36],[110,20,106,38,"value"],[110,26,106,18],[111,0,106,45,"bottom"],[111,14,106,45,"bottom"],[111,20,106,51],[111,22,106,53,"value"],[111,28,106,18],[112,0,106,60,"right"],[112,14,106,60,"right"],[112,19,106,65],[112,21,106,67,"value"],[113,0,106,18],[113,13,106,10],[114,0,107,9],[115,0,108,7],[117,0,109,6,"res"],[117,8,109,6,"res"],[117,11,109,9],[117,12,109,10,"key"],[117,15,109,9],[117,16,109,6],[117,19,109,17,"value"],[117,25,109,6],[118,0,110,5],[119,0,111,3],[119,5,98,2],[120,0,112,2],[120,11,112,9,"res"],[120,14,112,2],[121,0,113,1],[123,0,115,0],[123,11,115,9,"transformIntoHandlerTags"],[123,35,115,0],[123,36,115,34,"handlerIDs"],[123,46,115,0],[123,48,115,51],[124,0,116,2],[124,8,116,6],[124,9,116,7,"Array"],[124,14,116,12],[124,15,116,13,"isArray"],[124,22,116,7],[124,23,116,21,"handlerIDs"],[124,33,116,7],[124,34,116,2],[124,36,116,34],[125,0,117,4,"handlerIDs"],[125,6,117,4,"handlerIDs"],[125,16,117,14],[125,19,117,17],[125,20,117,18,"handlerIDs"],[125,30,117,17],[125,31,117,4],[126,0,118,3],[128,0,120,2],[128,8,120,6,"Platform"],[128,30,120,15,"OS"],[128,32,120,6],[128,37,120,22],[128,42,120,2],[128,44,120,29],[129,0,121,4],[129,13,121,11,"handlerIDs"],[129,23,121,21],[129,24,122,7,"map"],[129,27,121,11],[129,28,122,11],[130,0,122,11],[130,12,122,14,"current"],[130,19,122,11],[130,27,122,14,"current"],[130,34,122,11],[131,0,122,11],[131,15,122,46,"current"],[131,22,122,11],[132,0,122,11],[132,7,121,11],[132,9,123,7,"filter"],[132,15,121,11],[132,16,123,14],[132,26,123,15,"handle"],[132,32,123,14],[133,0,123,14],[133,15,123,31,"handle"],[133,21,123,14],[134,0,123,14],[134,7,121,11],[134,8,121,4],[135,0,124,3],[137,0,126,2],[137,11,126,9,"handlerIDs"],[137,21,126,19],[137,22,127,5,"map"],[137,25,126,9],[137,26,128,6],[137,36,128,7,"handlerID"],[137,45,128,6],[138,0,128,6],[140,0,128,6],[140,13,129,8,"handlerIDToTag"],[140,27,129,22],[140,28,129,23,"handlerID"],[140,37,129,22],[140,38,129,8],[140,65,129,37,"handlerID"],[140,74,129,46],[140,75,129,47,"current"],[140,82,129,8],[140,103,129,37],[140,122,129,56,"handlerTag"],[140,132,129,8],[140,137,129,70],[140,138,129,71],[140,139,128,6],[141,0,128,6],[141,5,126,9],[141,7,131,5,"filter"],[141,13,126,9],[141,14,131,12],[141,24,131,13,"handlerTag"],[141,34,131,12],[142,0,131,12],[142,13,131,36,"handlerTag"],[142,23,131,46],[142,26,131,49],[142,27,131,12],[143,0,131,12],[143,5,126,9],[143,6,126,2],[144,0,132,1],[146,0,137,0],[146,11,137,9,"hasUnresolvedRefs"],[146,28,137,0],[146,29,138,2,"props"],[146,34,137,0],[146,36,139,2],[147,0,141,2],[147,8,141,8,"extract"],[147,15,141,15],[147,18,141,18],[147,27,141,8,"extract"],[147,34,141,18],[147,35,141,19,"refs"],[147,39,141,18],[147,41,141,41],[148,0,142,4],[148,10,142,8],[148,11,142,9,"Array"],[148,16,142,14],[148,17,142,15,"isArray"],[148,24,142,9],[148,25,142,23,"refs"],[148,29,142,9],[148,30,142,4],[148,32,142,30],[149,0,143,6],[149,15,143,13,"refs"],[149,19,143,17],[149,23,143,21,"refs"],[149,27,143,25],[149,28,143,26,"current"],[149,35,143,21],[149,40,143,38],[149,44,143,6],[150,0,144,5],[152,0,145,4],[152,13,145,11,"refs"],[152,17,145,15],[152,18,145,16,"some"],[152,22,145,11],[152,23,145,21],[152,33,145,22,"r"],[152,34,145,21],[153,0,145,21],[153,15,145,28,"r"],[153,16,145,29],[153,20,145,33,"r"],[153,21,145,34],[153,22,145,35,"current"],[153,29,145,33],[153,34,145,47],[153,38,145,21],[154,0,145,21],[154,7,145,11],[154,8,145,4],[155,0,146,3],[155,5,141,2],[157,0,147,2],[157,11,147,9,"extract"],[157,18,147,16],[157,19,147,17,"props"],[157,24,147,22],[157,25,147,23],[157,47,147,22],[157,48,147,16],[157,49,147,9],[157,53,147,51,"extract"],[157,60,147,58],[157,61,147,59,"props"],[157,66,147,64],[157,67,147,65],[157,76,147,64],[157,77,147,58],[157,78,147,2],[158,0,148,1],[160,0,150,0],[160,6,150,6,"stateToPropMappings"],[160,25,150,25],[160,108,151,3,"State"],[160,121,151,9,"UNDETERMINED"],[160,133,150,25],[160,135,151,24,"undefined"],[160,144,150,25],[160,199,152,3,"State"],[160,212,152,9,"BEGAN"],[160,217,150,25],[160,219,152,17],[160,228,150,25],[160,283,153,3,"State"],[160,296,153,9,"FAILED"],[160,302,150,25],[160,304,153,18],[160,314,150,25],[160,369,154,3,"State"],[160,382,154,9,"CANCELLED"],[160,391,150,25],[160,393,154,21],[160,406,150,25],[160,461,155,3,"State"],[160,474,155,9,"ACTIVE"],[160,480,150,25],[160,482,155,18],[160,495,150,25],[160,550,156,3,"State"],[160,563,156,9,"END"],[160,566,150,25],[160,568,156,15],[160,577,150,25],[160,601,150,0],[162,0,176,15],[162,11,176,24,"createHandler"],[162,24,176,15],[162,32,185,76],[163,0,185,76],[163,8,180,2,"name"],[163,12,185,76],[163,21,180,2,"name"],[163,25,185,76],[164,0,185,76],[164,35,181,2,"allowedProps"],[164,47,185,76],[165,0,185,76],[165,8,181,2,"allowedProps"],[165,20,185,76],[165,55,181,17],[165,57,185,76],[166,0,185,76],[166,29,182,2,"config"],[166,35,185,76],[167,0,185,76],[167,8,182,2,"config"],[167,14,185,76],[167,43,182,11],[167,45,185,76],[168,0,185,76],[168,8,183,2,"transformProps"],[168,22,185,76],[168,31,183,2,"transformProps"],[168,45,185,76],[169,0,185,76],[169,38,184,2,"customNativeProps"],[169,55,185,76],[170,0,185,76],[170,8,184,2,"customNativeProps"],[170,25,185,76],[170,63,184,22],[170,65,185,76],[172,0,185,76],[172,8,186,8,"Handler"],[172,15,185,76],[173,0,185,76],[175,0,185,76],[177,0,196,4],[177,23,196,16,"props"],[177,28,196,4],[177,30,196,50],[178,0,196,50],[180,0,196,50],[181,0,197,6],[181,34,197,12,"props"],[181,39,197,6],[182,0,196,50],[182,14,194,12,"updateEnqueued"],[182,28,196,50],[182,31,194,69],[182,35,196,50],[184,0,196,50],[184,14,256,12,"onGestureHandlerEvent"],[184,35,196,50],[184,38,256,36],[184,48,256,37,"event"],[184,53,256,36],[184,55,256,64],[185,0,257,6],[185,14,257,10,"event"],[185,19,257,15],[185,20,257,16,"nativeEvent"],[185,31,257,10],[185,32,257,28,"handlerTag"],[185,42,257,10],[185,47,257,43],[185,53,257,48,"handlerTag"],[185,63,257,6],[185,65,257,60],[186,0,258,8],[186,18,258,13,"props"],[186,23,258,8],[186,24,258,19,"onGestureEvent"],[186,38,258,8],[186,64,258,13,"props"],[186,69,258,8],[186,70,258,19,"onGestureEvent"],[186,84,258,8],[186,85,258,36,"event"],[186,90,258,8],[187,0,259,7],[187,11,257,6],[187,17,259,13],[188,0,260,8],[188,18,260,13,"props"],[188,23,260,8],[188,24,260,19,"onGestureHandlerEvent"],[188,45,260,8],[188,71,260,13,"props"],[188,76,260,8],[188,77,260,19,"onGestureHandlerEvent"],[188,98,260,8],[188,99,260,43,"event"],[188,104,260,8],[189,0,261,7],[190,0,262,5],[190,9,196,50],[192,0,196,50],[192,14,265,12,"onGestureHandlerStateChange"],[192,41,196,50],[192,44,265,42],[192,54,266,6,"event"],[192,59,265,42],[192,61,267,9],[193,0,268,6],[193,14,268,10,"event"],[193,19,268,15],[193,20,268,16,"nativeEvent"],[193,31,268,10],[193,32,268,28,"handlerTag"],[193,42,268,10],[193,47,268,43],[193,53,268,48,"handlerTag"],[193,63,268,6],[193,65,268,60],[194,0,269,8],[194,18,269,13,"props"],[194,23,269,8],[194,24,269,19,"onHandlerStateChange"],[194,44,269,8],[194,70,269,13,"props"],[194,75,269,8],[194,76,269,19,"onHandlerStateChange"],[194,96,269,8],[194,97,269,42,"event"],[194,102,269,8],[195,0,271,8],[195,16,271,14,"state"],[195,21,271,42],[195,24,271,45,"event"],[195,29,271,50],[195,30,271,51,"nativeEvent"],[195,41,271,45],[195,42,271,63,"state"],[195,47,271,8],[196,0,272,8],[196,16,272,14,"stateEventName"],[196,30,272,28],[196,33,272,31,"stateToPropMappings"],[196,52,272,50],[196,53,272,51,"state"],[196,58,272,50],[196,59,272,8],[197,0,273,8],[197,16,273,14,"eventHandler"],[197,28,273,26],[197,31,273,29,"stateEventName"],[197,45,273,43],[197,49,273,47],[197,55,273,52,"props"],[197,60,273,47],[197,61,273,58,"stateEventName"],[197,75,273,47],[197,76,273,8],[199,0,274,8],[199,16,274,12,"eventHandler"],[199,28,274,24],[199,32,274,28],[199,39,274,35,"eventHandler"],[199,51,274,28],[199,56,274,52],[199,66,274,8],[199,68,274,64],[200,0,275,10,"eventHandler"],[200,14,275,10,"eventHandler"],[200,26,275,22],[200,27,275,23,"event"],[200,32,275,22],[200,33,275,10],[201,0,276,9],[202,0,277,7],[202,11,268,6],[202,17,277,13],[203,0,278,8],[203,18,278,13,"props"],[203,23,278,8],[203,24,278,19,"onGestureHandlerStateChange"],[203,51,278,8],[203,77,278,13,"props"],[203,82,278,8],[203,83,278,19,"onGestureHandlerStateChange"],[203,110,278,8],[203,111,278,49,"event"],[203,116,278,8],[204,0,279,7],[205,0,280,5],[205,9,196,50],[207,0,196,50],[207,14,282,12,"refHandler"],[207,24,196,50],[207,27,282,25],[207,37,282,26,"node"],[207,41,282,25],[207,43,282,40],[208,0,283,6],[208,16,283,11,"viewNode"],[208,24,283,6],[208,27,283,22,"node"],[208,31,283,6],[209,0,285,6],[209,14,285,12,"child"],[209,19,285,17],[209,22,285,20,"React"],[209,27,285,25],[209,28,285,26,"Children"],[209,36,285,20],[209,37,285,35,"only"],[209,41,285,20],[209,42,285,40],[209,48,285,45,"props"],[209,53,285,40],[209,54,285,51,"children"],[209,62,285,20],[209,63,285,6],[210,0,287,6],[210,14,287,14,"ref"],[210,17,287,6],[210,20,287,27,"child"],[210,25,287,6],[210,26,287,14,"ref"],[210,29,287,6],[212,0,288,6],[212,14,288,10,"ref"],[212,17,288,13],[212,22,288,18],[212,26,288,6],[212,28,288,24],[213,0,289,8],[213,16,289,12],[213,23,289,19,"ref"],[213,26,289,12],[213,31,289,27],[213,41,289,8],[213,43,289,39],[214,0,290,10,"ref"],[214,14,290,10,"ref"],[214,17,290,13],[214,18,290,14,"node"],[214,22,290,13],[214,23,290,10],[215,0,291,9],[215,13,289,8],[215,19,291,15],[216,0,292,10,"ref"],[216,14,292,10,"ref"],[216,17,292,13],[216,18,292,14,"current"],[216,25,292,10],[216,28,292,24,"node"],[216,32,292,10],[217,0,293,9],[218,0,294,7],[219,0,295,5],[219,9,196,50],[221,0,196,50],[221,14,297,12,"createGestureHandler"],[221,34,196,50],[221,37,297,35],[221,47,298,6,"newConfig"],[221,56,297,35],[221,58,299,9],[222,0,300,6],[222,16,300,11,"config"],[222,22,300,6],[222,25,300,20,"newConfig"],[222,34,300,6],[224,0,302,6,"RNGestureHandlerModule"],[224,42,302,29,"createGestureHandler"],[224,62,302,6],[224,63,303,8,"name"],[224,67,302,6],[224,69,304,8],[224,75,304,13,"handlerTag"],[224,85,302,6],[224,87,305,8,"newConfig"],[224,96,302,6],[225,0,307,5],[225,9,196,50],[227,0,196,50],[227,14,309,12,"attachGestureHandler"],[227,34,196,50],[227,37,309,35],[227,47,309,36,"newViewTag"],[227,57,309,35],[227,59,309,59],[228,0,310,6],[228,16,310,11,"viewTag"],[228,23,310,6],[228,26,310,21,"newViewTag"],[228,36,310,6],[230,0,312,6],[230,14,312,10,"Platform"],[230,36,312,19,"OS"],[230,38,312,10],[230,43,312,26],[230,48,312,6],[230,50,312,33],[231,0,314,9,"RNGestureHandlerModule"],[231,44,314,32,"attachGestureHandler"],[231,64,314,8],[231,65,315,10],[231,71,315,15,"handlerTag"],[231,81,314,8],[231,83,316,10,"newViewTag"],[231,93,314,8],[231,95,317,10],[231,101,317,15,"propsRef"],[231,109,314,8],[232,0,319,7],[232,11,312,6],[232,17,319,13],[233,0,320,8,"RNGestureHandlerModule"],[233,44,320,31,"attachGestureHandler"],[233,64,320,8],[233,65,321,10],[233,71,321,15,"handlerTag"],[233,81,320,8],[233,83,322,10,"newViewTag"],[233,93,320,8],[234,0,324,7],[235,0,325,5],[235,9,196,50],[237,0,196,50],[237,14,327,12,"updateGestureHandler"],[237,34,196,50],[237,37,327,35],[237,47,328,6,"newConfig"],[237,56,327,35],[237,58,329,9],[238,0,330,6],[238,16,330,11,"config"],[238,22,330,6],[238,25,330,20,"newConfig"],[238,34,330,6],[240,0,332,6,"RNGestureHandlerModule"],[240,42,332,29,"updateGestureHandler"],[240,62,332,6],[240,63,332,50],[240,69,332,55,"handlerTag"],[240,79,332,6],[240,81,332,67,"newConfig"],[240,90,332,6],[241,0,333,5],[241,9,196,50],[243,0,198,6],[243,14,198,11,"handlerTag"],[243,24,198,6],[243,27,198,24,"handlerTag"],[243,37,198,34],[243,39,198,6],[244,0,199,6],[244,14,199,11,"config"],[244,20,199,6],[244,23,199,20],[244,25,199,6],[245,0,200,6],[245,14,200,11,"propsRef"],[245,22,200,6],[245,25,200,22,"React"],[245,30,200,27],[245,31,200,28,"createRef"],[245,40,200,22],[245,42,200,6],[247,0,201,6],[247,12,201,10,"props"],[247,17,201,15],[247,18,201,16,"id"],[247,20,201,6],[247,22,201,20],[248,0,202,8],[248,14,202,12,"handlerIDToTag"],[248,28,202,26],[248,29,202,27,"props"],[248,34,202,32],[248,35,202,33,"id"],[248,37,202,26],[248,38,202,12],[248,43,202,41,"undefined"],[248,52,202,8],[248,54,202,52],[249,0,203,10],[249,18,203,16],[249,22,203,20,"Error"],[249,27,203,16],[249,51,203,46,"props"],[249,56,203,51],[249,57,203,52,"id"],[249,59,203,16],[249,86,203,10],[250,0,204,9],[252,0,205,8,"handlerIDToTag"],[252,10,205,8,"handlerIDToTag"],[252,24,205,22],[252,25,205,23,"props"],[252,30,205,28],[252,31,205,29,"id"],[252,33,205,22],[252,34,205,8],[252,37,205,35],[252,43,205,40,"handlerTag"],[252,53,205,8],[253,0,206,7],[255,0,196,50],[256,0,207,5],[258,0,185,76],[259,0,185,76],[260,0,185,76],[260,15,209,4],[260,44,209,24],[261,0,209,24],[263,0,210,6],[263,14,210,12,"props"],[263,19,210,34],[263,22,210,37],[263,27,210,42,"props"],[263,32,210,6],[265,0,211,6],[265,14,211,10,"hasUnresolvedRefs"],[265,31,211,27],[265,32,211,28,"props"],[265,37,211,27],[265,38,211,6],[265,40,211,36],[266,0,218,8],[266,17,218,13,"updateEnqueued"],[266,31,218,8],[266,34,218,30,"setImmediate"],[266,46,218,42],[266,47,218,43],[266,59,218,49],[267,0,219,10],[267,14,219,10],[267,20,219,14],[267,21,219,15,"updateEnqueued"],[267,35,219,10],[267,38,219,32],[267,42,219,10],[269,0,220,10],[269,14,220,10],[269,20,220,14],[269,21,220,15,"update"],[269,27,220,10],[270,0,221,9],[270,13,218,42],[270,14,218,8],[271,0,222,7],[273,0,224,6],[273,15,224,11,"createGestureHandler"],[273,35,224,6],[273,36,225,8,"filterConfig"],[273,48,225,20],[273,49,226,10,"transformProps"],[273,63,226,24],[273,66,226,27,"transformProps"],[273,80,226,41],[273,81,226,42],[273,86,226,47,"props"],[273,91,226,41],[273,92,226,24],[273,95,226,56],[273,100,226,61,"props"],[273,105,225,20],[273,150,227,14,"allowedProps"],[273,162,225,20],[273,198,227,31,"customNativeProps"],[273,215,225,20],[273,219,228,10,"config"],[273,225,225,20],[273,226,224,6],[274,0,232,6],[274,15,232,11,"attachGestureHandler"],[274,35,232,6],[274,36,232,32,"findNodeHandle"],[274,50,232,46],[274,51,232,47],[274,56,232,52,"viewNode"],[274,64,232,46],[274,65,232,6],[275,0,233,5],[276,0,185,76],[277,0,185,76],[278,0,185,76],[278,15,235,4],[278,45,235,25],[279,0,236,6],[279,14,236,12,"viewTag"],[279,21,236,19],[279,24,236,22,"findNodeHandle"],[279,38,236,36],[279,39,236,37],[279,44,236,42,"viewNode"],[279,52,236,36],[279,53,236,6],[281,0,237,6],[281,14,237,10],[281,19,237,15,"viewTag"],[281,26,237,10],[281,31,237,27,"viewTag"],[281,38,237,6],[281,40,237,36],[282,0,238,8],[282,17,238,13,"attachGestureHandler"],[282,37,238,8],[282,38,238,34,"viewTag"],[282,45,238,8],[283,0,239,7],[285,0,240,6],[285,15,240,11,"update"],[285,21,240,6],[286,0,241,5],[287,0,185,76],[288,0,185,76],[289,0,185,76],[289,15,243,4],[289,47,243,27],[290,0,244,6,"RNGestureHandlerModule"],[290,42,244,29,"dropGestureHandler"],[290,60,244,6],[290,61,244,48],[290,66,244,53,"handlerTag"],[290,76,244,6],[292,0,245,6],[292,14,245,10],[292,19,245,15,"updateEnqueued"],[292,33,245,6],[292,35,245,31],[293,0,246,8,"clearImmediate"],[293,12,246,8,"clearImmediate"],[293,26,246,22],[293,27,246,23],[293,32,246,28,"updateEnqueued"],[293,46,246,22],[293,47,246,8],[294,0,247,7],[296,0,249,6],[296,14,249,12,"handlerID"],[296,23,249,41],[296,26,249,44],[296,31,249,49,"props"],[296,36,249,44],[296,37,249,55,"id"],[296,39,249,6],[298,0,250,6],[298,14,250,10,"handlerID"],[298,23,250,6],[298,25,250,21],[299,0,252,8],[299,19,252,15,"handlerIDToTag"],[299,33,252,29],[299,34,252,30,"handlerID"],[299,43,252,29],[299,44,252,8],[300,0,253,7],[301,0,254,5],[302,0,185,76],[303,0,185,76],[304,0,185,76],[304,15,335,4],[304,33,335,21],[305,0,336,6],[305,14,336,12,"newConfig"],[305,23,336,21],[305,26,336,24,"filterConfig"],[305,38,336,36],[305,39,337,8,"transformProps"],[305,53,337,22],[305,56,337,25,"transformProps"],[305,70,337,39],[305,71,337,40],[305,76,337,45,"props"],[305,81,337,39],[305,82,337,22],[305,85,337,54],[305,90,337,59,"props"],[305,95,336,36],[305,140,338,12,"allowedProps"],[305,152,336,36],[305,188,338,29,"customNativeProps"],[305,205,336,36],[305,209,339,8,"config"],[305,215,336,36],[305,216,336,6],[307,0,341,6],[307,14,341,10],[307,15,341,11],[307,38,341,21],[307,43,341,26,"config"],[307,49,341,11],[307,51,341,34,"newConfig"],[307,60,341,11],[307,61,341,6],[307,63,341,46],[308,0,342,8],[308,17,342,13,"updateGestureHandler"],[308,37,342,8],[308,38,342,34,"newConfig"],[308,47,342,8],[309,0,343,7],[310,0,344,5],[311,0,185,76],[312,0,185,76],[313,0,185,76],[313,15,346,4],[313,39,346,19,"updates"],[313,46,346,4],[313,48,346,33],[314,0,347,6],[314,14,347,12,"mergedProps"],[314,25,347,23],[314,60,347,31],[314,65,347,36,"props"],[314,70,347,23],[314,73,347,46,"updates"],[314,80,347,23],[314,81,347,6],[316,0,348,6],[316,14,348,12,"newConfig"],[316,23,348,21],[316,26,348,24,"filterConfig"],[316,38,348,36],[316,39,349,8,"transformProps"],[316,53,349,22],[316,56,349,25,"transformProps"],[316,70,349,39],[316,71,349,40,"mergedProps"],[316,82,349,39],[316,83,349,22],[316,86,349,55,"mergedProps"],[316,97,348,36],[316,142,350,12,"allowedProps"],[316,154,348,36],[316,190,350,29,"customNativeProps"],[316,207,348,36],[316,211,351,8,"config"],[316,217,348,36],[316,218,348,6],[317,0,353,6],[317,15,353,11,"updateGestureHandler"],[317,35,353,6],[317,36,353,32,"newConfig"],[317,45,353,6],[318,0,354,5],[319,0,185,76],[320,0,185,76],[321,0,185,76],[321,15,356,4],[321,33,356,13],[322,0,357,6],[322,14,357,10,"gestureEventHandler"],[322,33,357,29],[322,36,357,32],[322,41,357,37,"onGestureHandlerEvent"],[322,62,357,6],[323,0,363,6],[323,28,366,34],[323,33,366,39,"props"],[323,38,363,6],[324,0,363,6],[324,14,364,8,"onGestureEvent"],[324,28,363,6],[324,43,364,8,"onGestureEvent"],[324,57,363,6],[325,0,363,6],[325,14,365,8,"onGestureHandlerEvent"],[325,35,363,6],[325,50,365,8,"onGestureHandlerEvent"],[325,71,363,6],[327,0,367,6],[327,14,367,10,"onGestureEvent"],[327,28,367,24],[327,32,367,28],[327,39,367,35,"onGestureEvent"],[327,53,367,28],[327,58,367,54],[327,68,367,6],[327,70,367,66],[328,0,371,8],[328,16,371,12,"onGestureHandlerEvent"],[328,37,371,8],[328,39,371,35],[329,0,372,10],[329,20,372,16],[329,24,372,20,"Error"],[329,29,372,16],[329,30,373,12],[329,103,372,16],[329,104,372,10],[330,0,375,9],[332,0,376,8,"gestureEventHandler"],[332,12,376,8,"gestureEventHandler"],[332,31,376,27],[332,34,376,30,"onGestureEvent"],[332,48,376,8],[333,0,377,7],[333,11,367,6],[333,17,377,13],[334,0,378,8],[334,16,379,10,"onGestureHandlerEvent"],[334,37,379,31],[334,41,380,10],[334,48,380,17,"onGestureHandlerEvent"],[334,69,380,10],[334,74,380,43],[334,84,378,8],[334,86,381,10],[335,0,382,10],[335,20,382,16],[335,24,382,20,"Error"],[335,29,382,16],[335,30,383,12],[335,103,382,16],[335,104,382,10],[336,0,385,9],[337,0,386,7],[339,0,388,6],[339,14,388,10,"gestureStateEventHandler"],[339,38,388,34],[339,41,388,37],[339,46,388,42,"onGestureHandlerStateChange"],[339,73,388,6],[340,0,394,6],[340,29,397,40],[340,34,397,45,"props"],[340,39,394,6],[341,0,394,6],[341,14,395,8,"onHandlerStateChange"],[341,34,394,6],[341,50,395,8,"onHandlerStateChange"],[341,70,394,6],[342,0,394,6],[342,14,396,8,"onGestureHandlerStateChange"],[342,41,394,6],[342,57,396,8,"onGestureHandlerStateChange"],[342,84,394,6],[344,0,398,6],[344,14,398,10,"onHandlerStateChange"],[344,34,398,30],[344,38,398,34],[344,45,398,41,"onHandlerStateChange"],[344,65,398,34],[344,70,398,66],[344,80,398,6],[344,82,398,78],[345,0,402,8],[345,16,402,12,"onGestureHandlerStateChange"],[345,43,402,8],[345,45,402,41],[346,0,403,10],[346,20,403,16],[346,24,403,20,"Error"],[346,29,403,16],[346,30,404,12],[346,103,403,16],[346,104,403,10],[347,0,406,9],[349,0,407,8,"gestureStateEventHandler"],[349,12,407,8,"gestureStateEventHandler"],[349,36,407,32],[349,39,407,35,"onHandlerStateChange"],[349,59,407,8],[350,0,408,7],[350,11,398,6],[350,17,408,13],[351,0,409,8],[351,16,410,10,"onGestureHandlerStateChange"],[351,43,410,37],[351,47,411,10],[351,54,411,17,"onGestureHandlerStateChange"],[351,81,411,10],[351,86,411,49],[351,96,409,8],[351,98,412,10],[352,0,413,10],[352,20,413,16],[352,24,413,20,"Error"],[352,29,413,16],[352,30,414,12],[352,103,413,16],[352,104,413,10],[353,0,416,9],[354,0,417,7],[356,0,418,6],[356,14,418,12,"events"],[356,20,418,18],[356,23,418,21],[357,0,419,8,"onGestureHandlerEvent"],[357,12,419,8,"onGestureHandlerEvent"],[357,33,419,29],[357,35,419,31,"gestureEventHandler"],[357,54,418,21],[358,0,420,8,"onGestureHandlerStateChange"],[358,12,420,8,"onGestureHandlerStateChange"],[358,39,420,35],[358,41,420,37,"gestureStateEventHandler"],[359,0,418,21],[359,11,418,6],[360,0,423,6],[360,15,423,11,"propsRef"],[360,23,423,6],[360,24,423,20,"current"],[360,31,423,6],[360,34,423,30,"events"],[360,40,423,6],[361,0,425,6],[361,14,425,12,"child"],[361,19,425,22],[361,22,425,25,"React"],[361,27,425,30],[361,28,425,31,"Children"],[361,36,425,25],[361,37,425,40,"only"],[361,41,425,25],[361,42,425,45],[361,47,425,50,"props"],[361,52,425,45],[361,53,425,56,"children"],[361,61,425,25],[361,62,425,6],[362,0,426,6],[362,14,426,10,"grandChildren"],[362,27,426,23],[362,30,426,26,"child"],[362,35,426,31],[362,36,426,32,"props"],[362,41,426,26],[362,42,426,38,"children"],[362,50,426,6],[364,0,427,6],[364,14,428,8,"Touchable"],[364,37,428,18,"TOUCH_TARGET_DEBUG"],[364,55,428,8],[364,59,429,8,"child"],[364,64,429,13],[364,65,429,14,"type"],[364,69,428,8],[364,74,430,9,"child"],[364,79,430,14],[364,80,430,15,"type"],[364,84,430,9],[364,89,430,24],[364,113,430,9],[364,117,431,10,"child"],[364,122,431,15],[364,123,431,16,"type"],[364,127,431,10],[364,128,431,21,"name"],[364,132,431,10],[364,137,431,30],[364,143,430,9],[364,147,432,10,"child"],[364,152,432,15],[364,153,432,16,"type"],[364,157,432,10],[364,158,432,21,"displayName"],[364,169,432,10],[364,174,432,37],[364,180,428,8],[364,181,427,6],[364,183,433,8],[365,0,434,8,"grandChildren"],[365,12,434,8,"grandChildren"],[365,25,434,21],[365,28,434,24,"React"],[365,33,434,29],[365,34,434,30,"Children"],[365,42,434,24],[365,43,434,39,"toArray"],[365,50,434,24],[365,51,434,47,"grandChildren"],[365,64,434,24],[365,65,434,8],[366,0,435,8,"grandChildren"],[366,12,435,8,"grandChildren"],[366,25,435,21],[366,26,435,22,"push"],[366,30,435,8],[366,31,436,10,"Touchable"],[366,54,436,20,"renderDebugView"],[366,69,436,10],[366,70,436,36],[367,0,437,12,"color"],[367,14,437,12,"color"],[367,19,437,17],[367,21,437,19],[367,40,436,36],[368,0,438,12,"hitSlop"],[368,14,438,12,"hitSlop"],[368,21,438,19],[368,23,438,21,"child"],[368,28,438,26],[368,29,438,27,"props"],[368,34,438,21],[368,35,438,33,"hitSlop"],[369,0,436,36],[369,13,436,10],[369,14,435,8],[370,0,441,7],[372,0,443,6],[372,17,443,13,"React"],[372,22,443,18],[372,23,443,19,"cloneElement"],[372,35,443,13],[372,36,444,8,"child"],[372,41,443,13],[373,0,446,10,"ref"],[373,12,446,10,"ref"],[373,15,446,13],[373,17,446,15],[373,22,446,20,"refHandler"],[373,32,443,13],[374,0,447,10,"collapsable"],[374,12,447,10,"collapsable"],[374,23,447,21],[374,25,447,23],[375,0,443,13],[375,13,448,13,"events"],[375,19,443,13],[375,22,450,8,"grandChildren"],[375,35,443,13],[375,36,443,6],[376,0,452,5],[377,0,185,76],[378,0,185,76],[379,0,185,76],[379,6,186,24,"React"],[379,11,186,29],[379,12,186,30,"Component"],[379,21,185,76],[381,0,186,8,"Handler"],[381,4,186,8,"Handler"],[381,11,185,76],[381,12,187,11,"displayName"],[381,23,185,76],[381,26,187,25,"name"],[381,30,185,76],[382,0,454,2],[382,11,454,9,"Handler"],[382,18,454,2],[383,0,455,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","validProps.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACoB;CDK;sCEmC;GFE;0CEC;GFE;2BGE;CHG;6BIC;CJG;AKK;CLU;AME;qBCM;GDa;CNE;AQE;WCO,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CRC;AWK;kBCI;qBCI,8BD;GDC;CXE;ec4B;ECU;ICU;KDW;IEE;2CCS;SDG;KFY;IIE;KJM;IKE;KLW;oCME;KNM;0COG;KPe;yBQE;KRa;mCSE;KTU;mCUE;KVgB;mCWE;KXM;IYE;KZS;IaE;KbQ;IcE;KdgG;GDC;CdE"}},"type":"js/module"}]}