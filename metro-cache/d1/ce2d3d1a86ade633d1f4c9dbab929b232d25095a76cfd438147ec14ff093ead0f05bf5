{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"invariant","data":{"isAsync":false,"locs":[]}},{"name":"../View/ViewNativeComponent","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useAndroidRippleForView;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"invariant\"));\n\n  var _ViewNativeComponent = _$$_REQUIRE(_dependencyMap[2], \"../View/ViewNativeComponent\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function useAndroidRippleForView(rippleConfig, viewRef) {\n    var _ref = rippleConfig != null ? rippleConfig : {},\n        color = _ref.color,\n        borderless = _ref.borderless,\n        radius = _ref.radius;\n\n    var normalizedBorderless = borderless === true;\n    return (0, React.useMemo)(function () {\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 21 && (color != null || normalizedBorderless || radius != null)) {\n        var processedColor = (0, _reactNative.processColor)(color);\n        (0, _invariant.default)(processedColor == null || typeof processedColor === 'number', 'Unexpected color given for Ripple color');\n        return {\n          viewProps: {\n            nativeBackgroundAndroid: {\n              type: 'RippleAndroid',\n              color: processedColor,\n              borderless: normalizedBorderless,\n              rippleRadius: radius\n            }\n          },\n          onPressIn: function onPressIn(event) {\n            var view = viewRef.current;\n\n            if (view != null) {\n              var _event$nativeEvent$lo, _event$nativeEvent$lo2;\n\n              _ViewNativeComponent.Commands.setPressed(view, true);\n\n              _ViewNativeComponent.Commands.hotspotUpdate(view, (_event$nativeEvent$lo = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo : 0, (_event$nativeEvent$lo2 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo2 : 0);\n            }\n          },\n          onPressMove: function onPressMove(event) {\n            var view = viewRef.current;\n\n            if (view != null) {\n              var _event$nativeEvent$lo3, _event$nativeEvent$lo4;\n\n              _ViewNativeComponent.Commands.hotspotUpdate(view, (_event$nativeEvent$lo3 = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo3 : 0, (_event$nativeEvent$lo4 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo4 : 0);\n            }\n          },\n          onPressOut: function onPressOut(event) {\n            var view = viewRef.current;\n\n            if (view != null) {\n              _ViewNativeComponent.Commands.setPressed(view, false);\n            }\n          }\n        };\n      }\n\n      return null;\n    }, [color, normalizedBorderless, radius, viewRef]);\n  }\n});","lineCount":76,"map":[[2,0,11,0],[11,0,13,0],[13,0,14,0],[15,0,17,0],[17,0,18,0],[23,0,38,15],[23,11,38,24,"useAndroidRippleForView"],[23,34,38,15],[23,35,39,2,"rippleConfig"],[23,47,38,15],[23,49,40,2,"viewRef"],[23,56,38,15],[23,58,48,4],[24,0,49,2],[24,15,49,38,"rippleConfig"],[24,27,49,2],[24,38,49,38,"rippleConfig"],[24,50,49,2],[24,53,49,54],[24,55,49,2],[25,0,49,2],[25,8,49,9,"color"],[25,13,49,2],[25,21,49,9,"color"],[25,26,49,2],[26,0,49,2],[26,8,49,16,"borderless"],[26,18,49,2],[26,26,49,16,"borderless"],[26,36,49,2],[27,0,49,2],[27,8,49,28,"radius"],[27,14,49,2],[27,22,49,28,"radius"],[27,28,49,2],[29,0,50,2],[29,8,50,8,"normalizedBorderless"],[29,28,50,28],[29,31,50,31,"borderless"],[29,41,50,41],[29,46,50,46],[29,50,50,2],[30,0,52,2],[30,11,52,9],[30,30,52,17],[30,42,52,23],[31,0,53,4],[31,10,54,6,"Platform"],[31,32,54,15,"OS"],[31,34,54,6],[31,39,54,22],[31,48,54,6],[31,52,55,6,"Platform"],[31,74,55,15,"Version"],[31,81,55,6],[31,85,55,26],[31,87,54,6],[31,92,56,7,"color"],[31,97,56,12],[31,101,56,16],[31,105,56,7],[31,109,56,24,"normalizedBorderless"],[31,129,56,7],[31,133,56,48,"radius"],[31,139,56,54],[31,143,56,58],[31,147,54,6],[31,148,53,4],[31,150,57,6],[32,0,58,6],[32,12,58,12,"processedColor"],[32,26,58,26],[32,29,58,29],[32,60,58,42,"color"],[32,65,58,29],[32,66,58,6],[33,0,59,6],[33,32,60,8,"processedColor"],[33,46,60,22],[33,50,60,26],[33,54,60,8],[33,58,60,34],[33,65,60,41,"processedColor"],[33,79,60,34],[33,84,60,60],[33,92,59,6],[33,94,61,8],[33,135,59,6],[34,0,64,6],[34,15,64,13],[35,0,65,8,"viewProps"],[35,10,65,8,"viewProps"],[35,19,65,17],[35,21,65,19],[36,0,67,10,"nativeBackgroundAndroid"],[36,12,67,10,"nativeBackgroundAndroid"],[36,35,67,33],[36,37,67,35],[37,0,68,12,"type"],[37,14,68,12,"type"],[37,18,68,16],[37,20,68,18],[37,35,67,35],[38,0,69,12,"color"],[38,14,69,12,"color"],[38,19,69,17],[38,21,69,19,"processedColor"],[38,35,67,35],[39,0,70,12,"borderless"],[39,14,70,12,"borderless"],[39,24,70,22],[39,26,70,24,"normalizedBorderless"],[39,46,67,35],[40,0,71,12,"rippleRadius"],[40,14,71,12,"rippleRadius"],[40,26,71,24],[40,28,71,26,"radius"],[41,0,67,35],[42,0,65,19],[42,11,64,13],[43,0,74,8,"onPressIn"],[43,10,74,8,"onPressIn"],[43,19,64,13],[43,40,74,18,"event"],[43,45,64,13],[43,47,74,43],[44,0,75,10],[44,16,75,16,"view"],[44,20,75,20],[44,23,75,23,"viewRef"],[44,30,75,30],[44,31,75,31,"current"],[44,38,75,10],[46,0,76,10],[46,16,76,14,"view"],[46,20,76,18],[46,24,76,22],[46,28,76,10],[46,30,76,28],[47,0,76,28],[49,0,77,12,"Commands"],[49,44,77,21,"setPressed"],[49,54,77,12],[49,55,77,32,"view"],[49,59,77,12],[49,61,77,38],[49,65,77,12],[51,0,78,12,"Commands"],[51,44,78,21,"hotspotUpdate"],[51,57,78,12],[51,58,79,14,"view"],[51,62,78,12],[51,89,80,14,"event"],[51,94,80,19],[51,95,80,20,"nativeEvent"],[51,106,80,14],[51,107,80,32,"locationX"],[51,116,78,12],[51,152,80,45],[51,153,78,12],[51,181,81,14,"event"],[51,186,81,19],[51,187,81,20,"nativeEvent"],[51,198,81,14],[51,199,81,32,"locationY"],[51,208,78,12],[51,245,81,45],[51,246,78,12],[52,0,83,11],[53,0,84,9],[53,11,64,13],[54,0,85,8,"onPressMove"],[54,10,85,8,"onPressMove"],[54,21,64,13],[54,44,85,20,"event"],[54,49,64,13],[54,51,85,45],[55,0,86,10],[55,16,86,16,"view"],[55,20,86,20],[55,23,86,23,"viewRef"],[55,30,86,30],[55,31,86,31,"current"],[55,38,86,10],[57,0,87,10],[57,16,87,14,"view"],[57,20,87,18],[57,24,87,22],[57,28,87,10],[57,30,87,28],[58,0,87,28],[60,0,88,12,"Commands"],[60,44,88,21,"hotspotUpdate"],[60,57,88,12],[60,58,89,14,"view"],[60,62,88,12],[60,90,90,14,"event"],[60,95,90,19],[60,96,90,20,"nativeEvent"],[60,107,90,14],[60,108,90,32,"locationX"],[60,117,88,12],[60,154,90,45],[60,155,88,12],[60,183,91,14,"event"],[60,188,91,19],[60,189,91,20,"nativeEvent"],[60,200,91,14],[60,201,91,32,"locationY"],[60,210,88,12],[60,247,91,45],[60,248,88,12],[61,0,93,11],[62,0,94,9],[62,11,64,13],[63,0,95,8,"onPressOut"],[63,10,95,8,"onPressOut"],[63,20,64,13],[63,42,95,19,"event"],[63,47,64,13],[63,49,95,44],[64,0,96,10],[64,16,96,16,"view"],[64,20,96,20],[64,23,96,23,"viewRef"],[64,30,96,30],[64,31,96,31,"current"],[64,38,96,10],[66,0,97,10],[66,16,97,14,"view"],[66,20,97,18],[66,24,97,22],[66,28,97,10],[66,30,97,28],[67,0,98,12,"Commands"],[67,44,98,21,"setPressed"],[67,54,98,12],[67,55,98,32,"view"],[67,59,98,12],[67,61,98,38],[67,66,98,12],[68,0,99,11],[69,0,100,9],[70,0,64,13],[70,9,64,6],[71,0,102,5],[73,0,103,4],[73,13,103,11],[73,17,103,4],[74,0,104,3],[74,5,52,9],[74,7,104,5],[74,8,104,6,"color"],[74,13,104,5],[74,15,104,13,"normalizedBorderless"],[74,35,104,5],[74,37,104,35,"radius"],[74,43,104,5],[74,45,104,43,"viewRef"],[74,52,104,5],[74,53,52,9],[74,54,52,2],[75,0,105,1]],"functionMap":{"names":["<global>","useAndroidRippleForView","useMemo$argument_0","onPressIn","onPressMove","onPressOut"],"mappings":"AAA;eCqC;iBCc;QCsB;SDU;QEC;SFS;QGC;SHK;GDI;CDC"}},"type":"js/module"}]}