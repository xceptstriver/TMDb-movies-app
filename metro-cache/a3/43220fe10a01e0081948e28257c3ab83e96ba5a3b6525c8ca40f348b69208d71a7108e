{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/get","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"./AnimatedNode","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":21},"end":{"line":13,"column":46}}]}},{"name":"./AnimatedWithChildren","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":29},"end":{"line":14,"column":62}}]}},{"name":"../NativeAnimatedHelper","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":29},"end":{"line":15,"column":63}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _get = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/get\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\");\n\n  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[7], \"./AnimatedWithChildren\");\n\n  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[8], \"../NativeAnimatedHelper\");\n\n  var AnimatedTransform = function (_AnimatedWithChildren) {\n    _inherits(AnimatedTransform, _AnimatedWithChildren);\n\n    var _super = _createSuper(AnimatedTransform);\n\n    function AnimatedTransform(transforms) {\n      var _this;\n\n      _classCallCheck(this, AnimatedTransform);\n\n      _this = _super.call(this);\n      _this._transforms = transforms;\n      return _this;\n    }\n\n    _createClass(AnimatedTransform, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__makeNative();\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__getAnimatedValue\",\n      value: function __getAnimatedValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getAnimatedValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        var _this2 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__addChild(_this2);\n            }\n          }\n        });\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        var _this3 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__removeChild(_this3);\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var transConfigs = [];\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              transConfigs.push({\n                type: 'animated',\n                property: key,\n                nodeTag: value.__getNativeTag()\n              });\n            } else {\n              transConfigs.push({\n                type: 'static',\n                property: key,\n                value: NativeAnimatedHelper.transformDataType(value)\n              });\n            }\n          }\n        });\n\n        NativeAnimatedHelper.validateTransform(transConfigs);\n        return {\n          type: 'transform',\n          transforms: transConfigs\n        };\n      }\n    }]);\n\n    return AnimatedTransform;\n  }(AnimatedWithChildren);\n\n  module.exports = AnimatedTransform;\n});","lineCount":163,"map":[[2,0,11,0],[20,0,13,0],[20,6,13,6,"AnimatedNode"],[20,18,13,18],[20,21,13,21,"require"],[20,32,13,28],[20,69,13,0],[22,0,14,0],[22,6,14,6,"AnimatedWithChildren"],[22,26,14,26],[22,29,14,29,"require"],[22,40,14,36],[22,85,14,0],[24,0,15,0],[24,6,15,6,"NativeAnimatedHelper"],[24,26,15,26],[24,29,15,29,"require"],[24,40,15,36],[24,86,15,0],[26,6,17,6,"AnimatedTransform"],[26,23],[31,0,20,2],[31,31,20,14,"transforms"],[31,41,20,2],[31,43,20,50],[32,0,20,50],[34,0,20,50],[36,0,21,4],[37,0,22,4],[37,12,22,9,"_transforms"],[37,23,22,4],[37,26,22,23,"transforms"],[37,36,22,4],[38,0,20,50],[39,0,23,3],[43,13,25,2],[43,37,25,17],[44,0,26,4],[44,13,26,9,"_transforms"],[44,24,26,4],[44,25,26,21,"forEach"],[44,32,26,4],[44,33,26,29],[44,43,26,29,"transform"],[44,52,26,38],[44,54,26,42],[45,0,27,6],[45,15,27,11],[45,19,27,17,"key"],[45,22,27,6],[45,26,27,24,"transform"],[45,35,27,6],[45,37,27,35],[46,0,28,8],[46,16,28,14,"value"],[46,21,28,19],[46,24,28,22,"transform"],[46,33,28,31],[46,34,28,32,"key"],[46,37,28,31],[46,38,28,8],[48,0,29,8],[48,16,29,12,"value"],[48,21,29,17],[48,33,29,29,"AnimatedNode"],[48,45,29,8],[48,47,29,43],[49,0,30,10,"value"],[49,14,30,10,"value"],[49,19,30,15],[49,20,30,16,"__makeNative"],[49,32,30,10],[50,0,31,9],[51,0,32,7],[52,0,33,5],[52,9,26,4],[54,0,34,4],[55,0,35,3],[58,13,37,2],[58,35,37,39],[59,0,38,4],[59,15,38,11],[59,20,38,16,"_transforms"],[59,31,38,11],[59,32,38,28,"map"],[59,35,38,11],[59,36,38,32],[59,46,38,32,"transform"],[59,55,38,41],[59,57,38,45],[60,0,39,6],[60,14,39,12,"result"],[60,20,39,18],[60,23,39,21],[60,25,39,6],[62,0,40,6],[62,15,40,11],[62,19,40,17,"key"],[62,22,40,6],[62,26,40,24,"transform"],[62,35,40,6],[62,37,40,35],[63,0,41,8],[63,16,41,14,"value"],[63,21,41,19],[63,24,41,22,"transform"],[63,33,41,31],[63,34,41,32,"key"],[63,37,41,31],[63,38,41,8],[65,0,42,8],[65,16,42,12,"value"],[65,21,42,17],[65,33,42,29,"AnimatedNode"],[65,45,42,8],[65,47,42,43],[66,0,43,10,"result"],[66,14,43,10,"result"],[66,20,43,16],[66,21,43,17,"key"],[66,24,43,16],[66,25,43,10],[66,28,43,24,"value"],[66,33,43,29],[66,34,43,30,"__getValue"],[66,44,43,24],[66,46,43,10],[67,0,44,9],[67,13,42,8],[67,19,44,15],[68,0,45,10,"result"],[68,14,45,10,"result"],[68,20,45,16],[68,21,45,17,"key"],[68,24,45,16],[68,25,45,10],[68,28,45,24,"value"],[68,33,45,10],[69,0,46,9],[70,0,47,7],[72,0,48,6],[72,17,48,13,"result"],[72,23,48,6],[73,0,49,5],[73,9,38,11],[73,10,38,4],[74,0,50,3],[77,13,52,2],[77,43,52,47],[78,0,53,4],[78,15,53,11],[78,20,53,16,"_transforms"],[78,31,53,11],[78,32,53,28,"map"],[78,35,53,11],[78,36,53,32],[78,46,53,32,"transform"],[78,55,53,41],[78,57,53,45],[79,0,54,6],[79,14,54,12,"result"],[79,20,54,18],[79,23,54,21],[79,25,54,6],[81,0,55,6],[81,15,55,11],[81,19,55,17,"key"],[81,22,55,6],[81,26,55,24,"transform"],[81,35,55,6],[81,37,55,35],[82,0,56,8],[82,16,56,14,"value"],[82,21,56,19],[82,24,56,22,"transform"],[82,33,56,31],[82,34,56,32,"key"],[82,37,56,31],[82,38,56,8],[84,0,57,8],[84,16,57,12,"value"],[84,21,57,17],[84,33,57,29,"AnimatedNode"],[84,45,57,8],[84,47,57,43],[85,0,58,10,"result"],[85,14,58,10,"result"],[85,20,58,16],[85,21,58,17,"key"],[85,24,58,16],[85,25,58,10],[85,28,58,24,"value"],[85,33,58,29],[85,34,58,30,"__getAnimatedValue"],[85,52,58,24],[85,54,58,10],[86,0,59,9],[86,13,57,8],[86,19,59,15],[87,0,61,10,"result"],[87,14,61,10,"result"],[87,20,61,16],[87,21,61,17,"key"],[87,24,61,16],[87,25,61,10],[87,28,61,24,"value"],[87,33,61,10],[88,0,62,9],[89,0,63,7],[91,0,64,6],[91,17,64,13,"result"],[91,23,64,6],[92,0,65,5],[92,9,53,11],[92,10,53,4],[93,0,66,3],[96,13,68,2],[96,33,68,19],[97,0,68,19],[99,0,69,4],[99,13,69,9,"_transforms"],[99,24,69,4],[99,25,69,21,"forEach"],[99,32,69,4],[99,33,69,29],[99,43,69,29,"transform"],[99,52,69,38],[99,54,69,42],[100,0,70,6],[100,15,70,11],[100,19,70,17,"key"],[100,22,70,6],[100,26,70,24,"transform"],[100,35,70,6],[100,37,70,35],[101,0,71,8],[101,16,71,14,"value"],[101,21,71,19],[101,24,71,22,"transform"],[101,33,71,31],[101,34,71,32,"key"],[101,37,71,31],[101,38,71,8],[103,0,72,8],[103,16,72,12,"value"],[103,21,72,17],[103,33,72,29,"AnimatedNode"],[103,45,72,8],[103,47,72,43],[104,0,73,10,"value"],[104,14,73,10,"value"],[104,19,73,15],[104,20,73,16,"__addChild"],[104,30,73,10],[104,31,73,27],[104,37,73,10],[105,0,74,9],[106,0,75,7],[107,0,76,5],[107,9,69,4],[108,0,77,3],[111,13,79,2],[111,33,79,19],[112,0,79,19],[114,0,80,4],[114,13,80,9,"_transforms"],[114,24,80,4],[114,25,80,21,"forEach"],[114,32,80,4],[114,33,80,29],[114,43,80,29,"transform"],[114,52,80,38],[114,54,80,42],[115,0,81,6],[115,15,81,11],[115,19,81,17,"key"],[115,22,81,6],[115,26,81,24,"transform"],[115,35,81,6],[115,37,81,35],[116,0,82,8],[116,16,82,14,"value"],[116,21,82,19],[116,24,82,22,"transform"],[116,33,82,31],[116,34,82,32,"key"],[116,37,82,31],[116,38,82,8],[118,0,83,8],[118,16,83,12,"value"],[118,21,83,17],[118,33,83,29,"AnimatedNode"],[118,45,83,8],[118,47,83,43],[119,0,84,10,"value"],[119,14,84,10,"value"],[119,19,84,15],[119,20,84,16,"__removeChild"],[119,33,84,10],[119,34,84,30],[119,40,84,10],[120,0,85,9],[121,0,86,7],[122,0,87,5],[122,9,80,4],[124,0,88,4],[125,0,89,3],[128,13,91,2],[128,42,91,27],[129,0,92,4],[129,12,92,10,"transConfigs"],[129,24,92,22],[129,27,92,25],[129,29,92,4],[131,0,94,4],[131,13,94,9,"_transforms"],[131,24,94,4],[131,25,94,21,"forEach"],[131,32,94,4],[131,33,94,29],[131,43,94,29,"transform"],[131,52,94,38],[131,54,94,42],[132,0,95,6],[132,15,95,11],[132,19,95,17,"key"],[132,22,95,6],[132,26,95,24,"transform"],[132,35,95,6],[132,37,95,35],[133,0,96,8],[133,16,96,14,"value"],[133,21,96,19],[133,24,96,22,"transform"],[133,33,96,31],[133,34,96,32,"key"],[133,37,96,31],[133,38,96,8],[135,0,97,8],[135,16,97,12,"value"],[135,21,97,17],[135,33,97,29,"AnimatedNode"],[135,45,97,8],[135,47,97,43],[136,0,98,10,"transConfigs"],[136,14,98,10,"transConfigs"],[136,26,98,22],[136,27,98,23,"push"],[136,31,98,10],[136,32,98,28],[137,0,99,12,"type"],[137,16,99,12,"type"],[137,20,99,16],[137,22,99,18],[137,32,98,28],[138,0,100,12,"property"],[138,16,100,12,"property"],[138,24,100,20],[138,26,100,22,"key"],[138,29,98,28],[139,0,101,12,"nodeTag"],[139,16,101,12,"nodeTag"],[139,23,101,19],[139,25,101,21,"value"],[139,30,101,26],[139,31,101,27,"__getNativeTag"],[139,45,101,21],[140,0,98,28],[140,15,98,10],[141,0,103,9],[141,13,97,8],[141,19,103,15],[142,0,104,10,"transConfigs"],[142,14,104,10,"transConfigs"],[142,26,104,22],[142,27,104,23,"push"],[142,31,104,10],[142,32,104,28],[143,0,105,12,"type"],[143,16,105,12,"type"],[143,20,105,16],[143,22,105,18],[143,30,104,28],[144,0,106,12,"property"],[144,16,106,12,"property"],[144,24,106,20],[144,26,106,22,"key"],[144,29,104,28],[145,0,107,12,"value"],[145,16,107,12,"value"],[145,21,107,17],[145,23,107,19,"NativeAnimatedHelper"],[145,43,107,39],[145,44,107,40,"transformDataType"],[145,61,107,19],[145,62,107,58,"value"],[145,67,107,19],[146,0,104,28],[146,15,104,10],[147,0,109,9],[148,0,110,7],[149,0,111,5],[149,9,94,4],[151,0,113,4,"NativeAnimatedHelper"],[151,8,113,4,"NativeAnimatedHelper"],[151,28,113,24],[151,29,113,25,"validateTransform"],[151,46,113,4],[151,47,113,43,"transConfigs"],[151,59,113,4],[152,0,114,4],[152,15,114,11],[153,0,115,6,"type"],[153,10,115,6,"type"],[153,14,115,10],[153,16,115,12],[153,27,114,11],[154,0,116,6,"transforms"],[154,10,116,6,"transforms"],[154,20,116,16],[154,22,116,18,"transConfigs"],[155,0,114,11],[155,9,114,4],[156,0,118,3],[160,4,17,32,"AnimatedWithChildren"],[160,24],[162,0,121,0,"module"],[162,2,121,0,"module"],[162,8,121,6],[162,9,121,7,"exports"],[162,16,121,0],[162,19,121,17,"AnimatedTransform"],[162,36,121,0]],"functionMap":{"names":["<global>","AnimatedTransform","constructor","__makeNative","_transforms.forEach$argument_0","__getValue","_transforms.map$argument_0","__getAnimatedValue","__attach","__detach","__getNativeConfig"],"mappings":"AAA;ACgB;ECG;GDG;EEE;6BCC;KDO;GFE;EIE;gCCC;KDW;GJC;EME;gCDC;KCY;GNC;EOE;6BJC;KIO;GPC;EQE;6BLC;KKO;GRE;ESE;6BNG;KMiB;GTO;CDC"}},"type":"js/module"}]}