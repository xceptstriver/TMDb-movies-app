{"dependencies":[{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"./InspectorAgent","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":23},"end":{"line":13,"column":50}}]}},{"name":"./JSInspector","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":20},"end":{"line":14,"column":44}}]}},{"name":"../Network/XMLHttpRequest","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":23},"end":{"line":15,"column":59}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var InspectorAgent = _$$_REQUIRE(_dependencyMap[5], \"./InspectorAgent\");\n\n  var JSInspector = _$$_REQUIRE(_dependencyMap[6], \"./JSInspector\");\n\n  var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[7], \"../Network/XMLHttpRequest\");\n\n  var Interceptor = function () {\n    function Interceptor(agent) {\n      _classCallCheck(this, Interceptor);\n\n      this._agent = agent;\n      this._requests = new Map();\n    }\n\n    _createClass(Interceptor, [{\n      key: \"getData\",\n      value: function getData(requestId) {\n        return this._requests.get(requestId);\n      }\n    }, {\n      key: \"requestSent\",\n      value: function requestSent(id, url, method, headers) {\n        var requestId = String(id);\n\n        this._requests.set(requestId, '');\n\n        var request = {\n          url: url,\n          method: method,\n          headers: headers,\n          initialPriority: 'Medium'\n        };\n        var event = {\n          requestId: requestId,\n          documentURL: '',\n          frameId: '1',\n          loaderId: '1',\n          request: request,\n          timestamp: JSInspector.getTimestamp(),\n          initiator: {\n            type: 'other'\n          },\n          type: 'Other'\n        };\n\n        this._agent.sendEvent('requestWillBeSent', event);\n      }\n    }, {\n      key: \"responseReceived\",\n      value: function responseReceived(id, url, status, headers) {\n        var requestId = String(id);\n        var response = {\n          url: url,\n          status: status,\n          statusText: String(status),\n          headers: headers,\n          requestHeaders: {},\n          mimeType: this._getMimeType(headers),\n          connectionReused: false,\n          connectionId: -1,\n          encodedDataLength: 0,\n          securityState: 'unknown'\n        };\n        var event = {\n          requestId: requestId,\n          frameId: '1',\n          loaderId: '1',\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          response: response\n        };\n\n        this._agent.sendEvent('responseReceived', event);\n      }\n    }, {\n      key: \"dataReceived\",\n      value: function dataReceived(id, data) {\n        var requestId = String(id);\n        var existingData = this._requests.get(requestId) || '';\n\n        this._requests.set(requestId, existingData.concat(data));\n\n        var event = {\n          requestId: requestId,\n          timestamp: JSInspector.getTimestamp(),\n          dataLength: data.length,\n          encodedDataLength: data.length\n        };\n\n        this._agent.sendEvent('dataReceived', event);\n      }\n    }, {\n      key: \"loadingFinished\",\n      value: function loadingFinished(id, encodedDataLength) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          encodedDataLength: encodedDataLength\n        };\n\n        this._agent.sendEvent('loadingFinished', event);\n      }\n    }, {\n      key: \"loadingFailed\",\n      value: function loadingFailed(id, error) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          errorText: error\n        };\n\n        this._agent.sendEvent('loadingFailed', event);\n      }\n    }, {\n      key: \"_getMimeType\",\n      value: function _getMimeType(headers) {\n        var contentType = headers['Content-Type'] || '';\n        return contentType.split(';')[0];\n      }\n    }]);\n\n    return Interceptor;\n  }();\n\n  var NetworkAgent = function (_InspectorAgent) {\n    _inherits(NetworkAgent, _InspectorAgent);\n\n    var _super = _createSuper(NetworkAgent);\n\n    function NetworkAgent() {\n      _classCallCheck(this, NetworkAgent);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(NetworkAgent, [{\n      key: \"enable\",\n      value: function enable(_ref) {\n        var maxResourceBufferSize = _ref.maxResourceBufferSize,\n            maxTotalBufferSize = _ref.maxTotalBufferSize;\n        this._interceptor = new Interceptor(this);\n        XMLHttpRequest.setInterceptor(this._interceptor);\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        XMLHttpRequest.setInterceptor(null);\n        this._interceptor = null;\n      }\n    }, {\n      key: \"getResponseBody\",\n      value: function getResponseBody(_ref2) {\n        var requestId = _ref2.requestId;\n        return {\n          body: this.interceptor().getData(requestId),\n          base64Encoded: false\n        };\n      }\n    }, {\n      key: \"interceptor\",\n      value: function interceptor() {\n        if (this._interceptor) {\n          return this._interceptor;\n        } else {\n          throw Error('_interceptor can not be null');\n        }\n      }\n    }]);\n\n    return NetworkAgent;\n  }(InspectorAgent);\n\n  NetworkAgent.DOMAIN = 'Network';\n  module.exports = NetworkAgent;\n});","lineCount":193,"map":[[2,0,11,0],[18,0,13,0],[18,6,13,6,"InspectorAgent"],[18,20,13,20],[18,23,13,23,"require"],[18,34,13,30],[18,73,13,0],[20,0,14,0],[20,6,14,6,"JSInspector"],[20,17,14,17],[20,20,14,20,"require"],[20,31,14,27],[20,67,14,0],[22,0,15,0],[22,6,15,6,"XMLHttpRequest"],[22,20,15,20],[22,23,15,23,"require"],[22,34,15,30],[22,82,15,0],[24,6,150,6,"Interceptor"],[24,17],[25,0,154,2],[25,25,154,14,"agent"],[25,30,154,2],[25,32,154,35],[26,0,154,35],[28,0,155,4],[28,11,155,9,"_agent"],[28,17,155,4],[28,20,155,18,"agent"],[28,25,155,4],[29,0,156,4],[29,11,156,9,"_requests"],[29,20,156,4],[29,23,156,21],[29,27,156,25,"Map"],[29,30,156,21],[29,32,156,4],[30,0,157,3],[34,13,159,2],[34,30,159,10,"requestId"],[34,39,159,2],[34,41,159,38],[35,0,160,4],[35,15,160,11],[35,20,160,16,"_requests"],[35,29,160,11],[35,30,160,26,"get"],[35,33,160,11],[35,34,160,30,"requestId"],[35,43,160,11],[35,44,160,4],[36,0,161,3],[39,13,163,2],[39,34,163,14,"id"],[39,36,163,2],[39,38,163,26,"url"],[39,41,163,2],[39,43,163,39,"method"],[39,49,163,2],[39,51,163,55,"headers"],[39,58,163,2],[39,60,163,72],[40,0,164,4],[40,12,164,10,"requestId"],[40,21,164,19],[40,24,164,22,"String"],[40,30,164,28],[40,31,164,29,"id"],[40,33,164,28],[40,34,164,4],[42,0,165,4],[42,13,165,9,"_requests"],[42,22,165,4],[42,23,165,19,"set"],[42,26,165,4],[42,27,165,23,"requestId"],[42,36,165,4],[42,38,165,34],[42,40,165,4],[44,0,167,4],[44,12,167,10,"request"],[44,19,167,26],[44,22,167,29],[45,0,168,6,"url"],[45,10,168,6,"url"],[45,13,168,9],[45,15,168,6,"url"],[45,18,167,29],[46,0,169,6,"method"],[46,10,169,6,"method"],[46,16,169,12],[46,18,169,6,"method"],[46,24,167,29],[47,0,170,6,"headers"],[47,10,170,6,"headers"],[47,17,170,13],[47,19,170,6,"headers"],[47,26,167,29],[48,0,171,6,"initialPriority"],[48,10,171,6,"initialPriority"],[48,25,171,21],[48,27,171,23],[49,0,167,29],[49,9,167,4],[50,0,173,4],[50,12,173,10,"event"],[50,17,173,39],[50,20,173,42],[51,0,174,6,"requestId"],[51,10,174,6,"requestId"],[51,19,174,15],[51,21,174,6,"requestId"],[51,30,173,42],[52,0,175,6,"documentURL"],[52,10,175,6,"documentURL"],[52,21,175,17],[52,23,175,19],[52,25,173,42],[53,0,176,6,"frameId"],[53,10,176,6,"frameId"],[53,17,176,13],[53,19,176,15],[53,22,173,42],[54,0,177,6,"loaderId"],[54,10,177,6,"loaderId"],[54,18,177,14],[54,20,177,16],[54,23,173,42],[55,0,178,6,"request"],[55,10,178,6,"request"],[55,17,178,13],[55,19,178,6,"request"],[55,26,173,42],[56,0,179,6,"timestamp"],[56,10,179,6,"timestamp"],[56,19,179,15],[56,21,179,17,"JSInspector"],[56,32,179,28],[56,33,179,29,"getTimestamp"],[56,45,179,17],[56,47,173,42],[57,0,180,6,"initiator"],[57,10,180,6,"initiator"],[57,19,180,15],[57,21,180,17],[58,0,184,8,"type"],[58,12,184,8,"type"],[58,16,184,12],[58,18,184,14],[59,0,180,17],[59,11,173,42],[60,0,186,6,"type"],[60,10,186,6,"type"],[60,14,186,10],[60,16,186,12],[61,0,173,42],[61,9,173,4],[63,0,188,4],[63,13,188,9,"_agent"],[63,19,188,4],[63,20,188,16,"sendEvent"],[63,29,188,4],[63,30,188,26],[63,49,188,4],[63,51,188,47,"event"],[63,56,188,4],[64,0,189,3],[67,13,191,2],[67,39,191,19,"id"],[67,41,191,2],[67,43,191,31,"url"],[67,46,191,2],[67,48,191,44,"status"],[67,54,191,2],[67,56,191,60,"headers"],[67,63,191,2],[67,65,191,77],[68,0,192,4],[68,12,192,10,"requestId"],[68,21,192,19],[68,24,192,22,"String"],[68,30,192,28],[68,31,192,29,"id"],[68,33,192,28],[68,34,192,4],[69,0,193,4],[69,12,193,10,"response"],[69,20,193,28],[69,23,193,31],[70,0,194,6,"url"],[70,10,194,6,"url"],[70,13,194,9],[70,15,194,6,"url"],[70,18,193,31],[71,0,195,6,"status"],[71,10,195,6,"status"],[71,16,195,12],[71,18,195,6,"status"],[71,24,193,31],[72,0,196,6,"statusText"],[72,10,196,6,"statusText"],[72,20,196,16],[72,22,196,18,"String"],[72,28,196,24],[72,29,196,25,"status"],[72,35,196,24],[72,36,193,31],[73,0,197,6,"headers"],[73,10,197,6,"headers"],[73,17,197,13],[73,19,197,6,"headers"],[73,26,193,31],[74,0,199,6,"requestHeaders"],[74,10,199,6,"requestHeaders"],[74,24,199,20],[74,26,199,22],[74,28,193,31],[75,0,200,6,"mimeType"],[75,10,200,6,"mimeType"],[75,18,200,14],[75,20,200,16],[75,25,200,21,"_getMimeType"],[75,37,200,16],[75,38,200,34,"headers"],[75,45,200,16],[75,46,193,31],[76,0,201,6,"connectionReused"],[76,10,201,6,"connectionReused"],[76,26,201,22],[76,28,201,24],[76,33,193,31],[77,0,202,6,"connectionId"],[77,10,202,6,"connectionId"],[77,22,202,18],[77,24,202,20],[77,25,202,21],[77,26,193,31],[78,0,203,6,"encodedDataLength"],[78,10,203,6,"encodedDataLength"],[78,27,203,23],[78,29,203,25],[78,30,193,31],[79,0,204,6,"securityState"],[79,10,204,6,"securityState"],[79,23,204,19],[79,25,204,21],[80,0,193,31],[80,9,193,4],[81,0,207,4],[81,12,207,10,"event"],[81,17,207,38],[81,20,207,41],[82,0,208,6,"requestId"],[82,10,208,6,"requestId"],[82,19,208,15],[82,21,208,6,"requestId"],[82,30,207,41],[83,0,209,6,"frameId"],[83,10,209,6,"frameId"],[83,17,209,13],[83,19,209,15],[83,22,207,41],[84,0,210,6,"loaderId"],[84,10,210,6,"loaderId"],[84,18,210,14],[84,20,210,16],[84,23,207,41],[85,0,211,6,"timestamp"],[85,10,211,6,"timestamp"],[85,19,211,15],[85,21,211,17,"JSInspector"],[85,32,211,28],[85,33,211,29,"getTimestamp"],[85,45,211,17],[85,47,207,41],[86,0,212,6,"type"],[86,10,212,6,"type"],[86,14,212,10],[86,16,212,12],[86,23,207,41],[87,0,213,6,"response"],[87,10,213,6,"response"],[87,18,213,14],[87,20,213,6,"response"],[88,0,207,41],[88,9,207,4],[90,0,215,4],[90,13,215,9,"_agent"],[90,19,215,4],[90,20,215,16,"sendEvent"],[90,29,215,4],[90,30,215,26],[90,48,215,4],[90,50,215,46,"event"],[90,55,215,4],[91,0,216,3],[94,13,218,2],[94,35,218,15,"id"],[94,37,218,2],[94,39,218,27,"data"],[94,43,218,2],[94,45,218,41],[95,0,219,4],[95,12,219,10,"requestId"],[95,21,219,19],[95,24,219,22,"String"],[95,30,219,28],[95,31,219,29,"id"],[95,33,219,28],[95,34,219,4],[96,0,220,4],[96,12,220,10,"existingData"],[96,24,220,22],[96,27,220,25],[96,32,220,30,"_requests"],[96,41,220,25],[96,42,220,40,"get"],[96,45,220,25],[96,46,220,44,"requestId"],[96,55,220,25],[96,60,220,58],[96,62,220,4],[98,0,221,4],[98,13,221,9,"_requests"],[98,22,221,4],[98,23,221,19,"set"],[98,26,221,4],[98,27,221,23,"requestId"],[98,36,221,4],[98,38,221,34,"existingData"],[98,50,221,46],[98,51,221,47,"concat"],[98,57,221,34],[98,58,221,54,"data"],[98,62,221,34],[98,63,221,4],[100,0,222,4],[100,12,222,10,"event"],[100,17,222,29],[100,20,222,32],[101,0,223,6,"requestId"],[101,10,223,6,"requestId"],[101,19,223,15],[101,21,223,6,"requestId"],[101,30,222,32],[102,0,224,6,"timestamp"],[102,10,224,6,"timestamp"],[102,19,224,15],[102,21,224,17,"JSInspector"],[102,32,224,28],[102,33,224,29,"getTimestamp"],[102,45,224,17],[102,47,222,32],[103,0,225,6,"dataLength"],[103,10,225,6,"dataLength"],[103,20,225,16],[103,22,225,18,"data"],[103,26,225,22],[103,27,225,23,"length"],[103,33,222,32],[104,0,226,6,"encodedDataLength"],[104,10,226,6,"encodedDataLength"],[104,27,226,23],[104,29,226,25,"data"],[104,33,226,29],[104,34,226,30,"length"],[105,0,222,32],[105,9,222,4],[107,0,228,4],[107,13,228,9,"_agent"],[107,19,228,4],[107,20,228,16,"sendEvent"],[107,29,228,4],[107,30,228,26],[107,44,228,4],[107,46,228,42,"event"],[107,51,228,4],[108,0,229,3],[111,13,231,2],[111,38,231,18,"id"],[111,40,231,2],[111,42,231,30,"encodedDataLength"],[111,59,231,2],[111,61,231,57],[112,0,232,4],[112,12,232,10,"event"],[112,17,232,37],[112,20,232,40],[113,0,233,6,"requestId"],[113,10,233,6,"requestId"],[113,19,233,15],[113,21,233,17,"String"],[113,27,233,23],[113,28,233,24,"id"],[113,30,233,23],[113,31,232,40],[114,0,234,6,"timestamp"],[114,10,234,6,"timestamp"],[114,19,234,15],[114,21,234,17,"JSInspector"],[114,32,234,28],[114,33,234,29,"getTimestamp"],[114,45,234,17],[114,47,232,40],[115,0,235,6,"encodedDataLength"],[115,10,235,6,"encodedDataLength"],[115,27,235,23],[115,29,235,25,"encodedDataLength"],[116,0,232,40],[116,9,232,4],[118,0,237,4],[118,13,237,9,"_agent"],[118,19,237,4],[118,20,237,16,"sendEvent"],[118,29,237,4],[118,30,237,26],[118,47,237,4],[118,49,237,45,"event"],[118,54,237,4],[119,0,238,3],[122,13,240,2],[122,36,240,16,"id"],[122,38,240,2],[122,40,240,28,"error"],[122,45,240,2],[122,47,240,43],[123,0,241,4],[123,12,241,10,"event"],[123,17,241,35],[123,20,241,38],[124,0,242,6,"requestId"],[124,10,242,6,"requestId"],[124,19,242,15],[124,21,242,17,"String"],[124,27,242,23],[124,28,242,24,"id"],[124,30,242,23],[124,31,241,38],[125,0,243,6,"timestamp"],[125,10,243,6,"timestamp"],[125,19,243,15],[125,21,243,17,"JSInspector"],[125,32,243,28],[125,33,243,29,"getTimestamp"],[125,45,243,17],[125,47,241,38],[126,0,244,6,"type"],[126,10,244,6,"type"],[126,14,244,10],[126,16,244,12],[126,23,241,38],[127,0,245,6,"errorText"],[127,10,245,6,"errorText"],[127,19,245,15],[127,21,245,17,"error"],[128,0,241,38],[128,9,241,4],[130,0,247,4],[130,13,247,9,"_agent"],[130,19,247,4],[130,20,247,16,"sendEvent"],[130,29,247,4],[130,30,247,26],[130,45,247,4],[130,47,247,43,"event"],[130,52,247,4],[131,0,248,3],[134,13,250,2],[134,35,250,15,"headers"],[134,42,250,2],[134,44,250,40],[135,0,251,4],[135,12,251,10,"contentType"],[135,23,251,21],[135,26,251,24,"headers"],[135,33,251,31],[135,34,251,32],[135,48,251,31],[135,49,251,24],[135,53,251,51],[135,55,251,4],[136,0,252,4],[136,15,252,11,"contentType"],[136,26,252,22],[136,27,252,23,"split"],[136,32,252,11],[136,33,252,29],[136,36,252,11],[136,38,252,34],[136,39,252,11],[136,40,252,4],[137,0,253,3],[143,6,262,6,"NetworkAgent"],[143,18],[156,13,268,2],[156,35,268,66],[157,0,268,66],[157,12,268,10,"maxResourceBufferSize"],[157,33,268,66],[157,41,268,10,"maxResourceBufferSize"],[157,62,268,66],[158,0,268,66],[158,12,268,33,"maxTotalBufferSize"],[158,30,268,66],[158,38,268,33,"maxTotalBufferSize"],[158,56,268,66],[159,0,269,4],[159,13,269,9,"_interceptor"],[159,25,269,4],[159,28,269,24],[159,32,269,28,"Interceptor"],[159,43,269,24],[159,44,269,40],[159,48,269,24],[159,49,269,4],[160,0,270,4,"XMLHttpRequest"],[160,8,270,4,"XMLHttpRequest"],[160,22,270,18],[160,23,270,19,"setInterceptor"],[160,37,270,4],[160,38,270,34],[160,43,270,39,"_interceptor"],[160,55,270,4],[161,0,271,3],[164,13,273,2],[164,32,273,12],[165,0,274,4,"XMLHttpRequest"],[165,8,274,4,"XMLHttpRequest"],[165,22,274,18],[165,23,274,19,"setInterceptor"],[165,37,274,4],[165,38,274,34],[165,42,274,4],[166,0,275,4],[166,13,275,9,"_interceptor"],[166,25,275,4],[166,28,275,24],[166,32,275,4],[167,0,276,3],[170,13,278,2],[170,45,287,4],[171,0,287,4],[171,12,279,4,"requestId"],[171,21,287,4],[171,30,279,4,"requestId"],[171,39,287,4],[172,0,288,4],[172,15,288,11],[173,0,288,12,"body"],[173,10,288,12,"body"],[173,14,288,16],[173,16,288,18],[173,21,288,23,"interceptor"],[173,32,288,18],[173,35,288,37,"getData"],[173,42,288,18],[173,43,288,45,"requestId"],[173,52,288,18],[173,53,288,11],[174,0,288,57,"base64Encoded"],[174,10,288,57,"base64Encoded"],[174,23,288,70],[174,25,288,72],[175,0,288,11],[175,9,288,4],[176,0,289,3],[179,13,291,2],[179,36,291,29],[180,0,292,4],[180,12,292,8],[180,17,292,13,"_interceptor"],[180,29,292,4],[180,31,292,27],[181,0,293,6],[181,17,293,13],[181,22,293,18,"_interceptor"],[181,34,293,6],[182,0,294,5],[182,9,292,4],[182,15,294,11],[183,0,295,6],[183,16,295,12,"Error"],[183,21,295,17],[183,22,295,18],[183,52,295,17],[183,53,295,6],[184,0,296,5],[185,0,297,3],[189,4,262,27,"InspectorAgent"],[189,18],[191,0,262,6,"NetworkAgent"],[191,2,262,6,"NetworkAgent"],[191,14],[191,15,263,9,"DOMAIN"],[191,21],[191,24,263,48],[191,33],[192,0,300,0,"module"],[192,2,300,0,"module"],[192,8,300,6],[192,9,300,7,"exports"],[192,16,300,0],[192,19,300,17,"NetworkAgent"],[192,31,300,0]],"functionMap":{"names":["<global>","Interceptor","Interceptor#constructor","Interceptor#getData","Interceptor#requestSent","Interceptor#responseReceived","Interceptor#dataReceived","Interceptor#loadingFinished","Interceptor#loadingFailed","Interceptor#_getMimeType","NetworkAgent","enable","disable","getResponseBody","interceptor"],"mappings":"AAA;ACqJ;ECI;GDG;EEE;GFE;EGE;GH0B;EIE;GJyB;EKE;GLW;EME;GNO;EOE;GPQ;EQE;GRG;CDC;AUQ;ECM;GDG;EEE;GFG;EGE;GHW;EIE;GJM;CVC"}},"type":"js/module"}]}