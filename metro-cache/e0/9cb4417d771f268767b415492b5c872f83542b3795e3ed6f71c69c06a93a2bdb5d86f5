{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"./NativeWebSocketModule","data":{"isAsync":false,"locs":[]}},{"name":"../Blob/Blob","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":13},"end":{"line":13,"column":36}}]}},{"name":"../Blob/BlobManager","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":20},"end":{"line":14,"column":50}}]}},{"name":"event-target-shim","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":20},"end":{"line":15,"column":48}}]}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false,"locs":[{"start":{"line":16,"column":27},"end":{"line":16,"column":72}}]}},{"name":"./WebSocketEvent","data":{"isAsync":false,"locs":[{"start":{"line":17,"column":23},"end":{"line":17,"column":50}}]}},{"name":"base64-js","data":{"isAsync":false,"locs":[{"start":{"line":19,"column":15},"end":{"line":19,"column":35}}]}},{"name":"../Utilities/binaryToBase64","data":{"isAsync":false,"locs":[{"start":{"line":20,"column":23},"end":{"line":20,"column":61}}]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":21,"column":18},"end":{"line":21,"column":38}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeWebSocketModule\"));\n\n  var _excluded = [\"headers\"];\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var Blob = _$$_REQUIRE(_dependencyMap[8], \"../Blob/Blob\");\n\n  var BlobManager = _$$_REQUIRE(_dependencyMap[9], \"../Blob/BlobManager\");\n\n  var EventTarget = _$$_REQUIRE(_dependencyMap[10], \"event-target-shim\");\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[11], \"../EventEmitter/NativeEventEmitter\");\n\n  var WebSocketEvent = _$$_REQUIRE(_dependencyMap[12], \"./WebSocketEvent\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[13], \"base64-js\");\n\n  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[14], \"../Utilities/binaryToBase64\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[15], \"invariant\");\n\n  var CONNECTING = 0;\n  var OPEN = 1;\n  var CLOSING = 2;\n  var CLOSED = 3;\n  var CLOSE_NORMAL = 1000;\n  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n  var nextWebSocketId = 0;\n\n  var WebSocket = function (_ref) {\n    (0, _inherits2.default)(WebSocket, _ref);\n\n    var _super = _createSuper(WebSocket);\n\n    function WebSocket(url, protocols, options) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, WebSocket);\n      _this = _super.call(this);\n      _this.CONNECTING = CONNECTING;\n      _this.OPEN = OPEN;\n      _this.CLOSING = CLOSING;\n      _this.CLOSED = CLOSED;\n      _this.readyState = CONNECTING;\n\n      if (typeof protocols === 'string') {\n        protocols = [protocols];\n      }\n\n      var _ref2 = options || {},\n          _ref2$headers = _ref2.headers,\n          headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n          unrecognized = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n\n      if (unrecognized && typeof unrecognized.origin === 'string') {\n        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n        headers.origin = unrecognized.origin;\n        delete unrecognized.origin;\n      }\n\n      if (Object.keys(unrecognized).length > 0) {\n        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n      }\n\n      if (!Array.isArray(protocols)) {\n        protocols = null;\n      }\n\n      _this._eventEmitter = new NativeEventEmitter(_NativeWebSocketModule.default);\n      _this._socketId = nextWebSocketId++;\n\n      _this._registerEvents();\n\n      _NativeWebSocketModule.default.connect(url, protocols, {\n        headers: headers\n      }, _this._socketId);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(WebSocket, [{\n      key: \"binaryType\",\n      get: function get() {\n        return this._binaryType;\n      },\n      set: function set(binaryType) {\n        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n          throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n        }\n\n        if (this._binaryType === 'blob' || binaryType === 'blob') {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n          if (binaryType === 'blob') {\n            BlobManager.addWebSocketHandler(this._socketId);\n          } else {\n            BlobManager.removeWebSocketHandler(this._socketId);\n          }\n        }\n\n        this._binaryType = binaryType;\n      }\n    }, {\n      key: \"close\",\n      value: function close(code, reason) {\n        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n          return;\n        }\n\n        this.readyState = this.CLOSING;\n\n        this._close(code, reason);\n      }\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        if (data instanceof Blob) {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n          BlobManager.sendOverSocket(data, this._socketId);\n          return;\n        }\n\n        if (typeof data === 'string') {\n          _NativeWebSocketModule.default.send(data, this._socketId);\n\n          return;\n        }\n\n        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n          _NativeWebSocketModule.default.sendBinary(binaryToBase64(data), this._socketId);\n\n          return;\n        }\n\n        throw new Error('Unsupported data type');\n      }\n    }, {\n      key: \"ping\",\n      value: function ping() {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        _NativeWebSocketModule.default.ping(this._socketId);\n      }\n    }, {\n      key: \"_close\",\n      value: function _close(code, reason) {\n        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n        var closeReason = typeof reason === 'string' ? reason : '';\n\n        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);\n\n        if (BlobManager.isAvailable && this._binaryType === 'blob') {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n    }, {\n      key: \"_unregisterEvents\",\n      value: function _unregisterEvents() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"_registerEvents\",\n      value: function _registerEvents() {\n        var _this2 = this;\n\n        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          var data = ev.data;\n\n          switch (ev.type) {\n            case 'binary':\n              data = base64.toByteArray(ev.data).buffer;\n              break;\n\n            case 'blob':\n              data = BlobManager.createFromOptions(ev.data);\n              break;\n          }\n\n          _this2.dispatchEvent(new WebSocketEvent('message', {\n            data: data\n          }));\n        }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.OPEN;\n          _this2.protocol = ev.protocol;\n\n          _this2.dispatchEvent(new WebSocketEvent('open'));\n        }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('error', {\n            message: ev.message\n          }));\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            message: ev.message\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        })];\n      }\n    }]);\n    return WebSocket;\n  }(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\n\n  WebSocket.CONNECTING = CONNECTING;\n  WebSocket.OPEN = OPEN;\n  WebSocket.CLOSING = CLOSING;\n  WebSocket.CLOSED = CLOSED;\n  module.exports = WebSocket;\n});","lineCount":269,"map":[[2,0,11,0],[18,0,24,0],[26,0,13,0],[26,6,13,6,"Blob"],[26,10,13,10],[26,13,13,13,"require"],[26,24,13,20],[26,59,13,0],[28,0,14,0],[28,6,14,6,"BlobManager"],[28,17,14,17],[28,20,14,20,"require"],[28,31,14,27],[28,73,14,0],[30,0,15,0],[30,6,15,6,"EventTarget"],[30,17,15,17],[30,20,15,20,"require"],[30,31,15,27],[30,72,15,0],[32,0,16,0],[32,6,16,6,"NativeEventEmitter"],[32,24,16,24],[32,27,16,27,"require"],[32,38,16,34],[32,96,16,0],[34,0,17,0],[34,6,17,6,"WebSocketEvent"],[34,20,17,20],[34,23,17,23,"require"],[34,34,17,30],[34,74,17,0],[36,0,19,0],[36,6,19,6,"base64"],[36,12,19,12],[36,15,19,15,"require"],[36,26,19,22],[36,59,19,0],[38,0,20,0],[38,6,20,6,"binaryToBase64"],[38,20,20,20],[38,23,20,23,"require"],[38,34,20,30],[38,85,20,0],[40,0,21,0],[40,6,21,6,"invariant"],[40,15,21,15],[40,18,21,18,"require"],[40,29,21,25],[40,62,21,0],[42,0,40,0],[42,6,40,6,"CONNECTING"],[42,16,40,16],[42,19,40,19],[42,20,40,0],[43,0,41,0],[43,6,41,6,"OPEN"],[43,10,41,10],[43,13,41,13],[43,14,41,0],[44,0,42,0],[44,6,42,6,"CLOSING"],[44,13,42,13],[44,16,42,16],[44,17,42,0],[45,0,43,0],[45,6,43,6,"CLOSED"],[45,12,43,12],[45,15,43,15],[45,16,43,0],[46,0,45,0],[46,6,45,6,"CLOSE_NORMAL"],[46,18,45,18],[46,21,45,21],[46,25,45,0],[47,0,47,0],[47,6,47,6,"WEBSOCKET_EVENTS"],[47,22,47,22],[47,25,47,25],[47,26,47,26],[47,33,47,25],[47,35,47,35],[47,42,47,25],[47,44,47,44],[47,53,47,25],[47,55,47,55],[47,61,47,25],[47,62,47,0],[48,0,49,0],[48,6,49,4,"nextWebSocketId"],[48,21,49,19],[48,24,49,22],[48,25,49,0],[50,6,57,6,"WebSocket"],[50,15],[55,0,84,2],[55,23,85,4,"url"],[55,26,84,2],[55,28,86,4,"protocols"],[55,37,84,2],[55,39,87,4,"options"],[55,46,84,2],[55,48,88,4],[56,0,88,4],[58,0,88,4],[59,0,89,4],[60,0,88,4],[60,12,63,2,"CONNECTING"],[60,22,88,4],[60,25,63,23,"CONNECTING"],[60,35,88,4],[61,0,88,4],[61,12,64,2,"OPEN"],[61,16,88,4],[61,19,64,17,"OPEN"],[61,23,88,4],[62,0,88,4],[62,12,65,2,"CLOSING"],[62,19,88,4],[62,22,65,20,"CLOSING"],[62,29,88,4],[63,0,88,4],[63,12,66,2,"CLOSED"],[63,18,88,4],[63,21,66,19,"CLOSED"],[63,27,88,4],[64,0,88,4],[64,12,81,2,"readyState"],[64,22,88,4],[64,25,81,23,"CONNECTING"],[64,35,88,4],[66,0,90,4],[66,10,90,8],[66,17,90,15,"protocols"],[66,26,90,8],[66,31,90,29],[66,39,90,4],[66,41,90,39],[67,0,91,6,"protocols"],[67,8,91,6,"protocols"],[67,17,91,15],[67,20,91,18],[67,21,91,19,"protocols"],[67,30,91,18],[67,31,91,6],[68,0,92,5],[70,0,94,4],[70,18,94,44,"options"],[70,25,94,51],[70,29,94,55],[70,31,94,4],[71,0,94,4],[71,32,94,11,"headers"],[71,39,94,4],[72,0,94,4],[72,10,94,11,"headers"],[72,17,94,4],[72,47,94,21],[72,49,94,4],[73,0,94,4],[73,10,94,28,"unrecognized"],[73,22,94,4],[75,0,100,4],[75,10,100,8,"unrecognized"],[75,22,100,20],[75,26,100,24],[75,33,100,31,"unrecognized"],[75,45,100,43],[75,46,100,44,"origin"],[75,52,100,24],[75,57,100,55],[75,65,100,4],[75,67,100,65],[76,0,101,6,"console"],[76,8,101,6,"console"],[76,15,101,13],[76,16,101,14,"warn"],[76,20,101,6],[76,21,102,8],[76,126,101,6],[77,0,107,6,"headers"],[77,8,107,6,"headers"],[77,15,107,13],[77,16,107,14,"origin"],[77,22,107,6],[77,25,107,23,"unrecognized"],[77,37,107,35],[77,38,107,36,"origin"],[77,44,107,6],[78,0,111,6],[78,15,111,13,"unrecognized"],[78,27,111,25],[78,28,111,26,"origin"],[78,34,111,6],[79,0,112,5],[81,0,115,4],[81,10,115,8,"Object"],[81,16,115,14],[81,17,115,15,"keys"],[81,21,115,8],[81,22,115,20,"unrecognized"],[81,34,115,8],[81,36,115,34,"length"],[81,42,115,8],[81,45,115,43],[81,46,115,4],[81,48,115,46],[82,0,116,6,"console"],[82,8,116,6,"console"],[82,15,116,13],[82,16,116,14,"warn"],[82,20,116,6],[82,21,117,8],[82,71,118,10,"Object"],[82,77,118,16],[82,78,118,17,"keys"],[82,82,118,10],[82,83,118,22,"unrecognized"],[82,95,118,10],[82,97,118,36,"join"],[82,101,118,10],[82,102,118,41],[82,108,118,10],[82,109,117,8],[82,112,119,10],[82,117,117,8],[82,120,120,10],[82,164,116,6],[83,0,122,5],[85,0,124,4],[85,10,124,8],[85,11,124,9,"Array"],[85,16,124,14],[85,17,124,15,"isArray"],[85,24,124,9],[85,25,124,23,"protocols"],[85,34,124,9],[85,35,124,4],[85,37,124,35],[86,0,125,6,"protocols"],[86,8,125,6,"protocols"],[86,17,125,15],[86,20,125,18],[86,24,125,6],[87,0,126,5],[89,0,128,4],[89,12,128,9,"_eventEmitter"],[89,25,128,4],[89,28,128,25],[89,32,128,29,"NativeEventEmitter"],[89,50,128,25],[89,51,128,48,"NativeWebSocketModule"],[89,81,128,25],[89,82,128,4],[90,0,129,4],[90,12,129,9,"_socketId"],[90,21,129,4],[90,24,129,21,"nextWebSocketId"],[90,39,129,36],[90,41,129,4],[92,0,130,4],[92,12,130,9,"_registerEvents"],[92,27,130,4],[94,0,131,4,"NativeWebSocketModule"],[94,37,131,26,"connect"],[94,44,131,4],[94,45,131,34,"url"],[94,48,131,4],[94,50,131,39,"protocols"],[94,59,131,4],[94,61,131,50],[95,0,131,51,"headers"],[95,8,131,51,"headers"],[95,15,131,58],[95,17,131,51,"headers"],[96,0,131,50],[96,7,131,4],[96,9,131,61],[96,15,131,66,"_socketId"],[96,24,131,4],[98,0,88,4],[99,0,132,3],[103,11,134,2],[103,26,134,32],[104,0,135,4],[104,15,135,11],[104,20,135,16,"_binaryType"],[104,31,135,4],[105,0,136,3],[105,7],[106,11,138,2],[106,24,138,17,"binaryType"],[106,34,138,2],[106,36,138,47],[107,0,139,4],[107,12,139,8,"binaryType"],[107,22,139,18],[107,27,139,23],[107,33,139,8],[107,37,139,33,"binaryType"],[107,47,139,43],[107,52,139,48],[107,65,139,4],[107,67,139,63],[108,0,140,6],[108,16,140,12],[108,20,140,16,"Error"],[108,25,140,12],[108,26,140,22],[108,77,140,12],[108,78,140,6],[109,0,141,5],[111,0,142,4],[111,12,142,8],[111,17,142,13,"_binaryType"],[111,28,142,8],[111,33,142,29],[111,39,142,8],[111,43,142,39,"binaryType"],[111,53,142,49],[111,58,142,54],[111,64,142,4],[111,66,142,62],[112,0,143,6,"invariant"],[112,10,143,6,"invariant"],[112,19,143,15],[112,20,144,8,"BlobManager"],[112,31,144,19],[112,32,144,20,"isAvailable"],[112,43,143,15],[112,45,145,8],[112,100,143,15],[112,101,143,6],[114,0,147,6],[114,14,147,10,"binaryType"],[114,24,147,20],[114,29,147,25],[114,35,147,6],[114,37,147,33],[115,0,148,8,"BlobManager"],[115,12,148,8,"BlobManager"],[115,23,148,19],[115,24,148,20,"addWebSocketHandler"],[115,43,148,8],[115,44,148,40],[115,49,148,45,"_socketId"],[115,58,148,8],[116,0,149,7],[116,11,147,6],[116,17,149,13],[117,0,150,8,"BlobManager"],[117,12,150,8,"BlobManager"],[117,23,150,19],[117,24,150,20,"removeWebSocketHandler"],[117,46,150,8],[117,47,150,43],[117,52,150,48,"_socketId"],[117,61,150,8],[118,0,151,7],[119,0,152,5],[121,0,153,4],[121,13,153,9,"_binaryType"],[121,24,153,4],[121,27,153,23,"binaryType"],[121,37,153,4],[122,0,154,3],[125,13,156,2],[125,28,156,8,"code"],[125,32,156,2],[125,34,156,23,"reason"],[125,40,156,2],[125,42,156,46],[126,0,157,4],[126,12,157,8],[126,17,157,13,"readyState"],[126,27,157,8],[126,32,157,28],[126,37,157,33,"CLOSING"],[126,44,157,8],[126,48,157,44],[126,53,157,49,"readyState"],[126,63,157,44],[126,68,157,64],[126,73,157,69,"CLOSED"],[126,79,157,4],[126,81,157,77],[127,0,158,6],[128,0,159,5],[130,0,161,4],[130,13,161,9,"readyState"],[130,23,161,4],[130,26,161,22],[130,31,161,27,"CLOSING"],[130,38,161,4],[132,0,162,4],[132,13,162,9,"_close"],[132,19,162,4],[132,20,162,16,"code"],[132,24,162,4],[132,26,162,22,"reason"],[132,32,162,4],[133,0,163,3],[136,13,165,2],[136,27,165,7,"data"],[136,31,165,2],[136,33,165,66],[137,0,166,4],[137,12,166,8],[137,17,166,13,"readyState"],[137,27,166,8],[137,32,166,28],[137,37,166,33,"CONNECTING"],[137,47,166,4],[137,49,166,45],[138,0,167,6],[138,16,167,12],[138,20,167,16,"Error"],[138,25,167,12],[138,26,167,22],[138,45,167,12],[138,46,167,6],[139,0,168,5],[141,0,170,4],[141,12,170,8,"data"],[141,16,170,12],[141,28,170,24,"Blob"],[141,32,170,4],[141,34,170,30],[142,0,171,6,"invariant"],[142,10,171,6,"invariant"],[142,19,171,15],[142,20,172,8,"BlobManager"],[142,31,172,19],[142,32,172,20,"isAvailable"],[142,43,171,15],[142,45,173,8],[142,100,171,15],[142,101,171,6],[143,0,175,6,"BlobManager"],[143,10,175,6,"BlobManager"],[143,21,175,17],[143,22,175,18,"sendOverSocket"],[143,36,175,6],[143,37,175,33,"data"],[143,41,175,6],[143,43,175,39],[143,48,175,44,"_socketId"],[143,57,175,6],[144,0,176,6],[145,0,177,5],[147,0,179,4],[147,12,179,8],[147,19,179,15,"data"],[147,23,179,8],[147,28,179,24],[147,36,179,4],[147,38,179,34],[148,0,180,6,"NativeWebSocketModule"],[148,41,180,28,"send"],[148,45,180,6],[148,46,180,33,"data"],[148,50,180,6],[148,52,180,39],[148,57,180,44,"_socketId"],[148,66,180,6],[150,0,181,6],[151,0,182,5],[153,0,184,4],[153,12,184,8,"data"],[153,16,184,12],[153,28,184,24,"ArrayBuffer"],[153,39,184,8],[153,43,184,39,"ArrayBuffer"],[153,54,184,50],[153,55,184,51,"isView"],[153,61,184,39],[153,62,184,58,"data"],[153,66,184,39],[153,67,184,4],[153,69,184,65],[154,0,185,6,"NativeWebSocketModule"],[154,41,185,28,"sendBinary"],[154,51,185,6],[154,52,185,39,"binaryToBase64"],[154,66,185,53],[154,67,185,54,"data"],[154,71,185,53],[154,72,185,6],[154,74,185,61],[154,79,185,66,"_socketId"],[154,88,185,6],[156,0,186,6],[157,0,187,5],[159,0,189,4],[159,14,189,10],[159,18,189,14,"Error"],[159,23,189,10],[159,24,189,20],[159,47,189,10],[159,48,189,4],[160,0,190,3],[163,13,192,2],[163,29,192,15],[164,0,193,4],[164,12,193,8],[164,17,193,13,"readyState"],[164,27,193,8],[164,32,193,28],[164,37,193,33,"CONNECTING"],[164,47,193,4],[164,49,193,45],[165,0,194,6],[165,16,194,12],[165,20,194,16,"Error"],[165,25,194,12],[165,26,194,22],[165,45,194,12],[165,46,194,6],[166,0,195,5],[168,0,197,4,"NativeWebSocketModule"],[168,39,197,26,"ping"],[168,43,197,4],[168,44,197,31],[168,49,197,36,"_socketId"],[168,58,197,4],[169,0,198,3],[172,13,200,2],[172,29,200,9,"code"],[172,33,200,2],[172,35,200,24,"reason"],[172,41,200,2],[172,43,200,47],[173,0,202,4],[173,12,202,10,"statusCode"],[173,22,202,20],[173,25,202,23],[173,32,202,30,"code"],[173,36,202,23],[173,41,202,39],[173,49,202,23],[173,52,202,50,"code"],[173,56,202,23],[173,59,202,57,"CLOSE_NORMAL"],[173,71,202,4],[174,0,203,4],[174,12,203,10,"closeReason"],[174,23,203,21],[174,26,203,24],[174,33,203,31,"reason"],[174,39,203,24],[174,44,203,42],[174,52,203,24],[174,55,203,53,"reason"],[174,61,203,24],[174,64,203,62],[174,66,203,4],[176,0,204,4,"NativeWebSocketModule"],[176,39,204,26,"close"],[176,44,204,4],[176,45,204,32,"statusCode"],[176,55,204,4],[176,57,204,44,"closeReason"],[176,68,204,4],[176,70,204,57],[176,75,204,62,"_socketId"],[176,84,204,4],[178,0,206,4],[178,12,206,8,"BlobManager"],[178,23,206,19],[178,24,206,20,"isAvailable"],[178,35,206,8],[178,39,206,35],[178,44,206,40,"_binaryType"],[178,55,206,35],[178,60,206,56],[178,66,206,4],[178,68,206,64],[179,0,207,6,"BlobManager"],[179,10,207,6,"BlobManager"],[179,21,207,17],[179,22,207,18,"removeWebSocketHandler"],[179,44,207,6],[179,45,207,41],[179,50,207,46,"_socketId"],[179,59,207,6],[180,0,208,5],[181,0,209,3],[184,13,211,2],[184,42,211,28],[185,0,212,4],[185,13,212,9,"_subscriptions"],[185,27,212,4],[185,28,212,24,"forEach"],[185,35,212,4],[185,36,212,32],[185,46,212,32,"e"],[185,47,212,33],[186,0,212,33],[186,17,212,37,"e"],[186,18,212,38],[186,19,212,39,"remove"],[186,25,212,37],[186,27,212,33],[187,0,212,33],[187,9,212,4],[189,0,213,4],[189,13,213,9,"_subscriptions"],[189,27,213,4],[189,30,213,26],[189,32,213,4],[190,0,214,3],[193,13,216,2],[193,40,216,26],[194,0,216,26],[196,0,217,4],[196,13,217,9,"_subscriptions"],[196,27,217,4],[196,30,217,26],[196,31,218,6],[196,36,218,11,"_eventEmitter"],[196,49,218,6],[196,50,218,25,"addListener"],[196,61,218,6],[196,62,218,37],[196,80,218,6],[196,82,218,57],[196,92,218,57,"ev"],[196,94,218,59],[196,96,218,63],[197,0,219,8],[197,14,219,12,"ev"],[197,16,219,14],[197,17,219,15,"id"],[197,19,219,12],[197,24,219,22],[197,30,219,26],[197,31,219,27,"_socketId"],[197,40,219,8],[197,42,219,38],[198,0,220,10],[199,0,221,9],[201,0,222,8],[201,14,222,12,"data"],[201,18,222,16],[201,21,222,19,"ev"],[201,23,222,21],[201,24,222,22,"data"],[201,28,222,8],[203,0,223,8],[203,18,223,16,"ev"],[203,20,223,18],[203,21,223,19,"type"],[203,25,223,8],[204,0,224,10],[204,17,224,15],[204,25,224,10],[205,0,225,12,"data"],[205,14,225,12,"data"],[205,18,225,16],[205,21,225,19,"base64"],[205,27,225,25],[205,28,225,26,"toByteArray"],[205,39,225,19],[205,40,225,38,"ev"],[205,42,225,40],[205,43,225,41,"data"],[205,47,225,19],[205,49,225,47,"buffer"],[205,55,225,12],[206,0,226,12],[208,0,227,10],[208,17,227,15],[208,23,227,10],[209,0,228,12,"data"],[209,14,228,12,"data"],[209,18,228,16],[209,21,228,19,"BlobManager"],[209,32,228,30],[209,33,228,31,"createFromOptions"],[209,50,228,19],[209,51,228,49,"ev"],[209,53,228,51],[209,54,228,52,"data"],[209,58,228,19],[209,59,228,12],[210,0,229,12],[211,0,223,8],[213,0,231,8],[213,10,231,8],[213,16,231,12],[213,17,231,13,"dispatchEvent"],[213,30,231,8],[213,31,231,27],[213,35,231,31,"WebSocketEvent"],[213,49,231,27],[213,50,231,46],[213,59,231,27],[213,61,231,57],[214,0,231,58,"data"],[214,12,231,58,"data"],[214,16,231,62],[214,18,231,58,"data"],[215,0,231,57],[215,11,231,27],[215,12,231,8],[216,0,232,7],[216,9,218,6],[216,10,217,26],[216,12,233,6],[216,17,233,11,"_eventEmitter"],[216,30,233,6],[216,31,233,25,"addListener"],[216,42,233,6],[216,43,233,37],[216,58,233,6],[216,60,233,54],[216,70,233,54,"ev"],[216,72,233,56],[216,74,233,60],[217,0,234,8],[217,14,234,12,"ev"],[217,16,234,14],[217,17,234,15,"id"],[217,19,234,12],[217,24,234,22],[217,30,234,26],[217,31,234,27,"_socketId"],[217,40,234,8],[217,42,234,38],[218,0,235,10],[219,0,236,9],[221,0,237,8],[221,10,237,8],[221,16,237,12],[221,17,237,13,"readyState"],[221,27,237,8],[221,30,237,26],[221,36,237,30],[221,37,237,31,"OPEN"],[221,41,237,8],[222,0,238,8],[222,10,238,8],[222,16,238,12],[222,17,238,13,"protocol"],[222,25,238,8],[222,28,238,24,"ev"],[222,30,238,26],[222,31,238,27,"protocol"],[222,39,238,8],[224,0,239,8],[224,10,239,8],[224,16,239,12],[224,17,239,13,"dispatchEvent"],[224,30,239,8],[224,31,239,27],[224,35,239,31,"WebSocketEvent"],[224,49,239,27],[224,50,239,46],[224,56,239,27],[224,57,239,8],[225,0,240,7],[225,9,233,6],[225,10,217,26],[225,12,241,6],[225,17,241,11,"_eventEmitter"],[225,30,241,6],[225,31,241,25,"addListener"],[225,42,241,6],[225,43,241,37],[225,60,241,6],[225,62,241,56],[225,72,241,56,"ev"],[225,74,241,58],[225,76,241,62],[226,0,242,8],[226,14,242,12,"ev"],[226,16,242,14],[226,17,242,15,"id"],[226,19,242,12],[226,24,242,22],[226,30,242,26],[226,31,242,27,"_socketId"],[226,40,242,8],[226,42,242,38],[227,0,243,10],[228,0,244,9],[230,0,245,8],[230,10,245,8],[230,16,245,12],[230,17,245,13,"readyState"],[230,27,245,8],[230,30,245,26],[230,36,245,30],[230,37,245,31,"CLOSED"],[230,43,245,8],[232,0,246,8],[232,10,246,8],[232,16,246,12],[232,17,246,13,"dispatchEvent"],[232,30,246,8],[232,31,247,10],[232,35,247,14,"WebSocketEvent"],[232,49,247,10],[232,50,247,29],[232,57,247,10],[232,59,247,38],[233,0,248,12,"code"],[233,12,248,12,"code"],[233,16,248,16],[233,18,248,18,"ev"],[233,20,248,20],[233,21,248,21,"code"],[233,25,247,38],[234,0,249,12,"reason"],[234,12,249,12,"reason"],[234,18,249,18],[234,20,249,20,"ev"],[234,22,249,22],[234,23,249,23,"reason"],[235,0,247,38],[235,11,247,10],[235,12,246,8],[237,0,252,8],[237,10,252,8],[237,16,252,12],[237,17,252,13,"_unregisterEvents"],[237,34,252,8],[239,0,253,8],[239,10,253,8],[239,16,253,12],[239,17,253,13,"close"],[239,22,253,8],[240,0,254,7],[240,9,241,6],[240,10,217,26],[240,12,255,6],[240,17,255,11,"_eventEmitter"],[240,30,255,6],[240,31,255,25,"addListener"],[240,42,255,6],[240,43,255,37],[240,60,255,6],[240,62,255,56],[240,72,255,56,"ev"],[240,74,255,58],[240,76,255,62],[241,0,256,8],[241,14,256,12,"ev"],[241,16,256,14],[241,17,256,15,"id"],[241,19,256,12],[241,24,256,22],[241,30,256,26],[241,31,256,27,"_socketId"],[241,40,256,8],[241,42,256,38],[242,0,257,10],[243,0,258,9],[245,0,259,8],[245,10,259,8],[245,16,259,12],[245,17,259,13,"readyState"],[245,27,259,8],[245,30,259,26],[245,36,259,30],[245,37,259,31,"CLOSED"],[245,43,259,8],[247,0,260,8],[247,10,260,8],[247,16,260,12],[247,17,260,13,"dispatchEvent"],[247,30,260,8],[247,31,261,10],[247,35,261,14,"WebSocketEvent"],[247,49,261,10],[247,50,261,29],[247,57,261,10],[247,59,261,38],[248,0,262,12,"message"],[248,12,262,12,"message"],[248,19,262,19],[248,21,262,21,"ev"],[248,23,262,23],[248,24,262,24,"message"],[249,0,261,38],[249,11,261,10],[249,12,260,8],[251,0,265,8],[251,10,265,8],[251,16,265,12],[251,17,265,13,"dispatchEvent"],[251,30,265,8],[251,31,266,10],[251,35,266,14,"WebSocketEvent"],[251,49,266,10],[251,50,266,29],[251,57,266,10],[251,59,266,38],[252,0,267,12,"message"],[252,12,267,12,"message"],[252,19,267,19],[252,21,267,21,"ev"],[252,23,267,23],[252,24,267,24,"message"],[253,0,266,38],[253,11,266,10],[253,12,265,8],[255,0,270,8],[255,10,270,8],[255,16,270,12],[255,17,270,13,"_unregisterEvents"],[255,34,270,8],[257,0,271,8],[257,10,271,8],[257,16,271,12],[257,17,271,13,"close"],[257,22,271,8],[258,0,272,7],[258,9,255,6],[258,10,217,26],[258,11,217,4],[259,0,274,3],[262,4,57,25,"EventTarget"],[262,15,57,36],[262,21,57,25],[262,30,57,40,"WEBSOCKET_EVENTS"],[262,46,57,25],[262,47],[264,0,57,6,"WebSocket"],[264,2,57,6,"WebSocket"],[264,11],[264,12,58,9,"CONNECTING"],[264,22],[264,25,58,30,"CONNECTING"],[264,35],[265,0,57,6,"WebSocket"],[265,2,57,6,"WebSocket"],[265,11],[265,12,59,9,"OPEN"],[265,16],[265,19,59,24,"OPEN"],[265,23],[266,0,57,6,"WebSocket"],[266,2,57,6,"WebSocket"],[266,11],[266,12,60,9,"CLOSING"],[266,19],[266,22,60,27,"CLOSING"],[266,29],[267,0,57,6,"WebSocket"],[267,2,57,6,"WebSocket"],[267,11],[267,12,61,9,"CLOSED"],[267,18],[267,21,61,26,"CLOSED"],[267,27],[268,0,277,0,"module"],[268,2,277,0,"module"],[268,8,277,6],[268,9,277,7,"exports"],[268,16,277,0],[268,19,277,17,"WebSocket"],[268,28,277,0]],"functionMap":{"names":["<global>","WebSocket","constructor","get__binaryType","set__binaryType","close","send","ping","_close","_unregisterEvents","_subscriptions.forEach$argument_0","_registerEvents","_eventEmitter.addListener$argument_1"],"mappings":"AAA;ACwD;EC2B;GDgD;EEE;GFE;EGE;GHgB;EIE;GJO;EKE;GLyB;EME;GNM;EOE;GPS;EQE;gCCC,eD;GRE;EUE;yDCE;ODc;sDCC;ODO;wDCC;ODa;wDCC;ODiB;GVE;CDC"}},"type":"js/module"}]}