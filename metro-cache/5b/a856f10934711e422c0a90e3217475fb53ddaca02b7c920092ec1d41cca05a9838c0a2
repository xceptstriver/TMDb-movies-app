{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}},{"name":"../constants/index","data":{"isAsync":false,"locs":[]}},{"name":"../components/MovieCard","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _index = _$$_REQUIRE(_dependencyMap[6], \"../constants/index\");\n\n  var _MovieCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../components/MovieCard\"));\n\n  var _this = this,\n      _jsxFileName = \"/home/moglix/tmdb_movies_app/src/screens/CastMoviesScreen.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var CastMoviesScreen = function CastMoviesScreen(props) {\n    _s();\n\n    var castId = props.castId,\n        castName = props.castName,\n        bkgStyle = props.bkgStyle,\n        isDarkMode = props.isDarkMode,\n        navigation = props.navigation;\n\n    var _React$useState = _react.default.useState(null),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        allMovies = _React$useState2[0],\n        setAllMovies = _React$useState2[1];\n\n    var fetchMovies = function fetchMovies() {\n      var url;\n      return _regenerator.default.async(function fetchMovies$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"https://api.themoviedb.org/3/person/\" + castId + \"/movie_credits?api_key=\" + _index.TMDB_API.API_KEY + \"&language=en-US\";\n              _context.prev = 1;\n              _context.next = 4;\n              return _regenerator.default.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                data.cast ? setAllMovies(data.cast) : setAllMovies(undefined);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 6]], Promise);\n    };\n\n    _react.default.useEffect(function () {\n      fetchMovies();\n    }, []);\n\n    var renderMovieItem = function renderMovieItem(_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_MovieCard.default, {\n        key: item.id,\n        movieId: item.id,\n        title: item.title,\n        rating: item.vote_average,\n        poster: item.poster_path,\n        bkgStyle: bkgStyle,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      });\n    };\n\n    return _react.default.createElement(_reactNative.View, {\n      style: _objectSpread(_objectSpread({}, styles.screen), {}, {\n        backgroundColor: bkgStyle.bkgColor\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.flatlistWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, allMovies !== undefined ? _react.default.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Movies starring \", castName), _react.default.createElement(_reactNative.FlatList, {\n      data: allMovies,\n      numColumns: 2,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderMovieItem,\n      contentContainerStyle: styles.flatlistContainer,\n      showsVerticalScrollIndicator: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })) : _react.default.createElement(_reactNative.Text, {\n      style: styles.txt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"No Results Found\")));\n  };\n\n  _s(CastMoviesScreen, \"fdxcdG9wlR2K99yUamuSRX+c90A=\");\n\n  _c = CastMoviesScreen;\n\n  var styles = _reactNative.StyleSheet.create({\n    screen: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    title: {\n      fontFamily: 'Montserrat-SemiBold',\n      fontSize: 16,\n      maxWidth: '80%',\n      marginHorizontal: 15,\n      paddingVertical: 10,\n      color: '#888'\n    },\n    flatlistWrapper: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    flatlistContainer: {\n      paddingTop: 20,\n      paddingBottom: 200,\n      justifyContent: 'space-between'\n    },\n    txt: {\n      fontFamily: 'Montserrat-SemiBold',\n      fontSize: 16,\n      color: '#888'\n    }\n  });\n\n  var _default = CastMoviesScreen;\n  exports.default = _default;\n\n  var _c;\n\n  $RefreshReg$(_c, \"CastMoviesScreen\");\n});","lineCount":202,"map":[[15,0,1,0],[17,0,2,0],[19,0,4,0],[21,0,5,0],[31,0,7,0],[31,6,7,6,"CastMoviesScreen"],[31,22,7,22],[31,25,7,25],[31,34,7,6,"CastMoviesScreen"],[31,50,7,25],[31,51,7,26,"props"],[31,56,7,25],[31,58,7,36],[32,0,7,36],[34,0,8,2],[34,8,8,9,"castId"],[34,14,8,2],[34,17,8,63,"props"],[34,22,8,2],[34,23,8,9,"castId"],[34,29,8,2],[35,0,8,2],[35,8,8,17,"castName"],[35,16,8,2],[35,19,8,63,"props"],[35,24,8,2],[35,25,8,17,"castName"],[35,33,8,2],[36,0,8,2],[36,8,8,27,"bkgStyle"],[36,16,8,2],[36,19,8,63,"props"],[36,24,8,2],[36,25,8,27,"bkgStyle"],[36,33,8,2],[37,0,8,2],[37,8,8,37,"isDarkMode"],[37,18,8,2],[37,21,8,63,"props"],[37,26,8,2],[37,27,8,37,"isDarkMode"],[37,37,8,2],[38,0,8,2],[38,8,8,49,"navigation"],[38,18,8,2],[38,21,8,63,"props"],[38,26,8,2],[38,27,8,49,"navigation"],[38,37,8,2],[40,0,9,2],[40,26,9,36,"React"],[40,41,9,42,"useState"],[40,49,9,36],[40,50,9,51],[40,54,9,36],[40,55,9,2],[41,0,9,2],[42,0,9,2],[42,8,9,9,"allMovies"],[42,17,9,2],[43,0,9,2],[43,8,9,20,"setAllMovies"],[43,20,9,2],[45,0,12,2],[45,8,12,8,"fetchMovies"],[45,19,12,19],[45,22,12,22],[45,31,12,8,"fetchMovies"],[45,42,12,22],[46,0,12,22],[47,0,12,22],[48,0,12,22],[49,0,12,22],[50,0,12,22],[51,0,13,8,"url"],[51,14,13,8,"url"],[51,17,12,22],[51,61,13,53,"castId"],[51,67,12,22],[51,98,13,85,"TMDB_API"],[51,114,13,94,"API_KEY"],[51,121,12,22],[52,0,12,22],[53,0,12,22],[54,0,12,22],[54,48,15,12,"fetch"],[54,53,15,17],[54,54,15,18,"url"],[54,57,15,17],[54,58,15,12],[54,59,16,9,"then"],[54,63,15,12],[54,64,16,14],[54,74,16,15,"response"],[54,82,16,14],[55,0,16,14],[55,23,16,28,"response"],[55,31,16,36],[55,32,16,37,"json"],[55,36,16,28],[55,38,16,14],[56,0,16,14],[56,15,15,12],[56,17,17,9,"then"],[56,21,15,12],[56,22,17,14],[56,32,17,15,"data"],[56,36,17,14],[56,38,17,24],[57,0,18,10,"data"],[57,16,18,10,"data"],[57,20,18,14],[57,21,18,15,"cast"],[57,25,18,10],[57,28,18,22,"setAllMovies"],[57,40,18,34],[57,41,18,35,"data"],[57,45,18,39],[57,46,18,40,"cast"],[57,50,18,34],[57,51,18,10],[57,54,18,48,"setAllMovies"],[57,66,18,60],[57,67,18,61,"undefined"],[57,76,18,60],[57,77,18,10],[58,0,19,9],[58,15,15,12],[58,17,20,9,"catch"],[58,22,15,12],[58,23,20,15],[58,33,20,16,"error"],[58,38,20,15],[58,40,20,26],[59,0,21,10,"console"],[59,16,21,10,"console"],[59,23,21,17],[59,24,21,18,"log"],[59,27,21,10],[59,28,21,22,"error"],[59,33,21,10],[60,0,22,9],[60,15,15,12],[60,16,12,22],[62,0,12,22],[63,0,12,22],[64,0,12,22],[66,0,12,22],[67,0,12,22],[68,0,12,22],[69,0,24,6,"console"],[69,14,24,6,"console"],[69,21,24,13],[69,22,24,14,"log"],[69,25,24,6],[71,0,12,22],[72,0,12,22],[73,0,12,22],[74,0,12,22],[75,0,12,22],[76,0,12,22],[77,0,12,22],[77,5,12,2],[79,0,28,2,"React"],[79,19,28,8,"useEffect"],[79,28,28,2],[79,29,28,18],[79,41,28,24],[80,0,29,4,"fetchMovies"],[80,6,29,4,"fetchMovies"],[80,17,29,15],[81,0,30,3],[81,5,28,2],[81,7,30,5],[81,9,28,2],[83,0,32,2],[83,8,32,8,"renderMovieItem"],[83,23,32,23],[83,26,32,26],[83,35,32,8,"renderMovieItem"],[83,50,32,26],[83,57,32,38],[84,0,32,38],[84,10,32,28,"item"],[84,14,32,38],[84,22,32,28,"item"],[84,26,32,38],[85,0,33,4],[85,13,34,6],[85,42,34,7],[85,60,34,6],[86,0,35,8],[86,8,35,8],[86,11,35,11],[86,13,35,13,"item"],[86,17,35,17],[86,18,35,18,"id"],[86,20,34,6],[87,0,36,8],[87,8,36,8],[87,15,36,15],[87,17,36,17,"item"],[87,21,36,21],[87,22,36,22,"id"],[87,24,34,6],[88,0,37,8],[88,8,37,8],[88,13,37,13],[88,15,37,15,"item"],[88,19,37,19],[88,20,37,20,"title"],[88,25,34,6],[89,0,38,8],[89,8,38,8],[89,14,38,14],[89,16,38,16,"item"],[89,20,38,20],[89,21,38,21,"vote_average"],[89,33,34,6],[90,0,39,8],[90,8,39,8],[90,14,39,14],[90,16,39,16,"item"],[90,20,39,20],[90,21,39,21,"poster_path"],[90,32,34,6],[91,0,40,8],[91,8,40,8],[91,16,40,16],[91,18,40,18,"bkgStyle"],[91,26,34,6],[92,0,41,8],[92,8,41,8],[92,18,41,18],[92,20,41,20,"navigation"],[92,30,34,6],[93,0,34,6],[94,0,34,6],[95,0,34,6],[96,0,34,6],[97,0,34,6],[98,0,34,6],[99,0,34,6],[99,8,33,4],[100,0,44,3],[100,5,32,2],[102,0,46,2],[102,11,47,4],[102,40,47,5],[102,57,47,4],[103,0,47,10],[103,6,47,10],[103,11,47,15],[103,45,47,21,"styles"],[103,51,47,27],[103,52,47,28,"screen"],[103,58,47,15],[104,0,47,36,"backgroundColor"],[104,8,47,36,"backgroundColor"],[104,23,47,51],[104,25,47,53,"bkgStyle"],[104,33,47,61],[104,34,47,62,"bkgColor"],[105,0,47,15],[105,8,47,4],[106,0,47,4],[107,0,47,4],[108,0,47,4],[109,0,47,4],[110,0,47,4],[111,0,47,4],[112,0,47,4],[112,7,48,6],[112,36,48,7],[112,53,48,6],[113,0,48,12],[113,6,48,12],[113,11,48,17],[113,13,48,19,"styles"],[113,19,48,25],[113,20,48,26,"flatlistWrapper"],[113,35,48,6],[114,0,48,6],[115,0,48,6],[116,0,48,6],[117,0,48,6],[118,0,48,6],[119,0,48,6],[120,0,48,6],[120,7,49,9,"allMovies"],[120,16,49,18],[120,21,49,23,"undefined"],[120,30,49,9],[120,33,50,10],[120,62,50,11],[120,79,50,10],[121,0,50,10],[122,0,50,10],[123,0,50,10],[124,0,50,10],[125,0,50,10],[126,0,50,10],[127,0,50,10],[127,7,51,12],[127,36,51,13],[127,53,51,12],[128,0,51,18],[128,6,51,18],[128,11,51,23],[128,13,51,25,"styles"],[128,19,51,31],[128,20,51,32,"title"],[128,25,51,12],[129,0,51,12],[130,0,51,12],[131,0,51,12],[132,0,51,12],[133,0,51,12],[134,0,51,12],[135,0,51,12],[135,27,51,56,"castName"],[135,35,51,12],[135,36,50,10],[135,38,52,12],[135,67,52,13],[135,88,52,12],[136,0,53,14],[136,6,53,14],[136,10,53,18],[136,12,53,20,"allMovies"],[136,21,52,12],[137,0,54,14],[137,6,54,14],[137,16,54,24],[137,18,54,26],[137,19,52,12],[138,0,55,14],[138,6,55,14],[138,18,55,26],[138,20,55,28],[138,42,55,29,"item"],[138,46,55,28],[139,0,55,28],[139,15,55,38,"item"],[139,19,55,42],[139,20,55,43,"id"],[139,22,55,28],[140,0,55,28],[140,7,52,12],[141,0,56,14],[141,6,56,14],[141,16,56,24],[141,18,56,26,"renderMovieItem"],[141,33,52,12],[142,0,57,14],[142,6,57,14],[142,27,57,35],[142,29,57,37,"styles"],[142,35,57,43],[142,36,57,44,"flatlistContainer"],[142,53,52,12],[143,0,58,14],[143,6,58,14],[143,34,58,42],[143,36,58,44],[143,41,52,12],[144,0,52,12],[145,0,52,12],[146,0,52,12],[147,0,52,12],[148,0,52,12],[149,0,52,12],[150,0,52,12],[150,6,50,10],[150,7,49,9],[150,10,62,10],[150,39,62,11],[150,56,62,10],[151,0,62,16],[151,6,62,16],[151,11,62,21],[151,13,62,23,"styles"],[151,19,62,29],[151,20,62,30,"txt"],[151,23,62,10],[152,0,62,10],[153,0,62,10],[154,0,62,10],[155,0,62,10],[156,0,62,10],[157,0,62,10],[158,0,62,10],[158,26,48,6],[158,27,47,4],[158,28,46,2],[159,0,67,1],[159,3,7,0],[161,5,7,6,"CastMoviesScreen"],[161,21],[163,7,7,6,"CastMoviesScreen"],[163,23],[165,0,69,0],[165,6,69,6,"styles"],[165,12,69,12],[165,15,69,15,"StyleSheet"],[165,39,69,26,"create"],[165,45,69,15],[165,46,69,33],[166,0,70,2,"screen"],[166,4,70,2,"screen"],[166,10,70,8],[166,12,70,10],[167,0,71,4,"flex"],[167,6,71,4,"flex"],[167,10,71,8],[167,12,71,10],[167,13,70,10],[168,0,72,4,"justifyContent"],[168,6,72,4,"justifyContent"],[168,20,72,18],[168,22,72,20],[168,30,70,10],[169,0,73,4,"alignItems"],[169,6,73,4,"alignItems"],[169,16,73,14],[169,18,73,16],[170,0,70,10],[170,5,69,33],[171,0,75,2,"title"],[171,4,75,2,"title"],[171,9,75,7],[171,11,75,9],[172,0,76,4,"fontFamily"],[172,6,76,4,"fontFamily"],[172,16,76,14],[172,18,76,16],[172,39,75,9],[173,0,77,4,"fontSize"],[173,6,77,4,"fontSize"],[173,14,77,12],[173,16,77,14],[173,18,75,9],[174,0,78,4,"maxWidth"],[174,6,78,4,"maxWidth"],[174,14,78,12],[174,16,78,14],[174,21,75,9],[175,0,79,4,"marginHorizontal"],[175,6,79,4,"marginHorizontal"],[175,22,79,20],[175,24,79,22],[175,26,75,9],[176,0,80,4,"paddingVertical"],[176,6,80,4,"paddingVertical"],[176,21,80,19],[176,23,80,21],[176,25,75,9],[177,0,81,4,"color"],[177,6,81,4,"color"],[177,11,81,9],[177,13,81,11],[178,0,75,9],[178,5,69,33],[179,0,83,2,"flatlistWrapper"],[179,4,83,2,"flatlistWrapper"],[179,19,83,17],[179,21,83,19],[180,0,84,4,"width"],[180,6,84,4,"width"],[180,11,84,9],[180,13,84,11],[180,19,83,19],[181,0,85,4,"justifyContent"],[181,6,85,4,"justifyContent"],[181,20,85,18],[181,22,85,20],[181,30,83,19],[182,0,86,4,"alignItems"],[182,6,86,4,"alignItems"],[182,16,86,14],[182,18,86,16],[183,0,83,19],[183,5,69,33],[184,0,88,2,"flatlistContainer"],[184,4,88,2,"flatlistContainer"],[184,21,88,19],[184,23,88,21],[185,0,89,4,"paddingTop"],[185,6,89,4,"paddingTop"],[185,16,89,14],[185,18,89,16],[185,20,88,21],[186,0,90,4,"paddingBottom"],[186,6,90,4,"paddingBottom"],[186,19,90,17],[186,21,90,19],[186,24,88,21],[187,0,91,4,"justifyContent"],[187,6,91,4,"justifyContent"],[187,20,91,18],[187,22,91,20],[188,0,88,21],[188,5,69,33],[189,0,93,2,"txt"],[189,4,93,2,"txt"],[189,7,93,5],[189,9,93,7],[190,0,94,4,"fontFamily"],[190,6,94,4,"fontFamily"],[190,16,94,14],[190,18,94,16],[190,39,93,7],[191,0,95,4,"fontSize"],[191,6,95,4,"fontSize"],[191,14,95,12],[191,16,95,14],[191,18,93,7],[192,0,96,4,"color"],[192,6,96,4,"color"],[192,11,96,9],[192,13,96,11],[193,0,93,7],[194,0,69,33],[194,3,69,15],[194,4,69,0],[196,17,100,15,"CastMoviesScreen"],[196,33]],"functionMap":{"names":["<global>","CastMoviesScreen","fetchMovies","fetch.then$argument_0","fetch.then.then$argument_0","fetch.then.then._catch$argument_0","React.useEffect$argument_0","renderMovieItem","FlatList.props.keyExtractor"],"mappings":"AAA;yBCM;sBCK;cCI,6BD;cEC;SFE;eGC;SHE;GDI;kBKE;GLE;0BME;GNY;4BOW,iBP;CDY"}},"type":"js/module"}]}