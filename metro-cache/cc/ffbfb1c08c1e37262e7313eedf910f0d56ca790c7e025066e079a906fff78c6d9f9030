{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"nanoid/non-secure","data":{"isAsync":false,"locs":[]}},{"name":"./BaseRouter","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = TabRouter;\n  exports.TabActions = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\");\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n\n        break;\n\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n\n        break;\n\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n\n        break;\n\n      case 'history':\n        break;\n    }\n\n    return history;\n  };\n\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history;\n\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index,\n      history: history\n    });\n  };\n\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n        _ref$backBehavior = _ref.backBehavior,\n        backBehavior = _ref$backBehavior === void 0 ? 'history' : _ref$backBehavior;\n\n    var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$routes, _state$index, _state$history$filter, _state$history;\n\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return _objectSpread(_objectSpread({}, route), {}, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state == null ? void 0 : state.index) != null ? _state$index : 0]) == null ? void 0 : _state$routes.name), 0), routes.length - 1);\n        var history = (_state$history$filter = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        })) != null ? _state$history$filter : [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n            routeParamList = _ref4.routeParamList;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name;\n          }) || {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return it.type !== 'route' || routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList;\n\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n\n              if (index === -1) {\n                return null;\n              }\n\n              return changeIndex(_objectSpread(_objectSpread({}, state), {}, {\n                routes: action.payload.params !== undefined ? state.routes.map(function (route, i) {\n                  if (i !== index) {\n                    return route;\n                  }\n\n                  var params;\n\n                  if (action.type === 'NAVIGATE' && action.payload.merge === false) {\n                    params = routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), action.payload.params) : action.payload.params;\n                  } else {\n                    params = action.payload.params ? _objectSpread(_objectSpread({}, route.params), action.payload.params) : route.params;\n                  }\n\n                  return params !== route.params ? _objectSpread(_objectSpread({}, route), {}, {\n                    params: params\n                  }) : route;\n                }) : state.routes\n              }), index, backBehavior, initialRouteName);\n            }\n\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n\n              var previousKey = state.history[state.history.length - 2].key;\n\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n\n              if (_index === -1) {\n                return null;\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n\n    return router;\n  }\n});","lineCount":290,"map":[[12,0,1,0],[14,0,2,0],[20,0,59,0],[20,6,59,6,"TYPE_ROUTE"],[20,16,59,16],[20,19,59,19],[20,26,59,0],[21,0,61,7],[21,6,61,13,"TabActions"],[21,16,61,23],[21,19,61,26],[22,0,62,2,"jumpTo"],[22,4,62,2,"jumpTo"],[22,10,61,26],[22,28,62,9,"name"],[22,32,61,26],[22,34,62,23,"params"],[22,40,61,26],[22,42,62,55],[23,0,63,4],[23,13,63,11],[24,0,63,13,"type"],[24,8,63,13,"type"],[24,12,63,17],[24,14,63,19],[24,23,63,11],[25,0,63,30,"payload"],[25,8,63,30,"payload"],[25,15,63,37],[25,17,63,39],[26,0,63,41,"name"],[26,10,63,41,"name"],[26,14,63,45],[26,16,63,41,"name"],[26,20,63,39],[27,0,63,47,"params"],[27,10,63,47,"params"],[27,16,63,53],[27,18,63,47,"params"],[28,0,63,39],[29,0,63,11],[29,7,63,4],[30,0,64,3],[31,0,61,26],[31,3,61,7],[34,0,67,0],[34,6,67,6,"getRouteHistory"],[34,21,67,21],[34,24,67,24],[34,33,67,6,"getRouteHistory"],[34,48,67,24],[34,49,68,2,"routes"],[34,55,67,24],[34,57,69,2,"index"],[34,62,67,24],[34,64,70,2,"backBehavior"],[34,76,67,24],[34,78,71,2,"initialRouteName"],[34,94,67,24],[34,96,72,5],[35,0,73,2],[35,8,73,8,"history"],[35,15,73,15],[35,18,73,18],[35,19,73,19],[36,0,73,21,"type"],[36,6,73,21,"type"],[36,10,73,25],[36,12,73,27,"TYPE_ROUTE"],[36,22,73,19],[37,0,73,39,"key"],[37,6,73,39,"key"],[37,9,73,42],[37,11,73,44,"routes"],[37,17,73,50],[37,18,73,51,"index"],[37,23,73,50],[37,24,73,44],[37,25,73,58,"key"],[38,0,73,19],[38,5,73,18],[38,6,73,2],[39,0,74,2],[39,8,74,6,"initialRouteIndex"],[39,25,74,2],[41,0,76,2],[41,12,76,10,"backBehavior"],[41,24,76,2],[42,0,77,4],[42,11,77,9],[42,18,77,4],[43,0,78,6],[43,13,78,11],[43,17,78,15,"i"],[43,18,78,16],[43,21,78,19,"index"],[43,26,78,6],[43,28,78,26,"i"],[43,29,78,27],[43,32,78,30],[43,33,78,6],[43,35,78,33,"i"],[43,36,78,34],[43,38,78,6],[43,40,78,38],[44,0,79,8,"history"],[44,10,79,8,"history"],[44,17,79,15],[44,18,79,16,"unshift"],[44,25,79,8],[44,26,79,24],[45,0,79,26,"type"],[45,12,79,26,"type"],[45,16,79,30],[45,18,79,32,"TYPE_ROUTE"],[45,28,79,24],[46,0,79,44,"key"],[46,12,79,44,"key"],[46,15,79,47],[46,17,79,49,"routes"],[46,23,79,55],[46,24,79,56,"i"],[46,25,79,57],[46,28,79,60],[46,29,79,55],[46,30,79,49],[46,31,79,63,"key"],[47,0,79,24],[47,11,79,8],[48,0,80,7],[50,0,81,6],[52,0,82,4],[52,11,82,9],[52,23,82,4],[53,0,83,6],[53,12,83,10,"index"],[53,17,83,15],[53,22,83,20],[53,23,83,6],[53,25,83,23],[54,0,84,8,"history"],[54,10,84,8,"history"],[54,17,84,15],[54,18,84,16,"unshift"],[54,25,84,8],[54,26,84,24],[55,0,85,10,"type"],[55,12,85,10,"type"],[55,16,85,14],[55,18,85,16,"TYPE_ROUTE"],[55,28,84,24],[56,0,86,10,"key"],[56,12,86,10,"key"],[56,15,86,13],[56,17,86,15,"routes"],[56,23,86,21],[56,24,86,22],[56,25,86,21],[56,26,86,15],[56,27,86,25,"key"],[57,0,84,24],[57,11,84,8],[58,0,88,7],[60,0,89,6],[62,0,90,4],[62,11,90,9],[62,25,90,4],[63,0,91,6,"initialRouteIndex"],[63,8,91,6,"initialRouteIndex"],[63,25,91,23],[63,28,91,26,"routes"],[63,34,91,32],[63,35,91,33,"findIndex"],[63,44,91,26],[63,45,92,8],[63,55,92,9,"route"],[63,60,92,8],[64,0,92,8],[64,17,92,19,"route"],[64,22,92,24],[64,23,92,25,"name"],[64,27,92,19],[64,32,92,34,"initialRouteName"],[64,48,92,8],[65,0,92,8],[65,9,91,26],[65,10,91,6],[66,0,94,6,"initialRouteIndex"],[66,8,94,6,"initialRouteIndex"],[66,25,94,23],[66,28,94,26,"initialRouteIndex"],[66,45,94,43],[66,50,94,48],[66,51,94,49],[66,52,94,26],[66,55,94,53],[66,56,94,26],[66,59,94,57,"initialRouteIndex"],[66,76,94,6],[68,0,96,6],[68,12,96,10,"index"],[68,17,96,15],[68,22,96,20,"initialRouteIndex"],[68,39,96,6],[68,41,96,39],[69,0,97,8,"history"],[69,10,97,8,"history"],[69,17,97,15],[69,18,97,16,"unshift"],[69,25,97,8],[69,26,97,24],[70,0,98,10,"type"],[70,12,98,10,"type"],[70,16,98,14],[70,18,98,16,"TYPE_ROUTE"],[70,28,97,24],[71,0,99,10,"key"],[71,12,99,10,"key"],[71,15,99,13],[71,17,99,15,"routes"],[71,23,99,21],[71,24,99,22,"initialRouteIndex"],[71,41,99,21],[71,42,99,15],[71,43,99,41,"key"],[72,0,97,24],[72,11,97,8],[73,0,101,7],[75,0,102,6],[77,0,103,4],[77,11,103,9],[77,20,103,4],[78,0,105,6],[79,0,76,2],[81,0,108,2],[81,11,108,9,"history"],[81,18,108,2],[82,0,109,1],[82,3,67,0],[84,0,111,0],[84,6,111,6,"changeIndex"],[84,17,111,17],[84,20,111,20],[84,29,111,6,"changeIndex"],[84,40,111,20],[84,41,112,2,"state"],[84,46,111,20],[84,48,113,2,"index"],[84,53,111,20],[84,55,114,2,"backBehavior"],[84,67,111,20],[84,69,115,2,"initialRouteName"],[84,85,111,20],[84,87,116,5],[85,0,117,2],[85,8,117,6,"history"],[85,15,117,2],[87,0,119,2],[87,8,119,6,"backBehavior"],[87,20,119,18],[87,25,119,23],[87,34,119,2],[87,36,119,34],[88,0,120,4],[88,10,120,10,"currentKey"],[88,20,120,20],[88,23,120,23,"state"],[88,28,120,28],[88,29,120,29,"routes"],[88,35,120,23],[88,36,120,36,"index"],[88,41,120,23],[88,43,120,43,"key"],[88,46,120,4],[89,0,122,4,"history"],[89,6,122,4,"history"],[89,13,122,11],[89,16,122,14,"state"],[89,21,122,19],[89,22,122,20,"history"],[89,29,122,14],[89,30,123,7,"filter"],[89,36,122,14],[89,37,123,14],[89,47,123,15,"it"],[89,49,123,14],[90,0,123,14],[90,15,123,23,"it"],[90,17,123,25],[90,18,123,26,"type"],[90,22,123,23],[90,27,123,35],[90,34,123,23],[90,37,123,45,"it"],[90,39,123,47],[90,40,123,48,"key"],[90,43,123,45],[90,48,123,56,"currentKey"],[90,58,123,23],[90,61,123,69],[90,66,123,14],[91,0,123,14],[91,7,122,14],[91,9,124,7,"concat"],[91,15,122,14],[91,16,124,14],[92,0,124,16,"type"],[92,8,124,16,"type"],[92,12,124,20],[92,14,124,22,"TYPE_ROUTE"],[92,24,124,14],[93,0,124,34,"key"],[93,8,124,34,"key"],[93,11,124,37],[93,13,124,39,"currentKey"],[94,0,124,14],[94,7,122,14],[94,8,122,4],[95,0,125,3],[95,5,119,2],[95,11,125,9],[96,0,126,4,"history"],[96,6,126,4,"history"],[96,13,126,11],[96,16,126,14,"getRouteHistory"],[96,31,126,29],[96,32,127,6,"state"],[96,37,127,11],[96,38,127,12,"routes"],[96,44,126,29],[96,46,128,6,"index"],[96,51,126,29],[96,53,129,6,"backBehavior"],[96,65,126,29],[96,67,130,6,"initialRouteName"],[96,83,126,29],[96,84,126,4],[97,0,132,3],[99,0,134,2],[99,43,135,7,"state"],[99,48,134,2],[100,0,136,4,"index"],[100,6,136,4,"index"],[100,11,136,9],[100,13,136,4,"index"],[100,18,134,2],[101,0,137,4,"history"],[101,6,137,4,"history"],[101,13,137,11],[101,15,137,4,"history"],[102,0,134,2],[103,0,139,1],[103,3,111,0],[105,0,141,15],[105,11,141,24,"TabRouter"],[105,20,141,15],[105,27,144,21],[106,0,144,21],[106,8,142,2,"initialRouteName"],[106,24,144,21],[106,32,142,2,"initialRouteName"],[106,48,144,21],[107,0,144,21],[107,33,143,2,"backBehavior"],[107,45,144,21],[108,0,144,21],[108,8,143,2,"backBehavior"],[108,20,144,21],[108,54,143,17],[108,63,144,21],[110,0,145,2],[110,8,145,8,"router"],[110,14,148,3],[110,49,149,7,"BaseRouter"],[110,68,148,3],[111,0,151,4,"type"],[111,6,151,4,"type"],[111,10,151,8],[111,12,151,10],[111,17,148,3],[112,0,153,4,"getInitialState"],[112,6,153,4,"getInitialState"],[112,21,148,3],[112,55,153,52],[113,0,153,52],[113,12,153,22,"routeNames"],[113,22,153,52],[113,31,153,22,"routeNames"],[113,41,153,52],[114,0,153,52],[114,12,153,34,"routeParamList"],[114,26,153,52],[114,35,153,34,"routeParamList"],[114,49,153,52],[115,0,154,6],[115,12,154,12,"index"],[115,17,154,17],[115,20,155,8,"initialRouteName"],[115,36,155,24],[115,41,155,29,"undefined"],[115,50,155,8],[115,54,155,42,"routeNames"],[115,64,155,52],[115,65,155,53,"includes"],[115,73,155,42],[115,74,155,62,"initialRouteName"],[115,90,155,42],[115,91,155,8],[115,94,156,12,"routeNames"],[115,104,156,22],[115,105,156,23,"indexOf"],[115,112,156,12],[115,113,156,31,"initialRouteName"],[115,129,156,12],[115,130,155,8],[115,133,157,12],[115,134,154,6],[116,0,159,6],[116,12,159,12,"routes"],[116,18,159,18],[116,21,159,21,"routeNames"],[116,31,159,31],[116,32,159,32,"map"],[116,35,159,21],[116,36,159,36],[116,46,159,37,"name"],[116,50,159,36],[117,0,159,36],[117,17,159,47],[118,0,160,8,"name"],[118,12,160,8,"name"],[118,16,160,12],[118,18,160,8,"name"],[118,22,159,47],[119,0,161,8,"key"],[119,12,161,8,"key"],[119,15,161,11],[119,17,161,16,"name"],[119,21,161,11],[119,30,161,24],[119,54,159,47],[120,0,162,8,"params"],[120,12,162,8,"params"],[120,18,162,14],[120,20,162,16,"routeParamList"],[120,34,162,30],[120,35,162,31,"name"],[120,39,162,30],[121,0,159,47],[121,11,159,36],[122,0,159,36],[122,9,159,21],[122,10,159,6],[123,0,165,6],[123,12,165,12,"history"],[123,19,165,19],[123,22,165,22,"getRouteHistory"],[123,37,165,37],[123,38,166,8,"routes"],[123,44,165,37],[123,46,167,8,"index"],[123,51,165,37],[123,53,168,8,"backBehavior"],[123,65,165,37],[123,67,169,8,"initialRouteName"],[123,83,165,37],[123,84,165,6],[124,0,172,6],[124,15,172,13],[125,0,173,8,"stale"],[125,10,173,8,"stale"],[125,15,173,13],[125,17,173,15],[125,22,172,13],[126,0,174,8,"type"],[126,10,174,8,"type"],[126,14,174,12],[126,16,174,14],[126,21,172,13],[127,0,175,8,"key"],[127,10,175,8,"key"],[127,13,175,11],[127,24,175,20],[127,48,172,13],[128,0,176,8,"index"],[128,10,176,8,"index"],[128,15,176,13],[128,17,176,8,"index"],[128,22,172,13],[129,0,177,8,"routeNames"],[129,10,177,8,"routeNames"],[129,20,177,18],[129,22,177,8,"routeNames"],[129,32,172,13],[130,0,178,8,"history"],[130,10,178,8,"history"],[130,17,178,15],[130,19,178,8,"history"],[130,26,172,13],[131,0,179,8,"routes"],[131,10,179,8,"routes"],[131,16,179,14],[131,18,179,8,"routes"],[132,0,172,13],[132,9,172,6],[133,0,181,5],[133,7,148,3],[134,0,183,4,"getRehydratedState"],[134,6,183,4,"getRehydratedState"],[134,24,148,3],[134,54,183,23,"partialState"],[134,66,148,3],[134,75,183,69],[135,0,183,69],[137,0,183,69],[137,12,183,39,"routeNames"],[137,22,183,69],[137,31,183,39,"routeNames"],[137,41,183,69],[138,0,183,69],[138,12,183,51,"routeParamList"],[138,26,183,69],[138,35,183,51,"routeParamList"],[138,49,183,69],[139,0,184,6],[139,12,184,10,"state"],[139,17,184,15],[139,20,184,18,"partialState"],[139,32,184,6],[141,0,186,6],[141,12,186,10,"state"],[141,17,186,15],[141,18,186,16,"stale"],[141,23,186,10],[141,28,186,26],[141,33,186,6],[141,35,186,33],[142,0,187,8],[142,17,187,15,"state"],[142,22,187,8],[143,0,188,7],[145,0,190,6],[145,12,190,12,"routes"],[145,18,190,18],[145,21,190,21,"routeNames"],[145,31,190,31],[145,32,190,32,"map"],[145,35,190,21],[145,36,190,36],[145,46,190,37,"name"],[145,50,190,36],[145,52,190,46],[146,0,191,8],[146,14,191,14,"route"],[146,19,191,19],[146,22,191,23,"state"],[146,27,191,22],[146,28,193,11,"routes"],[146,34,191,22],[146,35,193,18,"find"],[146,39,191,22],[146,40,193,23],[146,50,193,24,"r"],[146,51,193,23],[147,0,193,23],[147,19,193,30,"r"],[147,20,193,31],[147,21,193,32,"name"],[147,25,193,30],[147,30,193,41,"name"],[147,34,193,23],[148,0,193,23],[148,11,191,22],[148,12,191,8],[149,0,195,8],[149,49,196,13,"route"],[149,54,195,8],[150,0,197,10,"name"],[150,12,197,10,"name"],[150,16,197,14],[150,18,197,10,"name"],[150,22,195,8],[151,0,198,10,"key"],[151,12,198,10,"key"],[151,15,198,13],[151,17,199,12,"route"],[151,22,199,17],[151,26,199,21,"route"],[151,31,199,26],[151,32,199,27,"name"],[151,36,199,21],[151,41,199,36,"name"],[151,45,199,12],[151,49,199,44,"route"],[151,54,199,49],[151,55,199,50,"key"],[151,58,199,12],[151,61,200,16,"route"],[151,66,200,21],[151,67,200,22,"key"],[151,70,199,12],[151,73,201,19,"name"],[151,77,199,12],[151,86,201,27],[151,110,195,8],[152,0,202,10,"params"],[152,12,202,10,"params"],[152,18,202,16],[152,20,203,12,"routeParamList"],[152,34,203,26],[152,35,203,27,"name"],[152,39,203,26],[152,40,203,12],[152,45,203,37,"undefined"],[152,54,203,12],[152,89,205,21,"routeParamList"],[152,103,205,35],[152,104,205,36,"name"],[152,108,205,35],[152,109,203,12],[152,112,206,22,"route"],[152,117,206,27],[152,120,206,30,"route"],[152,125,206,35],[152,126,206,36,"params"],[152,132,206,27],[152,135,206,45,"undefined"],[152,144,203,12],[152,148,208,16,"route"],[152,153,208,21],[152,156,209,16,"route"],[152,161,209,21],[152,162,209,22,"params"],[152,168,208,21],[152,171,210,16,"undefined"],[153,0,195,8],[154,0,212,7],[154,9,190,21],[154,10,190,6],[155,0,214,6],[155,12,214,12,"index"],[155,17,214,17],[155,20,214,20,"Math"],[155,24,214,24],[155,25,214,25,"min"],[155,28,214,20],[155,29,215,8,"Math"],[155,33,215,12],[155,34,215,13,"max"],[155,37,215,8],[155,38,215,17,"routeNames"],[155,48,215,27],[155,49,215,28,"indexOf"],[155,56,215,17],[155,74,215,36,"state"],[155,79,215,41],[155,80,215,42,"routes"],[155,86,215,36],[155,103,215,49,"state"],[155,108,215,36],[155,128,215,49,"state"],[155,133,215,54],[155,134,215,56,"index"],[155,139,215,36],[155,166,215,65],[155,167,215,36],[155,168,215,17],[155,189,215,36],[155,203,215,69,"name"],[155,207,215,17],[155,208,215,8],[155,210,215,76],[155,211,215,8],[155,212,214,20],[155,214,216,8,"routes"],[155,220,216,14],[155,221,216,15,"length"],[155,227,216,8],[155,230,216,24],[155,231,214,20],[155,232,214,6],[156,0,219,6],[156,12,219,12,"history"],[156,19,219,19],[156,65,220,8,"state"],[156,70,220,13],[156,71,220,14,"history"],[156,78,219,19],[156,99,220,8],[156,114,220,23,"filter"],[156,120,220,8],[156,121,220,30],[156,131,220,31,"it"],[156,133,220,30],[157,0,220,30],[157,17,220,38,"routes"],[157,23,220,44],[157,24,220,45,"find"],[157,28,220,38],[157,29,220,50],[157,39,220,51,"r"],[157,40,220,50],[158,0,220,50],[158,19,220,57,"r"],[158,20,220,58],[158,21,220,59,"key"],[158,24,220,57],[158,29,220,67,"it"],[158,31,220,69],[158,32,220,70,"key"],[158,35,220,50],[159,0,220,50],[159,11,220,38],[159,12,220,30],[160,0,220,30],[160,9,220,8],[160,10,219,19],[160,46,221,8],[160,48,219,6],[161,0,223,6],[161,15,223,13,"changeIndex"],[161,26,223,24],[161,27,224,8],[162,0,225,10,"stale"],[162,10,225,10,"stale"],[162,15,225,15],[162,17,225,17],[162,22,224,8],[163,0,226,10,"type"],[163,10,226,10,"type"],[163,14,226,14],[163,16,226,16],[163,21,224,8],[164,0,227,10,"key"],[164,10,227,10,"key"],[164,13,227,13],[164,24,227,22],[164,48,224,8],[165,0,228,10,"index"],[165,10,228,10,"index"],[165,15,228,15],[165,17,228,10,"index"],[165,22,224,8],[166,0,229,10,"routeNames"],[166,10,229,10,"routeNames"],[166,20,229,20],[166,22,229,10,"routeNames"],[166,32,224,8],[167,0,230,10,"history"],[167,10,230,10,"history"],[167,17,230,17],[167,19,230,10,"history"],[167,26,224,8],[168,0,231,10,"routes"],[168,10,231,10,"routes"],[168,16,231,16],[168,18,231,10,"routes"],[169,0,224,8],[169,9,223,24],[169,11,233,8,"index"],[169,16,223,24],[169,18,234,8,"backBehavior"],[169,30,223,24],[169,32,235,8,"initialRouteName"],[169,48,223,24],[169,49,223,6],[170,0,237,5],[170,7,148,3],[171,0,239,4,"getStateForRouteNamesChange"],[171,6,239,4,"getStateForRouteNamesChange"],[171,33,148,3],[171,72,239,32,"state"],[171,77,148,3],[171,86,239,71],[172,0,239,71],[172,12,239,41,"routeNames"],[172,22,239,71],[172,31,239,41,"routeNames"],[172,41,239,71],[173,0,239,71],[173,12,239,53,"routeParamList"],[173,26,239,71],[173,35,239,53,"routeParamList"],[173,49,239,71],[174,0,240,6],[174,12,240,12,"routes"],[174,18,240,18],[174,21,240,21,"routeNames"],[174,31,240,31],[174,32,240,32,"map"],[174,35,240,21],[174,36,241,8],[174,46,241,9,"name"],[174,50,241,8],[175,0,241,8],[175,17,242,10,"state"],[175,22,242,15],[175,23,242,16,"routes"],[175,29,242,10],[175,30,242,23,"find"],[175,34,242,10],[175,35,242,28],[175,45,242,29,"r"],[175,46,242,28],[176,0,242,28],[176,19,242,35,"r"],[176,20,242,36],[176,21,242,37,"name"],[176,25,242,35],[176,30,242,46,"name"],[176,34,242,28],[177,0,242,28],[177,11,242,10],[177,16,242,55],[178,0,243,12,"name"],[178,12,243,12,"name"],[178,16,243,16],[178,18,243,12,"name"],[178,22,242,55],[179,0,244,12,"key"],[179,12,244,12,"key"],[179,15,244,15],[179,17,244,20,"name"],[179,21,244,15],[179,30,244,28],[179,54,242,55],[180,0,245,12,"params"],[180,12,245,12,"params"],[180,18,245,18],[180,20,245,20,"routeParamList"],[180,34,245,34],[180,35,245,35,"name"],[180,39,245,34],[181,0,242,55],[181,11,241,8],[182,0,241,8],[182,9,240,21],[182,10,240,6],[183,0,249,6],[183,12,249,12,"index"],[183,17,249,17],[183,20,249,20,"Math"],[183,24,249,24],[183,25,249,25,"max"],[183,28,249,20],[183,29,250,8],[183,30,249,20],[183,32,251,8,"routeNames"],[183,42,251,18],[183,43,251,19,"indexOf"],[183,50,251,8],[183,51,251,27,"state"],[183,56,251,32],[183,57,251,33,"routes"],[183,63,251,27],[183,64,251,40,"state"],[183,69,251,45],[183,70,251,46,"index"],[183,75,251,27],[183,77,251,53,"name"],[183,81,251,8],[183,82,249,20],[183,83,249,6],[184,0,254,6],[184,12,254,10,"history"],[184,19,254,17],[184,22,254,20,"state"],[184,27,254,25],[184,28,254,26,"history"],[184,35,254,20],[184,36,254,34,"filter"],[184,42,254,20],[184,43,256,8],[184,53,256,9,"it"],[184,55,256,8],[185,0,256,8],[185,17,256,16,"it"],[185,19,256,18],[185,20,256,19,"type"],[185,24,256,16],[185,29,256,28],[185,36,256,16],[185,40,256,39,"routes"],[185,46,256,45],[185,47,256,46,"find"],[185,51,256,39],[185,52,256,51],[185,62,256,52,"r"],[185,63,256,51],[186,0,256,51],[186,19,256,58,"r"],[186,20,256,59],[186,21,256,60,"key"],[186,24,256,58],[186,29,256,68,"it"],[186,31,256,70],[186,32,256,71,"key"],[186,35,256,51],[187,0,256,51],[187,11,256,39],[187,12,256,8],[188,0,256,8],[188,9,254,20],[188,10,254,6],[190,0,259,6],[190,12,259,10],[190,13,259,11,"history"],[190,20,259,18],[190,21,259,19,"length"],[190,27,259,6],[190,29,259,27],[191,0,260,8,"history"],[191,10,260,8,"history"],[191,17,260,15],[191,20,260,18,"getRouteHistory"],[191,35,260,33],[191,36,261,10,"routes"],[191,42,260,33],[191,44,262,10,"index"],[191,49,260,33],[191,51,263,10,"backBehavior"],[191,63,260,33],[191,65,264,10,"initialRouteName"],[191,81,260,33],[191,82,260,8],[192,0,266,7],[194,0,268,6],[194,47,269,11,"state"],[194,52,268,6],[195,0,270,8,"history"],[195,10,270,8,"history"],[195,17,270,15],[195,19,270,8,"history"],[195,26,268,6],[196,0,271,8,"routeNames"],[196,10,271,8,"routeNames"],[196,20,271,18],[196,22,271,8,"routeNames"],[196,32,268,6],[197,0,272,8,"routes"],[197,10,272,8,"routes"],[197,16,272,14],[197,18,272,8,"routes"],[197,24,268,6],[198,0,273,8,"index"],[198,10,273,8,"index"],[198,15,273,13],[198,17,273,8,"index"],[199,0,268,6],[200,0,275,5],[200,7,148,3],[201,0,277,4,"getStateForRouteFocus"],[201,6,277,4,"getStateForRouteFocus"],[201,27,148,3],[201,60,277,26,"state"],[201,65,148,3],[201,67,277,33,"key"],[201,70,148,3],[201,72,277,38],[202,0,278,6],[202,12,278,12,"index"],[202,17,278,17],[202,20,278,20,"state"],[202,25,278,25],[202,26,278,26,"routes"],[202,32,278,20],[202,33,278,33,"findIndex"],[202,42,278,20],[202,43,278,43],[202,53,278,44,"r"],[202,54,278,43],[203,0,278,43],[203,17,278,50,"r"],[203,18,278,51],[203,19,278,52,"key"],[203,22,278,50],[203,27,278,60,"key"],[203,30,278,43],[204,0,278,43],[204,9,278,20],[204,10,278,6],[206,0,280,6],[206,12,280,10,"index"],[206,17,280,15],[206,22,280,20],[206,23,280,21],[206,24,280,10],[206,28,280,26,"index"],[206,33,280,31],[206,38,280,36,"state"],[206,43,280,41],[206,44,280,42,"index"],[206,49,280,6],[206,51,280,49],[207,0,281,8],[207,17,281,15,"state"],[207,22,281,8],[208,0,282,7],[210,0,284,6],[210,15,284,13,"changeIndex"],[210,26,284,24],[210,27,284,25,"state"],[210,32,284,24],[210,34,284,32,"index"],[210,39,284,24],[210,41,284,39,"backBehavior"],[210,53,284,24],[210,55,284,53,"initialRouteName"],[210,71,284,24],[210,72,284,6],[211,0,285,5],[211,7,148,3],[212,0,287,4,"getStateForAction"],[212,6,287,4,"getStateForAction"],[212,23,148,3],[212,52,287,22,"state"],[212,57,148,3],[212,59,287,29,"action"],[212,65,148,3],[212,74,287,57],[213,0,287,57],[213,12,287,39,"routeParamList"],[213,26,287,57],[213,35,287,39,"routeParamList"],[213,49,287,57],[215,0,288,6],[215,16,288,14,"action"],[215,22,288,20],[215,23,288,21,"type"],[215,27,288,6],[216,0,289,8],[216,15,289,13],[216,24,289,8],[217,0,290,8],[217,15,290,13],[217,25,290,8],[218,0,290,25],[219,0,291,10],[219,18,291,14,"index"],[219,23,291,19],[219,26,291,22],[219,27,291,23],[219,28,291,10],[221,0,293,10],[221,18,293,14,"action"],[221,24,293,20],[221,25,293,21,"type"],[221,29,293,14],[221,34,293,30],[221,44,293,14],[221,48,293,44,"action"],[221,54,293,50],[221,55,293,51,"payload"],[221,62,293,44],[221,63,293,59,"key"],[221,66,293,10],[221,68,293,64],[222,0,294,12,"index"],[222,16,294,12,"index"],[222,21,294,17],[222,24,294,20,"state"],[222,29,294,25],[222,30,294,26,"routes"],[222,36,294,20],[222,37,294,33,"findIndex"],[222,46,294,20],[222,47,295,14],[222,57,295,15,"route"],[222,62,295,14],[223,0,295,14],[223,25,295,25,"route"],[223,30,295,30],[223,31,295,31,"key"],[223,34,295,25],[223,39,295,39,"action"],[223,45,295,45],[223,46,295,46,"payload"],[223,53,295,39],[223,54,295,54,"key"],[223,57,295,14],[224,0,295,14],[224,17,294,20],[224,18,294,12],[225,0,297,11],[225,15,293,10],[225,21,297,17],[226,0,298,12,"index"],[226,16,298,12,"index"],[226,21,298,17],[226,24,298,20,"state"],[226,29,298,25],[226,30,298,26,"routes"],[226,36,298,20],[226,37,298,33,"findIndex"],[226,46,298,20],[226,47,299,14],[226,57,299,15,"route"],[226,62,299,14],[227,0,299,14],[227,25,299,25,"route"],[227,30,299,30],[227,31,299,31,"name"],[227,35,299,25],[227,40,299,40,"action"],[227,46,299,46],[227,47,299,47,"payload"],[227,54,299,40],[227,55,299,55,"name"],[227,59,299,14],[228,0,299,14],[228,17,298,20],[228,18,298,12],[229,0,301,11],[231,0,303,10],[231,18,303,14,"index"],[231,23,303,19],[231,28,303,24],[231,29,303,25],[231,30,303,10],[231,32,303,28],[232,0,304,12],[232,23,304,19],[232,27,304,12],[233,0,305,11],[235,0,307,10],[235,21,307,17,"changeIndex"],[235,32,307,28],[235,65,309,17,"state"],[235,70,307,28],[236,0,310,14,"routes"],[236,16,310,14,"routes"],[236,22,310,20],[236,24,311,16,"action"],[236,30,311,22],[236,31,311,23,"payload"],[236,38,311,16],[236,39,311,31,"params"],[236,45,311,16],[236,50,311,42,"undefined"],[236,59,311,16],[236,62,312,20,"state"],[236,67,312,25],[236,68,312,26,"routes"],[236,74,312,20],[236,75,312,33,"map"],[236,78,312,20],[236,79,312,37],[236,89,312,38,"route"],[236,94,312,37],[236,96,312,45,"i"],[236,97,312,37],[236,99,312,51],[237,0,313,22],[237,22,313,26,"i"],[237,23,313,27],[237,28,313,32,"index"],[237,33,313,22],[237,35,313,39],[238,0,314,24],[238,27,314,31,"route"],[238,32,314,24],[239,0,315,23],[241,0,317,22],[241,22,317,26,"params"],[241,28,317,22],[243,0,319,22],[243,22,320,24,"action"],[243,28,320,30],[243,29,320,31,"type"],[243,33,320,24],[243,38,320,40],[243,48,320,24],[243,52,321,24,"action"],[243,58,321,30],[243,59,321,31,"payload"],[243,66,321,24],[243,67,321,39,"merge"],[243,72,321,24],[243,77,321,49],[243,82,319,22],[243,84,322,24],[244,0,323,24,"params"],[244,20,323,24,"params"],[244,26,323,30],[244,29,324,26,"routeParamList"],[244,43,324,40],[244,44,324,41,"route"],[244,49,324,46],[244,50,324,47,"name"],[244,54,324,40],[244,55,324,26],[244,60,324,57,"undefined"],[244,69,324,26],[244,104,326,35,"routeParamList"],[244,118,326,49],[244,119,326,50,"route"],[244,124,326,55],[244,125,326,56,"name"],[244,129,326,49],[244,130,324,26],[244,133,327,35,"action"],[244,139,327,41],[244,140,327,42,"payload"],[244,147,327,35],[244,148,327,50,"params"],[244,154,324,26],[244,158,329,30,"action"],[244,164,329,36],[244,165,329,37,"payload"],[244,172,329,30],[244,173,329,45,"params"],[244,179,323,24],[245,0,330,23],[245,19,319,22],[245,25,330,29],[246,0,331,24,"params"],[246,20,331,24,"params"],[246,26,331,30],[246,29,331,33,"action"],[246,35,331,39],[246,36,331,40,"payload"],[246,43,331,33],[246,44,331,48,"params"],[246,50,331,33],[246,85,333,33,"route"],[246,90,333,38],[246,91,333,39,"params"],[246,97,331,33],[246,100,334,33,"action"],[246,106,334,39],[246,107,334,40,"payload"],[246,114,334,33],[246,115,334,48,"params"],[246,121,331,33],[246,125,336,28,"route"],[246,130,336,33],[246,131,336,34,"params"],[246,137,331,24],[247,0,337,23],[249,0,339,22],[249,25,339,29,"params"],[249,31,339,35],[249,36,339,40,"route"],[249,41,339,45],[249,42,339,46,"params"],[249,48,339,29],[249,83,340,31,"route"],[249,88,339,29],[250,0,340,38,"params"],[250,20,340,38,"params"],[250,26,340,44],[250,28,340,38,"params"],[251,0,339,29],[251,23,341,26,"route"],[251,28,339,22],[252,0,342,21],[252,17,312,20],[252,18,311,16],[252,21,343,20,"state"],[252,26,343,25],[252,27,343,26,"routes"],[253,0,307,28],[253,18,345,12,"index"],[253,23,307,28],[253,25,346,12,"backBehavior"],[253,37,307,28],[253,39,347,12,"initialRouteName"],[253,55,307,28],[253,56,307,10],[254,0,349,9],[256,0,351,8],[256,15,351,13],[256,24,351,8],[257,0,351,24],[258,0,352,10],[258,18,352,14,"state"],[258,23,352,19],[258,24,352,20,"history"],[258,31,352,14],[258,32,352,28,"length"],[258,38,352,14],[258,43,352,39],[258,44,352,10],[258,46,352,42],[259,0,353,12],[259,23,353,19],[259,27,353,12],[260,0,354,11],[262,0,356,10],[262,18,356,16,"previousKey"],[262,29,356,27],[262,32,356,30,"state"],[262,37,356,35],[262,38,356,36,"history"],[262,45,356,30],[262,46,356,44,"state"],[262,51,356,49],[262,52,356,50,"history"],[262,59,356,44],[262,60,356,58,"length"],[262,66,356,44],[262,69,356,67],[262,70,356,30],[262,72,356,70,"key"],[262,75,356,10],[264,0,357,10],[264,18,357,16,"index"],[264,24,357,21],[264,27,357,24,"state"],[264,32,357,29],[264,33,357,30,"routes"],[264,39,357,24],[264,40,357,37,"findIndex"],[264,49,357,24],[264,50,358,12],[264,60,358,13,"route"],[264,65,358,12],[265,0,358,12],[265,23,358,23,"route"],[265,28,358,28],[265,29,358,29,"key"],[265,32,358,23],[265,37,358,37,"previousKey"],[265,48,358,12],[266,0,358,12],[266,15,357,24],[266,16,357,10],[268,0,361,10],[268,18,361,14,"index"],[268,24,361,19],[268,29,361,24],[268,30,361,25],[268,31,361,10],[268,33,361,28],[269,0,362,12],[269,23,362,19],[269,27,362,12],[270,0,363,11],[272,0,365,10],[272,53,366,15,"state"],[272,58,365,10],[273,0,367,12,"history"],[273,16,367,12,"history"],[273,23,367,19],[273,25,367,21,"state"],[273,30,367,26],[273,31,367,27,"history"],[273,38,367,21],[273,39,367,35,"slice"],[273,44,367,21],[273,45,367,41],[273,46,367,21],[273,48,367,44],[273,49,367,45],[273,50,367,21],[273,51,365,10],[274,0,368,12,"index"],[274,16,368,12,"index"],[274,21,368,17],[274,23,368,12,"index"],[275,0,365,10],[276,0,370,9],[278,0,372,8],[279,0,373,10],[279,19,373,17,"BaseRouter"],[279,39,373,28,"getStateForAction"],[279,56,373,17],[279,57,373,46,"state"],[279,62,373,17],[279,64,373,53,"action"],[279,70,373,17],[279,71,373,10],[280,0,288,6],[281,0,375,5],[281,7,148,3],[282,0,377,4,"shouldActionChangeFocus"],[282,6,377,4,"shouldActionChangeFocus"],[282,29,148,3],[282,64,377,28,"action"],[282,70,148,3],[282,72,377,36],[283,0,378,6],[283,15,378,13,"action"],[283,21,378,19],[283,22,378,20,"type"],[283,26,378,13],[283,31,378,29],[283,41,378,6],[284,0,379,5],[284,7,148,3],[285,0,381,4,"actionCreators"],[285,6,381,4,"actionCreators"],[285,20,381,18],[285,22,381,20,"TabActions"],[286,0,148,3],[286,6,145,2],[288,0,384,2],[288,11,384,9,"router"],[288,17,384,2],[289,0,385,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","<anonymous>","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;EC6D;GDE;wBEG;QCyB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;uBEG,sBF;OCmB;8BEQ,oBD,uBC,CF;KHiB;IME;QJE;4BKC,sBL;WII;QPU,2CK,uBL,CO;KNmB;IQE;2CCC,oBD;KRO;IUE;cDQ,2CC;cDI,6CC;qCCa;qBD8B;YDgB,oCC;KViB;IYE;KZE;CNM"}},"type":"js/module"}]}