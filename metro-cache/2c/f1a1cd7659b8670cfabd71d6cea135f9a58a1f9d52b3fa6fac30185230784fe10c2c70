{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"invariant","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], \"invariant\");\n\n  function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {\n    var out = [];\n    var outLength = 0;\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = getFrameMetrics(ii);\n      var trailingOffset = frame.offset + frame.length;\n\n      for (var kk = 0; kk < offsets.length; kk++) {\n        if (out[kk] == null && trailingOffset >= offsets[kk]) {\n          out[kk] = ii;\n          outLength++;\n\n          if (kk === offsets.length - 1) {\n            invariant(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));\n            return out;\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n\n  function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {\n    var data = props.data,\n        getItemCount = props.getItemCount,\n        maxToRenderPerBatch = props.maxToRenderPerBatch,\n        windowSize = props.windowSize;\n    var itemCount = getItemCount(data);\n\n    if (itemCount === 0) {\n      return prev;\n    }\n\n    var offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;\n\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),\n        _elementsThatOverlapO2 = _slicedToArray(_elementsThatOverlapO, 4),\n        overscanFirst = _elementsThatOverlapO2[0],\n        first = _elementsThatOverlapO2[1],\n        last = _elementsThatOverlapO2[2],\n        overscanLast = _elementsThatOverlapO2[3];\n\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first: first,\n      last: last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n\n        first--;\n      }\n\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n\n        last++;\n      }\n    }\n\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first: first,\n        last: last,\n        itemCount: itemCount,\n        overscanFirst: overscanFirst,\n        overscanLast: overscanLast,\n        visible: visible\n      }));\n    }\n\n    return {\n      first: first,\n      last: last\n    };\n  }\n\n  var VirtualizeUtils = {\n    computeWindowedRenderLimits: computeWindowedRenderLimits,\n    elementsThatOverlapOffsets: elementsThatOverlapOffsets,\n    newRangeCount: newRangeCount\n  };\n  module.exports = VirtualizeUtils;\n});","lineCount":138,"map":[[2,0,11,0],[6,0,13,0],[6,6,13,6,"invariant"],[6,15,13,15],[6,18,13,18,"require"],[6,29,13,25],[6,61,13,0],[8,0,20,0],[8,11,20,9,"elementsThatOverlapOffsets"],[8,37,20,0],[8,38,21,2,"offsets"],[8,45,20,0],[8,47,22,2,"itemCount"],[8,56,20,0],[8,58,23,2,"getFrameMetrics"],[8,73,20,0],[8,75,30,17],[9,0,31,2],[9,8,31,8,"out"],[9,11,31,11],[9,14,31,14],[9,16,31,2],[10,0,32,2],[10,8,32,6,"outLength"],[10,17,32,15],[10,20,32,18],[10,21,32,2],[12,0,33,2],[12,9,33,7],[12,13,33,11,"ii"],[12,15,33,13],[12,18,33,16],[12,19,33,2],[12,21,33,19,"ii"],[12,23,33,21],[12,26,33,24,"itemCount"],[12,35,33,2],[12,37,33,35,"ii"],[12,39,33,37],[12,41,33,2],[12,43,33,41],[13,0,34,4],[13,10,34,10,"frame"],[13,15,34,15],[13,18,34,18,"getFrameMetrics"],[13,33,34,33],[13,34,34,34,"ii"],[13,36,34,33],[13,37,34,4],[14,0,35,4],[14,10,35,10,"trailingOffset"],[14,24,35,24],[14,27,35,27,"frame"],[14,32,35,32],[14,33,35,33,"offset"],[14,39,35,27],[14,42,35,42,"frame"],[14,47,35,47],[14,48,35,48,"length"],[14,54,35,4],[16,0,36,4],[16,11,36,9],[16,15,36,13,"kk"],[16,17,36,15],[16,20,36,18],[16,21,36,4],[16,23,36,21,"kk"],[16,25,36,23],[16,28,36,26,"offsets"],[16,35,36,33],[16,36,36,34,"length"],[16,42,36,4],[16,44,36,42,"kk"],[16,46,36,44],[16,48,36,4],[16,50,36,48],[17,0,37,6],[17,12,37,10,"out"],[17,15,37,13],[17,16,37,14,"kk"],[17,18,37,13],[17,19,37,10],[17,23,37,21],[17,27,37,10],[17,31,37,29,"trailingOffset"],[17,45,37,43],[17,49,37,47,"offsets"],[17,56,37,54],[17,57,37,55,"kk"],[17,59,37,54],[17,60,37,6],[17,62,37,60],[18,0,38,8,"out"],[18,10,38,8,"out"],[18,13,38,11],[18,14,38,12,"kk"],[18,16,38,11],[18,17,38,8],[18,20,38,18,"ii"],[18,22,38,8],[19,0,39,8,"outLength"],[19,10,39,8,"outLength"],[19,19,39,17],[21,0,40,8],[21,14,40,12,"kk"],[21,16,40,14],[21,21,40,19,"offsets"],[21,28,40,26],[21,29,40,27,"length"],[21,35,40,19],[21,38,40,36],[21,39,40,8],[21,41,40,39],[22,0,41,10,"invariant"],[22,12,41,10,"invariant"],[22,21,41,19],[22,22,42,12,"outLength"],[22,31,42,21],[22,36,42,26,"offsets"],[22,43,42,33],[22,44,42,34,"length"],[22,50,41,19],[22,52,43,12],[22,106,41,19],[22,108,44,12,"JSON"],[22,112,44,16],[22,113,44,17,"stringify"],[22,122,44,12],[22,123,44,27,"offsets"],[22,130,44,12],[22,131,41,19],[22,132,41,10],[23,0,46,10],[23,19,46,17,"out"],[23,22,46,10],[24,0,47,9],[25,0,48,7],[26,0,49,5],[27,0,50,3],[29,0,51,2],[29,11,51,9,"out"],[29,14,51,2],[30,0,52,1],[32,0,60,0],[32,11,60,9,"newRangeCount"],[32,24,60,0],[32,25,61,2,"prev"],[32,29,60,0],[32,31,66,2,"next"],[32,35,60,0],[32,37,71,10],[33,0,72,2],[33,11,73,4,"next"],[33,15,73,8],[33,16,73,9,"last"],[33,20,73,4],[33,23,74,4,"next"],[33,27,74,8],[33,28,74,9,"first"],[33,33,73,4],[33,36,75,4],[33,37,73,4],[33,40,76,4,"Math"],[33,44,76,8],[33,45,76,9,"max"],[33,48,76,4],[33,49,77,6],[33,50,76,4],[33,52,78,6],[33,56,78,10,"Math"],[33,60,78,14],[33,61,78,15,"min"],[33,64,78,10],[33,65,78,19,"next"],[33,69,78,23],[33,70,78,24,"last"],[33,74,78,10],[33,76,78,30,"prev"],[33,80,78,34],[33,81,78,35,"last"],[33,85,78,10],[33,86,78,6],[33,89,78,43,"Math"],[33,93,78,47],[33,94,78,48,"max"],[33,97,78,43],[33,98,78,52,"next"],[33,102,78,56],[33,103,78,57,"first"],[33,108,78,43],[33,110,78,64,"prev"],[33,114,78,68],[33,115,78,69,"first"],[33,120,78,43],[33,121,76,4],[33,122,72,2],[34,0,81,1],[36,0,89,0],[36,11,89,9,"computeWindowedRenderLimits"],[36,38,89,0],[36,39,90,2,"props"],[36,44,89,0],[36,46,97,2,"prev"],[36,50,89,0],[36,52,102,2,"getFrameMetricsApprox"],[36,73,89,0],[36,75,109,2,"scrollMetrics"],[36,88,89,0],[36,90,120,2],[37,0,121,2],[37,8,121,9,"data"],[37,12,121,2],[37,15,121,64,"props"],[37,20,121,2],[37,21,121,9,"data"],[37,25,121,2],[38,0,121,2],[38,8,121,15,"getItemCount"],[38,20,121,2],[38,23,121,64,"props"],[38,28,121,2],[38,29,121,15,"getItemCount"],[38,41,121,2],[39,0,121,2],[39,8,121,29,"maxToRenderPerBatch"],[39,27,121,2],[39,30,121,64,"props"],[39,35,121,2],[39,36,121,29,"maxToRenderPerBatch"],[39,55,121,2],[40,0,121,2],[40,8,121,50,"windowSize"],[40,18,121,2],[40,21,121,64,"props"],[40,26,121,2],[40,27,121,50,"windowSize"],[40,37,121,2],[41,0,122,2],[41,8,122,8,"itemCount"],[41,17,122,17],[41,20,122,20,"getItemCount"],[41,32,122,32],[41,33,122,33,"data"],[41,37,122,32],[41,38,122,2],[43,0,123,2],[43,8,123,6,"itemCount"],[43,17,123,15],[43,22,123,20],[43,23,123,2],[43,25,123,23],[44,0,124,4],[44,13,124,11,"prev"],[44,17,124,4],[45,0,125,3],[47,0,126,2],[47,8,126,9,"offset"],[47,14,126,2],[47,17,126,44,"scrollMetrics"],[47,30,126,2],[47,31,126,9,"offset"],[47,37,126,2],[48,0,126,2],[48,8,126,17,"velocity"],[48,16,126,2],[48,19,126,44,"scrollMetrics"],[48,32,126,2],[48,33,126,17,"velocity"],[48,41,126,2],[49,0,126,2],[49,8,126,27,"visibleLength"],[49,21,126,2],[49,24,126,44,"scrollMetrics"],[49,37,126,2],[49,38,126,27,"visibleLength"],[49,51,126,2],[50,0,131,2],[50,8,131,8,"visibleBegin"],[50,20,131,20],[50,23,131,23,"Math"],[50,27,131,27],[50,28,131,28,"max"],[50,31,131,23],[50,32,131,32],[50,33,131,23],[50,35,131,35,"offset"],[50,41,131,23],[50,42,131,2],[51,0,132,2],[51,8,132,8,"visibleEnd"],[51,18,132,18],[51,21,132,21,"visibleBegin"],[51,33,132,33],[51,36,132,36,"visibleLength"],[51,49,132,2],[52,0,133,2],[52,8,133,8,"overscanLength"],[52,22,133,22],[52,25,133,25],[52,26,133,26,"windowSize"],[52,36,133,36],[52,39,133,39],[52,40,133,25],[52,44,133,44,"visibleLength"],[52,57,133,2],[53,0,136,2],[53,8,136,8,"leadFactor"],[53,18,136,18],[53,21,136,21],[53,24,136,2],[54,0,138,2],[54,8,138,8,"fillPreference"],[54,22,138,22],[54,25,139,4,"velocity"],[54,33,139,12],[54,36,139,15],[54,37,139,4],[54,40,139,19],[54,47,139,4],[54,50,139,29,"velocity"],[54,58,139,37],[54,61,139,40],[54,62,139,41],[54,63,139,29],[54,66,139,45],[54,74,139,29],[54,77,139,56],[54,83,138,2],[55,0,141,2],[55,8,141,8,"overscanBegin"],[55,21,141,21],[55,24,141,24,"Math"],[55,28,141,28],[55,29,141,29,"max"],[55,32,141,24],[55,33,142,4],[55,34,141,24],[55,36,143,4,"visibleBegin"],[55,48,143,16],[55,51,143,19],[55,52,143,20],[55,56,143,24,"leadFactor"],[55,66,143,19],[55,70,143,38,"overscanLength"],[55,84,141,24],[55,85,141,2],[56,0,145,2],[56,8,145,8,"overscanEnd"],[56,19,145,19],[56,22,145,22,"Math"],[56,26,145,26],[56,27,145,27,"max"],[56,30,145,22],[56,31,145,31],[56,32,145,22],[56,34,145,34,"visibleEnd"],[56,44,145,44],[56,47,145,47,"leadFactor"],[56,57,145,57],[56,60,145,60,"overscanLength"],[56,74,145,22],[56,75,145,2],[57,0,147,2],[57,8,147,8,"lastItemOffset"],[57,22,147,22],[57,25,147,25,"getFrameMetricsApprox"],[57,46,147,46],[57,47,147,47,"itemCount"],[57,56,147,56],[57,59,147,59],[57,60,147,46],[57,61,147,25],[57,62,147,62,"offset"],[57,68,147,2],[59,0,148,2],[59,8,148,6,"lastItemOffset"],[59,22,148,20],[59,25,148,23,"overscanBegin"],[59,38,148,2],[59,40,148,38],[60,0,150,4],[60,13,150,11],[61,0,151,6,"first"],[61,8,151,6,"first"],[61,13,151,11],[61,15,151,13,"Math"],[61,19,151,17],[61,20,151,18,"max"],[61,23,151,13],[61,24,151,22],[61,25,151,13],[61,27,151,25,"itemCount"],[61,36,151,34],[61,39,151,37],[61,40,151,25],[61,43,151,41,"maxToRenderPerBatch"],[61,62,151,13],[61,63,150,11],[62,0,152,6,"last"],[62,8,152,6,"last"],[62,12,152,10],[62,14,152,12,"itemCount"],[62,23,152,21],[62,26,152,24],[63,0,150,11],[63,7,150,4],[64,0,154,3],[66,0,157,2],[66,32,157,51,"elementsThatOverlapOffsets"],[66,58,157,77],[66,59,158,4],[66,60,158,5,"overscanBegin"],[66,73,158,4],[66,75,158,20,"visibleBegin"],[66,87,158,4],[66,89,158,34,"visibleEnd"],[66,99,158,4],[66,101,158,46,"overscanEnd"],[66,112,158,4],[66,113,157,77],[66,115,159,4,"props"],[66,120,159,9],[66,121,159,10,"getItemCount"],[66,133,159,4],[66,134,159,23,"props"],[66,139,159,28],[66,140,159,29,"data"],[66,144,159,4],[66,145,157,77],[66,147,160,4,"getFrameMetricsApprox"],[66,168,157,77],[66,169,157,2],[67,0,157,2],[68,0,157,2],[68,8,157,7,"overscanFirst"],[68,21,157,2],[69,0,157,2],[69,8,157,22,"first"],[69,13,157,2],[70,0,157,2],[70,8,157,29,"last"],[70,12,157,2],[71,0,157,2],[71,8,157,35,"overscanLast"],[71,20,157,2],[73,0,162,2,"overscanFirst"],[73,4,162,2,"overscanFirst"],[73,17,162,15],[73,20,162,18,"overscanFirst"],[73,33,162,31],[73,37,162,35],[73,41,162,18],[73,44,162,42],[73,45,162,18],[73,48,162,46,"overscanFirst"],[73,61,162,2],[74,0,163,2,"first"],[74,4,163,2,"first"],[74,9,163,7],[74,12,163,10,"first"],[74,17,163,15],[74,21,163,19],[74,25,163,10],[74,28,163,26,"Math"],[74,32,163,30],[74,33,163,31,"max"],[74,36,163,26],[74,37,163,35],[74,38,163,26],[74,40,163,38,"overscanFirst"],[74,53,163,26],[74,54,163,10],[74,57,163,55,"first"],[74,62,163,2],[75,0,164,2,"overscanLast"],[75,4,164,2,"overscanLast"],[75,16,164,14],[75,19,164,17,"overscanLast"],[75,31,164,29],[75,35,164,33],[75,39,164,17],[75,42,164,40,"itemCount"],[75,51,164,49],[75,54,164,52],[75,55,164,17],[75,58,164,56,"overscanLast"],[75,70,164,2],[76,0,165,2,"last"],[76,4,165,2,"last"],[76,8,165,6],[76,11,166,4,"last"],[76,15,166,8],[76,19,166,12],[76,23,166,4],[76,26,167,8,"Math"],[76,30,167,12],[76,31,167,13,"min"],[76,34,167,8],[76,35,167,17,"overscanLast"],[76,47,167,8],[76,49,167,31,"first"],[76,54,167,36],[76,57,167,39,"maxToRenderPerBatch"],[76,76,167,31],[76,79,167,61],[76,80,167,8],[76,81,166,4],[76,84,168,8,"last"],[76,88,165,2],[77,0,169,2],[77,8,169,8,"visible"],[77,15,169,15],[77,18,169,18],[78,0,169,19,"first"],[78,6,169,19,"first"],[78,11,169,24],[78,13,169,19,"first"],[78,18,169,18],[79,0,169,26,"last"],[79,6,169,26,"last"],[79,10,169,30],[79,12,169,26,"last"],[80,0,169,18],[80,5,169,2],[81,0,175,2],[81,8,175,6,"newCellCount"],[81,20,175,18],[81,23,175,21,"newRangeCount"],[81,36,175,34],[81,37,175,35,"prev"],[81,41,175,34],[81,43,175,41,"visible"],[81,50,175,34],[81,51,175,2],[83,0,177,2],[83,11,177,9],[83,15,177,2],[83,17,177,15],[84,0,178,4],[84,10,178,8,"first"],[84,15,178,13],[84,19,178,17,"overscanFirst"],[84,32,178,8],[84,36,178,34,"last"],[84,40,178,38],[84,44,178,42,"overscanLast"],[84,56,178,4],[84,58,178,56],[85,0,180,6],[86,0,181,5],[88,0,182,4],[88,10,182,10,"maxNewCells"],[88,21,182,21],[88,24,182,24,"newCellCount"],[88,36,182,36],[88,40,182,40,"maxToRenderPerBatch"],[88,59,182,4],[89,0,183,4],[89,10,183,10,"firstWillAddMore"],[89,26,183,26],[89,29,183,29,"first"],[89,34,183,34],[89,38,183,38,"prev"],[89,42,183,42],[89,43,183,43,"first"],[89,48,183,29],[89,52,183,52,"first"],[89,57,183,57],[89,60,183,60,"prev"],[89,64,183,64],[89,65,183,65,"last"],[89,69,183,4],[90,0,184,4],[90,10,184,10,"firstShouldIncrement"],[90,30,184,30],[90,33,185,6,"first"],[90,38,185,11],[90,41,185,14,"overscanFirst"],[90,54,185,6],[90,59,185,32],[90,60,185,33,"maxNewCells"],[90,71,185,32],[90,75,185,48],[90,76,185,49,"firstWillAddMore"],[90,92,185,6],[90,93,184,4],[91,0,186,4],[91,10,186,10,"lastWillAddMore"],[91,25,186,25],[91,28,186,28,"last"],[91,32,186,32],[91,36,186,36,"prev"],[91,40,186,40],[91,41,186,41,"last"],[91,45,186,28],[91,49,186,49,"last"],[91,53,186,53],[91,56,186,56,"prev"],[91,60,186,60],[91,61,186,61,"first"],[91,66,186,4],[92,0,187,4],[92,10,187,10,"lastShouldIncrement"],[92,29,187,29],[92,32,188,6,"last"],[92,36,188,10],[92,39,188,13,"overscanLast"],[92,51,188,6],[92,56,188,30],[92,57,188,31,"maxNewCells"],[92,68,188,30],[92,72,188,46],[92,73,188,47,"lastWillAddMore"],[92,88,188,6],[92,89,187,4],[94,0,189,4],[94,10,189,8,"maxNewCells"],[94,21,189,19],[94,25,189,23],[94,26,189,24,"firstShouldIncrement"],[94,46,189,8],[94,50,189,48],[94,51,189,49,"lastShouldIncrement"],[94,70,189,4],[94,72,189,70],[95,0,194,6],[96,0,195,5],[98,0,196,4],[98,10,197,6,"firstShouldIncrement"],[98,30,197,26],[98,34,198,6],[98,36,198,8,"fillPreference"],[98,50,198,22],[98,55,198,27],[98,62,198,8],[98,66,198,38,"lastShouldIncrement"],[98,85,198,8],[98,89,198,61,"lastWillAddMore"],[98,104,198,6],[98,105,196,4],[98,107,199,6],[99,0,200,6],[99,12,200,10,"firstWillAddMore"],[99,28,200,6],[99,30,200,28],[100,0,201,8,"newCellCount"],[100,10,201,8,"newCellCount"],[100,22,201,20],[101,0,202,7],[103,0,203,6,"first"],[103,8,203,6,"first"],[103,13,203,11],[104,0,204,5],[106,0,205,4],[106,10,206,6,"lastShouldIncrement"],[106,29,206,25],[106,33,207,6],[106,35,207,8,"fillPreference"],[106,49,207,22],[106,54,207,27],[106,62,207,8],[106,66,207,39,"firstShouldIncrement"],[106,86,207,8],[106,90,207,63,"firstWillAddMore"],[106,106,207,6],[106,107,205,4],[106,109,208,6],[107,0,209,6],[107,12,209,10,"lastWillAddMore"],[107,27,209,6],[107,29,209,27],[108,0,210,8,"newCellCount"],[108,10,210,8,"newCellCount"],[108,22,210,20],[109,0,211,7],[111,0,212,6,"last"],[111,8,212,6,"last"],[111,12,212,10],[112,0,213,5],[113,0,214,3],[115,0,215,2],[115,8,216,4],[115,10,217,6,"last"],[115,14,217,10],[115,18,217,14,"first"],[115,23,217,6],[115,27,218,6,"first"],[115,32,218,11],[115,36,218,15],[115,37,217,6],[115,41,219,6,"last"],[115,45,219,10],[115,48,219,13,"itemCount"],[115,57,217,6],[115,61,220,6,"first"],[115,66,220,11],[115,70,220,15,"overscanFirst"],[115,83,217,6],[115,87,221,6,"last"],[115,91,221,10],[115,95,221,14,"overscanLast"],[115,107,217,6],[115,111,222,6,"first"],[115,116,222,11],[115,120,222,15,"visible"],[115,127,222,22],[115,128,222,23,"first"],[115,133,217,6],[115,137,223,6,"last"],[115,141,223,10],[115,145,223,14,"visible"],[115,152,223,21],[115,153,223,22,"last"],[115,157,216,4],[115,158,215,2],[115,160,225,4],[116,0,226,4],[116,12,226,10],[116,16,226,14,"Error"],[116,21,226,10],[116,22,227,6],[116,50,228,8,"JSON"],[116,54,228,12],[116,55,228,13,"stringify"],[116,64,228,8],[116,65,228,23],[117,0,229,10,"first"],[117,8,229,10,"first"],[117,13,229,15],[117,15,229,10,"first"],[117,20,228,23],[118,0,230,10,"last"],[118,8,230,10,"last"],[118,12,230,14],[118,14,230,10,"last"],[118,18,228,23],[119,0,231,10,"itemCount"],[119,8,231,10,"itemCount"],[119,17,231,19],[119,19,231,10,"itemCount"],[119,28,228,23],[120,0,232,10,"overscanFirst"],[120,8,232,10,"overscanFirst"],[120,21,232,23],[120,23,232,10,"overscanFirst"],[120,36,228,23],[121,0,233,10,"overscanLast"],[121,8,233,10,"overscanLast"],[121,20,233,22],[121,22,233,10,"overscanLast"],[121,34,228,23],[122,0,234,10,"visible"],[122,8,234,10,"visible"],[122,15,234,17],[122,17,234,10,"visible"],[123,0,228,23],[123,7,228,8],[123,8,226,10],[123,9,226,4],[124,0,237,3],[126,0,238,2],[126,11,238,9],[127,0,238,10,"first"],[127,6,238,10,"first"],[127,11,238,15],[127,13,238,10,"first"],[127,18,238,9],[128,0,238,17,"last"],[128,6,238,17,"last"],[128,10,238,21],[128,12,238,17,"last"],[129,0,238,9],[129,5,238,2],[130,0,239,1],[132,0,241,0],[132,6,241,6,"VirtualizeUtils"],[132,21,241,21],[132,24,241,24],[133,0,242,2,"computeWindowedRenderLimits"],[133,4,242,2,"computeWindowedRenderLimits"],[133,31,242,29],[133,33,242,2,"computeWindowedRenderLimits"],[133,60,241,24],[134,0,243,2,"elementsThatOverlapOffsets"],[134,4,243,2,"elementsThatOverlapOffsets"],[134,30,243,28],[134,32,243,2,"elementsThatOverlapOffsets"],[134,58,241,24],[135,0,244,2,"newRangeCount"],[135,4,244,2,"newRangeCount"],[135,17,244,15],[135,19,244,2,"newRangeCount"],[136,0,241,24],[136,3,241,0],[137,0,247,0,"module"],[137,2,247,0,"module"],[137,8,247,6],[137,9,247,7,"exports"],[137,16,247,0],[137,19,247,17,"VirtualizeUtils"],[137,34,247,0]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits"],"mappings":"AAA;ACmB;CDgC;AEQ;CFqB;AGQ;CHsJ"}},"type":"js/module"}]}