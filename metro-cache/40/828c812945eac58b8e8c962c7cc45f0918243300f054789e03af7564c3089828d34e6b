{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/get","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"./AnimatedInterpolation","data":{"isAsync":false,"locs":[{"start":{"line":13,"column":30},"end":{"line":13,"column":64}}]}},{"name":"./AnimatedNode","data":{"isAsync":false,"locs":[{"start":{"line":14,"column":21},"end":{"line":14,"column":46}}]}},{"name":"./AnimatedWithChildren","data":{"isAsync":false,"locs":[{"start":{"line":15,"column":29},"end":{"line":15,"column":62}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _get = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/get\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6], \"./AnimatedInterpolation\");\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7], \"./AnimatedNode\");\n\n  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[8], \"./AnimatedWithChildren\");\n\n  var AnimatedDiffClamp = function (_AnimatedWithChildren) {\n    _inherits(AnimatedDiffClamp, _AnimatedWithChildren);\n\n    var _super = _createSuper(AnimatedDiffClamp);\n\n    function AnimatedDiffClamp(a, min, max) {\n      var _this;\n\n      _classCallCheck(this, AnimatedDiffClamp);\n\n      _this = _super.call(this);\n      _this._a = a;\n      _this._min = min;\n      _this._max = max;\n      _this._value = _this._lastValue = _this._a.__getValue();\n      return _this;\n    }\n\n    _createClass(AnimatedDiffClamp, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._a.__makeNative();\n\n        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"interpolate\",\n      value: function interpolate(config) {\n        return new AnimatedInterpolation(this, config);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        var value = this._a.__getValue();\n\n        var diff = value - this._lastValue;\n        this._lastValue = value;\n        this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n        return this._value;\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        this._a.__addChild(this);\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        this._a.__removeChild(this);\n\n        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        return {\n          type: 'diffclamp',\n          input: this._a.__getNativeTag(),\n          min: this._min,\n          max: this._max\n        };\n      }\n    }]);\n\n    return AnimatedDiffClamp;\n  }(AnimatedWithChildren);\n\n  module.exports = AnimatedDiffClamp;\n});","lineCount":94,"map":[[2,0,11,0],[20,0,13,0],[20,6,13,6,"AnimatedInterpolation"],[20,27,13,27],[20,30,13,30,"require"],[20,41,13,37],[20,87,13,0],[22,0,14,0],[22,6,14,6,"AnimatedNode"],[22,18,14,18],[22,21,14,21,"require"],[22,32,14,28],[22,69,14,0],[24,0,15,0],[24,6,15,6,"AnimatedWithChildren"],[24,26,15,26],[24,29,15,29,"require"],[24,40,15,36],[24,85,15,0],[26,6,19,6,"AnimatedDiffClamp"],[26,23],[31,0,26,2],[31,31,26,14,"a"],[31,32,26,2],[31,34,26,31,"min"],[31,37,26,2],[31,39,26,44,"max"],[31,42,26,2],[31,44,26,57],[32,0,26,57],[34,0,26,57],[36,0,27,4],[37,0,29,4],[37,12,29,9,"_a"],[37,14,29,4],[37,17,29,14,"a"],[37,18,29,4],[38,0,30,4],[38,12,30,9,"_min"],[38,16,30,4],[38,19,30,16,"min"],[38,22,30,4],[39,0,31,4],[39,12,31,9,"_max"],[39,16,31,4],[39,19,31,16,"max"],[39,22,31,4],[40,0,32,4],[40,12,32,9,"_value"],[40,18,32,4],[40,21,32,18],[40,27,32,23,"_lastValue"],[40,37,32,18],[40,40,32,36],[40,46,32,41,"_a"],[40,48,32,36],[40,49,32,44,"__getValue"],[40,59,32,36],[40,61,32,4],[41,0,26,57],[42,0,33,3],[46,13,35,2],[46,37,35,17],[47,0,36,4],[47,13,36,9,"_a"],[47,15,36,4],[47,16,36,12,"__makeNative"],[47,28,36,4],[49,0,37,4],[50,0,38,3],[53,13,40,2],[53,34,40,14,"config"],[53,40,40,2],[53,42,40,70],[54,0,41,4],[54,15,41,11],[54,19,41,15,"AnimatedInterpolation"],[54,40,41,11],[54,41,41,37],[54,45,41,11],[54,47,41,43,"config"],[54,53,41,11],[54,54,41,4],[55,0,42,3],[58,13,44,2],[58,35,44,23],[59,0,45,4],[59,12,45,10,"value"],[59,17,45,15],[59,20,45,18],[59,25,45,23,"_a"],[59,27,45,18],[59,28,45,26,"__getValue"],[59,38,45,18],[59,40,45,4],[61,0,46,4],[61,12,46,10,"diff"],[61,16,46,14],[61,19,46,17,"value"],[61,24,46,22],[61,27,46,25],[61,32,46,30,"_lastValue"],[61,42,46,4],[62,0,47,4],[62,13,47,9,"_lastValue"],[62,23,47,4],[62,26,47,22,"value"],[62,31,47,4],[63,0,48,4],[63,13,48,9,"_value"],[63,19,48,4],[63,22,48,18,"Math"],[63,26,48,22],[63,27,48,23,"min"],[63,30,48,18],[63,31,48,27,"Math"],[63,35,48,31],[63,36,48,32,"max"],[63,39,48,27],[63,40,48,36],[63,45,48,41,"_value"],[63,51,48,36],[63,54,48,50,"diff"],[63,58,48,27],[63,60,48,56],[63,65,48,61,"_min"],[63,69,48,27],[63,70,48,18],[63,72,48,68],[63,77,48,73,"_max"],[63,81,48,18],[63,82,48,4],[64,0,49,4],[64,15,49,11],[64,20,49,16,"_value"],[64,26,49,4],[65,0,50,3],[68,13,52,2],[68,33,52,19],[69,0,53,4],[69,13,53,9,"_a"],[69,15,53,4],[69,16,53,12,"__addChild"],[69,26,53,4],[69,27,53,23],[69,31,53,4],[70,0,54,3],[73,13,56,2],[73,33,56,19],[74,0,57,4],[74,13,57,9,"_a"],[74,15,57,4],[74,16,57,12,"__removeChild"],[74,29,57,4],[74,30,57,26],[74,34,57,4],[76,0,58,4],[77,0,59,3],[80,13,61,2],[80,42,61,27],[81,0,62,4],[81,15,62,11],[82,0,63,6,"type"],[82,10,63,6,"type"],[82,14,63,10],[82,16,63,12],[82,27,62,11],[83,0,64,6,"input"],[83,10,64,6,"input"],[83,15,64,11],[83,17,64,13],[83,22,64,18,"_a"],[83,24,64,13],[83,25,64,21,"__getNativeTag"],[83,39,64,13],[83,41,62,11],[84,0,65,6,"min"],[84,10,65,6,"min"],[84,13,65,9],[84,15,65,11],[84,20,65,16,"_min"],[84,24,62,11],[85,0,66,6,"max"],[85,10,66,6,"max"],[85,13,66,9],[85,15,66,11],[85,20,66,16,"_max"],[86,0,62,11],[86,9,62,4],[87,0,68,3],[91,4,19,32,"AnimatedWithChildren"],[91,24],[93,0,71,0,"module"],[93,2,71,0,"module"],[93,8,71,6],[93,9,71,7,"exports"],[93,16,71,0],[93,19,71,17,"AnimatedDiffClamp"],[93,36,71,0]],"functionMap":{"names":["<global>","AnimatedDiffClamp","constructor","__makeNative","interpolate","__getValue","__attach","__detach","__getNativeConfig"],"mappings":"AAA;ACkB;ECO;GDO;EEE;GFG;EGE;GHE;EIE;GJM;EKE;GLE;EME;GNG;EOE;GPO;CDC"}},"type":"js/module"}]}