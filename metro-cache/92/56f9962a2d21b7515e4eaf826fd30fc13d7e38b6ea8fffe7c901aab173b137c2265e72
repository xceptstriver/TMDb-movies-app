{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"./LogBoxLog","data":{"isAsync":false,"locs":[]}},{"name":"./parseLogBoxLog","data":{"isAsync":false,"locs":[]}},{"name":"../../Core/Devtools/parseErrorStack","data":{"isAsync":false,"locs":[]}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"isAsync":false,"locs":[]}},{"name":"../../Core/ExceptionsManager","data":{"isAsync":false,"locs":[{"start":{"line":101,"column":28},"end":{"line":101,"column":67}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.addLog = addLog;\n  exports.addException = addException;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.clear = clear;\n  exports.setSelectedLog = setSelectedLog;\n  exports.clearWarnings = clearWarnings;\n  exports.clearErrors = clearErrors;\n  exports.dismiss = dismiss;\n  exports.setWarningFilter = setWarningFilter;\n  exports.setAppInfo = setAppInfo;\n  exports.getAppInfo = getAppInfo;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.setDisabled = setDisabled;\n  exports.isDisabled = isDisabled;\n  exports.observe = observe;\n  exports.withSubscription = withSubscription;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./LogBoxLog\"));\n\n  var _parseLogBoxLog = _$$_REQUIRE(_dependencyMap[8], \"./parseLogBoxLog\");\n\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Core/Devtools/parseErrorStack\"));\n\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../NativeModules/specs/NativeLogBox\"));\n\n  var _jsxFileName = \"/home/moglix/tmdb_movies_app/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  'use strict';\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n\n  var _selectedIndex = -1;\n\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[11], \"../../Core/ExceptionsManager\");\n\n    error.forceRedbox = true;\n    error.message = LOGBOX_ERROR_MESSAGE + \"\\n\\n\" + error.message;\n\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n\n    ExceptionsManager.handleException(error, true);\n  }\n\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n\n  function isMessageIgnored(message) {\n    for (var _iterator = _createForOfIteratorHelperLoose(ignorePatterns), _step; !(_step = _iterator()).done;) {\n      var pattern = _step.value;\n\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n\n  function appendNewLog(newLog) {\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    var lastLog = Array.from(logs).pop();\n\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n\n    if (newLog.level === 'fatal') {\n      var OPTIMISTIC_WAIT_TIME = 1000;\n\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n\n        if (_selectedIndex <= 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n\n        _addPendingLog = null;\n      };\n\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n    setImmediate(function () {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n\n  function addException(error) {\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n\n    while (index >= 0) {\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n\n      index -= 1;\n    }\n\n    _selectedIndex = newIndex;\n    handleUpdate();\n\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n\n  function addIgnorePatterns(patterns) {\n    var newPatterns = patterns.filter(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(ignorePatterns.entries()), _step2; !(_step2 = _iterator2()).done;) {\n          var existingPattern = _step2.value;\n\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !ignorePatterns.has(pattern);\n    });\n\n    if (newPatterns.length === 0) {\n      return;\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(newPatterns), _step3; !(_step3 = _iterator3()).done;) {\n      var pattern = _step3.value;\n      ignorePatterns.add(pattern);\n      logs = new Set(Array.from(logs).filter(function (log) {\n        return !isMessageIgnored(log.message.content);\n      }));\n    }\n\n    handleUpdate();\n  }\n\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n\n    _isDisabled = value;\n    handleUpdate();\n  }\n\n  function isDisabled() {\n    return _isDisabled;\n  }\n\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = function (_React$Component) {\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n\n      var _super = _createSuper(LogBoxStateSubscription);\n\n      function LogBoxStateSubscription() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n\n        _this._handleDismiss = function () {\n          var _this$state = _this.state,\n              selectedLogIndex = _this$state.selectedLogIndex,\n              stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            return null;\n          }\n\n          return React.createElement(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 9\n            }\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n      return LogBoxStateSubscription;\n    }(React.Component);\n\n    return LogBoxStateSubscription;\n  }\n});","lineCount":481,"map":[[40,0,13,0],[42,0,14,0],[44,0,15,0],[46,0,23,0],[48,0,25,0],[66,0,11,1],[66,14,11,0],[68,0,66,0],[68,6,66,6,"observers"],[68,15,66,47],[68,18,66,50],[68,22,66,54,"Set"],[68,25,66,50],[68,27,66,0],[69,0,67,0],[69,6,67,6,"ignorePatterns"],[69,20,67,40],[69,23,67,43],[69,27,67,47,"Set"],[69,30,67,43],[69,32,67,0],[70,0,68,0],[70,6,68,4,"appInfo"],[70,13,68,27],[70,16,68,30],[70,20,68,0],[71,0,69,0],[71,6,69,4,"logs"],[71,10,69,20],[71,13,69,23],[71,17,69,27,"Set"],[71,20,69,23],[71,22,69,0],[72,0,70,0],[72,6,70,4,"updateTimeout"],[72,19,70,17],[72,22,70,20],[72,26,70,0],[73,0,71,0],[73,6,71,4,"_isDisabled"],[73,17,71,15],[73,20,71,18],[73,25,71,0],[75,0,72,0],[75,6,72,4,"_selectedIndex"],[75,20,72,18],[75,23,72,21],[75,24,72,22],[75,25,72,0],[77,0,74,0],[77,6,74,4,"warningFilter"],[77,19,74,32],[77,22,74,35],[77,45,74,44,"format"],[77,51,74,35],[77,53,74,52],[78,0,75,2],[78,11,75,9],[79,0,76,4,"finalFormat"],[79,6,76,4,"finalFormat"],[79,17,76,15],[79,19,76,17,"format"],[79,25,75,9],[80,0,77,4,"forceDialogImmediately"],[80,6,77,4,"forceDialogImmediately"],[80,28,77,26],[80,30,77,28],[80,35,75,9],[81,0,78,4,"suppressDialog_LEGACY"],[81,6,78,4,"suppressDialog_LEGACY"],[81,27,78,25],[81,29,78,27],[81,33,75,9],[82,0,79,4,"suppressCompletely"],[82,6,79,4,"suppressCompletely"],[82,24,79,22],[82,26,79,24],[82,31,75,9],[83,0,80,4,"monitorEvent"],[83,6,80,4,"monitorEvent"],[83,18,80,16],[83,20,80,18],[83,29,75,9],[84,0,81,4,"monitorListVersion"],[84,6,81,4,"monitorListVersion"],[84,24,81,22],[84,26,81,24],[84,27,75,9],[85,0,82,4,"monitorSampleRate"],[85,6,82,4,"monitorSampleRate"],[85,23,82,21],[85,25,82,23],[86,0,75,9],[86,5,75,2],[87,0,84,1],[87,3,74,0],[89,0,86,0],[89,6,86,6,"LOGBOX_ERROR_MESSAGE"],[89,26,86,26],[89,29,87,2],[89,101,86,0],[91,0,89,0],[91,11,89,9,"getNextState"],[91,23,89,0],[91,26,89,24],[92,0,90,2],[92,11,90,9],[93,0,91,4,"logs"],[93,6,91,4,"logs"],[93,10,91,8],[93,12,91,4,"logs"],[93,16,90,9],[94,0,92,4,"isDisabled"],[94,6,92,4,"isDisabled"],[94,16,92,14],[94,18,92,16,"_isDisabled"],[94,29,90,9],[95,0,93,4,"selectedLogIndex"],[95,6,93,4,"selectedLogIndex"],[95,22,93,20],[95,24,93,22,"_selectedIndex"],[96,0,90,9],[96,5,90,2],[97,0,95,1],[99,0,97,7],[99,11,97,16,"reportLogBoxError"],[99,28,97,7],[99,29,98,2,"error"],[99,34,97,7],[99,36,99,2,"componentStack"],[99,50,97,7],[99,52,100,8],[100,0,101,2],[100,8,101,8,"ExceptionsManager"],[100,25,101,25],[100,28,101,28,"require"],[100,39,101,35],[100,91,101,2],[102,0,103,2,"error"],[102,4,103,2,"error"],[102,9,103,7],[102,10,103,8,"forceRedbox"],[102,21,103,2],[102,24,103,22],[102,28,103,2],[103,0,104,2,"error"],[103,4,104,2,"error"],[103,9,104,7],[103,10,104,8,"message"],[103,17,104,2],[103,20,104,21,"LOGBOX_ERROR_MESSAGE"],[103,40,104,2],[103,52,104,48,"error"],[103,57,104,53],[103,58,104,54,"message"],[103,65,104,2],[105,0,105,2],[105,8,105,6,"componentStack"],[105,22,105,20],[105,26,105,24],[105,30,105,2],[105,32,105,30],[106,0,106,4,"error"],[106,6,106,4,"error"],[106,11,106,9],[106,12,106,10,"componentStack"],[106,26,106,4],[106,29,106,27,"componentStack"],[106,43,106,4],[107,0,107,3],[109,0,108,2,"ExceptionsManager"],[109,4,108,2,"ExceptionsManager"],[109,21,108,19],[109,22,108,20,"handleException"],[109,37,108,2],[109,38,108,36,"error"],[109,43,108,2],[109,45,108,57],[109,49,108,2],[110,0,109,1],[112,0,111,7],[112,11,111,16,"isLogBoxErrorMessage"],[112,31,111,7],[112,32,111,37,"message"],[112,39,111,7],[112,41,111,63],[113,0,112,2],[113,11,112,9],[113,18,112,16,"message"],[113,25,112,9],[113,30,112,28],[113,38,112,9],[113,42,112,40,"message"],[113,49,112,47],[113,50,112,48,"includes"],[113,58,112,40],[113,59,112,57,"LOGBOX_ERROR_MESSAGE"],[113,79,112,40],[113,80,112,2],[114,0,113,1],[116,0,115,7],[116,11,115,16,"isMessageIgnored"],[116,27,115,7],[116,28,115,33,"message"],[116,35,115,7],[116,37,115,59],[117,0,116,2],[117,57,116,24,"ignorePatterns"],[117,71,116,2],[117,111,116,40],[118,0,116,40],[118,10,116,13,"pattern"],[118,17,116,40],[120,0,117,4],[120,10,118,7,"pattern"],[120,17,118,14],[120,29,118,26,"RegExp"],[120,35,118,7],[120,39,118,36,"pattern"],[120,46,118,43],[120,47,118,44,"test"],[120,51,118,36],[120,52,118,49,"message"],[120,59,118,36],[120,60,118,6],[120,64,119,7],[120,71,119,14,"pattern"],[120,78,119,7],[120,83,119,26],[120,91,119,7],[120,95,119,38,"message"],[120,102,119,45],[120,103,119,46,"includes"],[120,111,119,38],[120,112,119,55,"pattern"],[120,119,119,38],[120,120,117,4],[120,122,120,6],[121,0,121,6],[121,15,121,13],[121,19,121,6],[122,0,122,5],[123,0,123,3],[125,0,124,2],[125,11,124,9],[125,16,124,2],[126,0,125,1],[128,0,127,0],[128,11,127,9,"handleUpdate"],[128,23,127,0],[128,26,127,30],[129,0,128,2],[129,8,128,6,"updateTimeout"],[129,21,128,19],[129,25,128,23],[129,29,128,2],[129,31,128,29],[130,0,129,4,"updateTimeout"],[130,6,129,4,"updateTimeout"],[130,19,129,17],[130,22,129,20,"setImmediate"],[130,34,129,32],[130,35,129,33],[130,47,129,39],[131,0,130,6,"updateTimeout"],[131,8,130,6,"updateTimeout"],[131,21,130,19],[131,24,130,22],[131,28,130,6],[132,0,131,6],[132,12,131,12,"nextState"],[132,21,131,21],[132,24,131,24,"getNextState"],[132,36,131,36],[132,38,131,6],[133,0,132,6,"observers"],[133,8,132,6,"observers"],[133,17,132,15],[133,18,132,16,"forEach"],[133,25,132,6],[133,26,132,24],[134,0,132,24],[134,14,132,26,"observer"],[134,22,132,24],[134,30,132,26,"observer"],[134,38,132,24],[135,0,132,24],[135,17,132,40,"observer"],[135,25,132,48],[135,26,132,49,"nextState"],[135,35,132,48],[135,36,132,24],[136,0,132,24],[136,9,132,6],[137,0,133,5],[137,7,129,32],[137,8,129,4],[138,0,134,3],[139,0,135,1],[141,0,137,0],[141,11,137,9,"appendNewLog"],[141,23,137,0],[141,24,137,22,"newLog"],[141,30,137,0],[141,32,137,30],[142,0,142,2],[142,8,142,6,"isMessageIgnored"],[142,24,142,22],[142,25,142,23,"newLog"],[142,31,142,29],[142,32,142,30,"message"],[142,39,142,23],[142,40,142,38,"content"],[142,47,142,22],[142,48,142,2],[142,50,142,48],[143,0,143,4],[144,0,144,3],[146,0,149,2],[146,8,149,8,"lastLog"],[146,15,149,15],[146,18,149,18,"Array"],[146,23,149,23],[146,24,149,24,"from"],[146,28,149,18],[146,29,149,29,"logs"],[146,33,149,18],[146,35,149,35,"pop"],[146,38,149,18],[146,40,149,2],[148,0,150,2],[148,8,150,6,"lastLog"],[148,15,150,13],[148,19,150,17,"lastLog"],[148,26,150,24],[148,27,150,25,"category"],[148,35,150,17],[148,40,150,38,"newLog"],[148,46,150,44],[148,47,150,45,"category"],[148,55,150,2],[148,57,150,55],[149,0,151,4,"lastLog"],[149,6,151,4,"lastLog"],[149,13,151,11],[149,14,151,12,"incrementCount"],[149,28,151,4],[150,0,152,4,"handleUpdate"],[150,6,152,4,"handleUpdate"],[150,18,152,16],[151,0,153,4],[152,0,154,3],[154,0,156,2],[154,8,156,6,"newLog"],[154,14,156,12],[154,15,156,13,"level"],[154,20,156,6],[154,25,156,23],[154,32,156,2],[154,34,156,32],[155,0,160,4],[155,10,160,10,"OPTIMISTIC_WAIT_TIME"],[155,30,160,30],[155,33,160,33],[155,37,160,4],[157,0,162,4],[157,10,162,8,"addPendingLog"],[157,24,162,21],[157,27,162,24],[157,52,162,30],[158,0,163,6,"logs"],[158,8,163,6,"logs"],[158,12,163,10],[158,13,163,11,"add"],[158,16,163,6],[158,17,163,15,"newLog"],[158,23,163,6],[160,0,164,6],[160,12,164,10,"_selectedIndex"],[160,26,164,24],[160,30,164,28],[160,31,164,6],[160,33,164,31],[161,0,165,8,"setSelectedLog"],[161,10,165,8,"setSelectedLog"],[161,24,165,22],[161,25,165,23,"logs"],[161,29,165,27],[161,30,165,28,"size"],[161,34,165,23],[161,37,165,35],[161,38,165,22],[161,39,165,8],[162,0,166,7],[162,9,164,6],[162,15,166,13],[163,0,167,8,"handleUpdate"],[163,10,167,8,"handleUpdate"],[163,22,167,20],[164,0,168,7],[166,0,169,6,"addPendingLog"],[166,8,169,6,"addPendingLog"],[166,22,169,19],[166,25,169,22],[166,29,169,6],[167,0,170,5],[167,7,162,4],[169,0,172,4],[169,10,172,10,"optimisticTimeout"],[169,27,172,27],[169,30,172,30,"setTimeout"],[169,40,172,40],[169,41,172,41],[169,53,172,47],[170,0,173,6],[170,12,173,10,"addPendingLog"],[170,26,173,6],[170,28,173,25],[171,0,174,8,"addPendingLog"],[171,10,174,8,"addPendingLog"],[171,24,174,21],[172,0,175,7],[173,0,176,5],[173,7,172,40],[173,9,176,7,"OPTIMISTIC_WAIT_TIME"],[173,29,172,40],[173,30,172,4],[174,0,178,4,"newLog"],[174,6,178,4,"newLog"],[174,12,178,10],[174,13,178,11,"symbolicate"],[174,24,178,4],[174,25,178,23],[174,35,178,23,"status"],[174,41,178,29],[174,43,178,33],[175,0,179,6],[175,12,179,10,"addPendingLog"],[175,26,179,23],[175,30,179,27,"status"],[175,36,179,33],[175,41,179,38],[175,50,179,6],[175,52,179,49],[176,0,180,8,"addPendingLog"],[176,10,180,8,"addPendingLog"],[176,24,180,21],[178,0,181,8,"clearTimeout"],[178,10,181,8,"clearTimeout"],[178,22,181,20],[178,23,181,21,"optimisticTimeout"],[178,40,181,20],[178,41,181,8],[179,0,182,7],[179,9,179,6],[179,15,182,13],[179,19,182,17,"status"],[179,25,182,23],[179,30,182,28],[179,39,182,13],[179,41,182,39],[180,0,184,8,"handleUpdate"],[180,10,184,8,"handleUpdate"],[180,22,184,20],[181,0,185,7],[182,0,186,5],[182,7,178,4],[183,0,187,3],[183,5,156,2],[183,11,187,9],[183,15,187,13,"newLog"],[183,21,187,19],[183,22,187,20,"level"],[183,27,187,13],[183,32,187,30],[183,40,187,9],[183,42,187,40],[184,0,188,4,"logs"],[184,6,188,4,"logs"],[184,10,188,8],[184,11,188,9,"add"],[184,14,188,4],[184,15,188,13,"newLog"],[184,21,188,4],[185,0,189,4,"setSelectedLog"],[185,6,189,4,"setSelectedLog"],[185,20,189,18],[185,21,189,19,"logs"],[185,25,189,23],[185,26,189,24,"size"],[185,30,189,19],[185,33,189,31],[185,34,189,18],[185,35,189,4],[186,0,190,3],[186,5,187,9],[186,11,190,9],[187,0,191,4,"logs"],[187,6,191,4,"logs"],[187,10,191,8],[187,11,191,9,"add"],[187,14,191,4],[187,15,191,13,"newLog"],[187,21,191,4],[188,0,192,4,"handleUpdate"],[188,6,192,4,"handleUpdate"],[188,18,192,16],[189,0,193,3],[190,0,194,1],[192,0,196,7],[192,11,196,16,"addLog"],[192,17,196,7],[192,18,196,23,"log"],[192,21,196,7],[192,23,196,43],[193,0,197,2],[193,8,197,8,"errorForStackTrace"],[193,26,197,26],[193,29,197,29],[193,33,197,33,"Error"],[193,38,197,29],[193,40,197,2],[194,0,201,2,"setImmediate"],[194,4,201,2,"setImmediate"],[194,16,201,14],[194,17,201,15],[194,29,201,21],[195,0,202,4],[195,10,202,8],[196,0,204,6],[196,12,204,12,"stack"],[196,17,204,17],[196,20,204,20],[196,50,204,36,"errorForStackTrace"],[196,68,204,20],[196,69,204,6],[197,0,206,6,"appendNewLog"],[197,8,206,6,"appendNewLog"],[197,20,206,18],[197,21,207,8],[197,25,207,12,"LogBoxLog"],[197,43,207,8],[197,44,207,22],[198,0,208,10,"level"],[198,10,208,10,"level"],[198,15,208,15],[198,17,208,17,"log"],[198,20,208,20],[198,21,208,21,"level"],[198,26,207,22],[199,0,209,10,"message"],[199,10,209,10,"message"],[199,17,209,17],[199,19,209,19,"log"],[199,22,209,22],[199,23,209,23,"message"],[199,30,207,22],[200,0,210,10,"isComponentError"],[200,10,210,10,"isComponentError"],[200,26,210,26],[200,28,210,28],[200,33,207,22],[201,0,211,10,"stack"],[201,10,211,10,"stack"],[201,15,211,15],[201,17,211,10,"stack"],[201,22,207,22],[202,0,212,10,"category"],[202,10,212,10,"category"],[202,18,212,18],[202,20,212,20,"log"],[202,23,212,23],[202,24,212,24,"category"],[202,32,207,22],[203,0,213,10,"componentStack"],[203,10,213,10,"componentStack"],[203,24,213,24],[203,26,213,26,"log"],[203,29,213,29],[203,30,213,30,"componentStack"],[204,0,207,22],[204,9,207,8],[204,10,206,18],[204,11,206,6],[205,0,216,5],[205,7,202,4],[205,8,216,6],[205,15,216,13,"error"],[205,20,216,6],[205,22,216,20],[206,0,217,6,"reportLogBoxError"],[206,8,217,6,"reportLogBoxError"],[206,25,217,23],[206,26,217,24,"error"],[206,31,217,23],[206,32,217,6],[207,0,218,5],[208,0,219,3],[208,5,201,14],[208,6,201,2],[209,0,220,1],[211,0,222,7],[211,11,222,16,"addException"],[211,23,222,7],[211,24,222,29,"error"],[211,29,222,7],[211,31,222,65],[212,0,225,2,"setImmediate"],[212,4,225,2,"setImmediate"],[212,16,225,14],[212,17,225,15],[212,29,225,21],[213,0,226,4],[213,10,226,8],[214,0,227,6,"appendNewLog"],[214,8,227,6,"appendNewLog"],[214,20,227,18],[214,21,227,19],[214,25,227,23,"LogBoxLog"],[214,43,227,19],[214,44,227,33],[214,86,227,54,"error"],[214,91,227,33],[214,92,227,19],[214,93,227,18],[214,94,227,6],[215,0,228,5],[215,7,226,4],[215,8,228,6],[215,15,228,13,"loggingError"],[215,27,228,6],[215,29,228,27],[216,0,229,6,"reportLogBoxError"],[216,8,229,6,"reportLogBoxError"],[216,25,229,23],[216,26,229,24,"loggingError"],[216,38,229,23],[216,39,229,6],[217,0,230,5],[218,0,231,3],[218,5,225,14],[218,6,225,2],[219,0,232,1],[221,0,234,7],[221,11,234,16,"symbolicateLogNow"],[221,28,234,7],[221,29,234,34,"log"],[221,32,234,7],[221,34,234,50],[222,0,235,2,"log"],[222,4,235,2,"log"],[222,7,235,5],[222,8,235,6,"symbolicate"],[222,19,235,2],[222,20,235,18],[222,32,235,24],[223,0,236,4,"handleUpdate"],[223,6,236,4,"handleUpdate"],[223,18,236,16],[224,0,237,3],[224,5,235,2],[225,0,238,1],[227,0,240,7],[227,11,240,16,"retrySymbolicateLogNow"],[227,33,240,7],[227,34,240,39,"log"],[227,37,240,7],[227,39,240,55],[228,0,241,2,"log"],[228,4,241,2,"log"],[228,7,241,5],[228,8,241,6,"retrySymbolicate"],[228,24,241,2],[228,25,241,23],[228,37,241,29],[229,0,242,4,"handleUpdate"],[229,6,242,4,"handleUpdate"],[229,18,242,16],[230,0,243,3],[230,5,241,2],[231,0,244,1],[233,0,246,7],[233,11,246,16,"symbolicateLogLazy"],[233,29,246,7],[233,30,246,35,"log"],[233,33,246,7],[233,35,246,51],[234,0,247,2,"log"],[234,4,247,2,"log"],[234,7,247,5],[234,8,247,6,"symbolicate"],[234,19,247,2],[235,0,248,1],[237,0,250,7],[237,11,250,16,"clear"],[237,16,250,7],[237,19,250,30],[238,0,251,2],[238,8,251,6,"logs"],[238,12,251,10],[238,13,251,11,"size"],[238,17,251,6],[238,20,251,18],[238,21,251,2],[238,23,251,21],[239,0,252,4,"logs"],[239,6,252,4,"logs"],[239,10,252,8],[239,13,252,11],[239,17,252,15,"Set"],[239,20,252,11],[239,22,252,4],[240,0,253,4,"setSelectedLog"],[240,6,253,4,"setSelectedLog"],[240,20,253,18],[240,21,253,19],[240,22,253,20],[240,23,253,18],[240,24,253,4],[241,0,254,3],[242,0,255,1],[244,0,257,7],[244,11,257,16,"setSelectedLog"],[244,25,257,7],[244,26,257,31,"proposedNewIndex"],[244,42,257,7],[244,44,257,63],[245,0,258,2],[245,8,258,8,"oldIndex"],[245,16,258,16],[245,19,258,19,"_selectedIndex"],[245,33,258,2],[246,0,259,2],[246,8,259,6,"newIndex"],[246,16,259,14],[246,19,259,17,"proposedNewIndex"],[246,35,259,2],[247,0,261,2],[247,8,261,8,"logArray"],[247,16,261,16],[247,19,261,19,"Array"],[247,24,261,24],[247,25,261,25,"from"],[247,29,261,19],[247,30,261,30,"logs"],[247,34,261,19],[247,35,261,2],[248,0,262,2],[248,8,262,6,"index"],[248,13,262,11],[248,16,262,14,"logArray"],[248,24,262,22],[248,25,262,23,"length"],[248,31,262,14],[248,34,262,32],[248,35,262,2],[250,0,263,2],[250,11,263,9,"index"],[250,16,263,14],[250,20,263,18],[250,21,263,2],[250,23,263,21],[251,0,265,4],[251,10,265,8,"logArray"],[251,18,265,16],[251,19,265,17,"index"],[251,24,265,16],[251,25,265,8],[251,26,265,24,"level"],[251,31,265,8],[251,36,265,34],[251,44,265,4],[251,46,265,44],[252,0,266,6,"newIndex"],[252,8,266,6,"newIndex"],[252,16,266,14],[252,19,266,17,"index"],[252,24,266,6],[253,0,267,6],[254,0,268,5],[256,0,269,4,"index"],[256,6,269,4,"index"],[256,11,269,9],[256,15,269,13],[256,16,269,4],[257,0,270,3],[259,0,271,2,"_selectedIndex"],[259,4,271,2,"_selectedIndex"],[259,18,271,16],[259,21,271,19,"newIndex"],[259,29,271,2],[260,0,272,2,"handleUpdate"],[260,4,272,2,"handleUpdate"],[260,16,272,14],[262,0,273,2],[262,8,273,6,"NativeLogBox"],[262,29,273,2],[262,31,273,20],[263,0,274,4,"setTimeout"],[263,6,274,4,"setTimeout"],[263,16,274,14],[263,17,274,15],[263,29,274,21],[264,0,275,6],[264,12,275,10,"oldIndex"],[264,20,275,18],[264,23,275,21],[264,24,275,10],[264,28,275,26,"newIndex"],[264,36,275,34],[264,40,275,38],[264,41,275,6],[264,43,275,41],[265,0,276,8,"NativeLogBox"],[265,32,276,21,"show"],[265,36,276,8],[266,0,277,7],[266,9,275,6],[266,15,277,13],[266,19,277,17,"oldIndex"],[266,27,277,25],[266,31,277,29],[266,32,277,17],[266,36,277,34,"newIndex"],[266,44,277,42],[266,47,277,45],[266,48,277,13],[266,50,277,48],[267,0,278,8,"NativeLogBox"],[267,32,278,21,"hide"],[267,36,278,8],[268,0,279,7],[269,0,280,5],[269,7,274,14],[269,9,280,7],[269,10,274,14],[269,11,274,4],[270,0,281,3],[271,0,282,1],[273,0,284,7],[273,11,284,16,"clearWarnings"],[273,24,284,7],[273,27,284,38],[274,0,285,2],[274,8,285,8,"newLogs"],[274,15,285,15],[274,18,285,18,"Array"],[274,23,285,23],[274,24,285,24,"from"],[274,28,285,18],[274,29,285,29,"logs"],[274,33,285,18],[274,35,285,35,"filter"],[274,41,285,18],[274,42,285,42],[274,52,285,42,"log"],[274,55,285,45],[275,0,285,45],[275,13,285,49,"log"],[275,16,285,52],[275,17,285,53,"level"],[275,22,285,49],[275,27,285,63],[275,33,285,45],[276,0,285,45],[276,5,285,18],[276,6,285,2],[278,0,286,2],[278,8,286,6,"newLogs"],[278,15,286,13],[278,16,286,14,"length"],[278,22,286,6],[278,27,286,25,"logs"],[278,31,286,29],[278,32,286,30,"size"],[278,36,286,2],[278,38,286,36],[279,0,287,4,"logs"],[279,6,287,4,"logs"],[279,10,287,8],[279,13,287,11],[279,17,287,15,"Set"],[279,20,287,11],[279,21,287,19,"newLogs"],[279,28,287,11],[279,29,287,4],[280,0,288,4,"setSelectedLog"],[280,6,288,4,"setSelectedLog"],[280,20,288,18],[280,21,288,19],[280,22,288,20],[280,23,288,18],[280,24,288,4],[281,0,289,4,"handleUpdate"],[281,6,289,4,"handleUpdate"],[281,18,289,16],[282,0,290,3],[283,0,291,1],[285,0,293,7],[285,11,293,16,"clearErrors"],[285,22,293,7],[285,25,293,36],[286,0,294,2],[286,8,294,8,"newLogs"],[286,15,294,15],[286,18,294,18,"Array"],[286,23,294,23],[286,24,294,24,"from"],[286,28,294,18],[286,29,294,29,"logs"],[286,33,294,18],[286,35,294,35,"filter"],[286,41,294,18],[286,42,295,4],[286,52,295,4,"log"],[286,55,295,7],[287,0,295,7],[287,13,295,11,"log"],[287,16,295,14],[287,17,295,15,"level"],[287,22,295,11],[287,27,295,25],[287,34,295,11],[287,38,295,36,"log"],[287,41,295,39],[287,42,295,40,"level"],[287,47,295,36],[287,52,295,50],[287,59,295,7],[288,0,295,7],[288,5,294,18],[288,6,294,2],[290,0,297,2],[290,8,297,6,"newLogs"],[290,15,297,13],[290,16,297,14,"length"],[290,22,297,6],[290,27,297,25,"logs"],[290,31,297,29],[290,32,297,30,"size"],[290,36,297,2],[290,38,297,36],[291,0,298,4,"logs"],[291,6,298,4,"logs"],[291,10,298,8],[291,13,298,11],[291,17,298,15,"Set"],[291,20,298,11],[291,21,298,19,"newLogs"],[291,28,298,11],[291,29,298,4],[292,0,299,4,"setSelectedLog"],[292,6,299,4,"setSelectedLog"],[292,20,299,18],[292,21,299,19],[292,22,299,20],[292,23,299,18],[292,24,299,4],[293,0,300,3],[294,0,301,1],[296,0,303,7],[296,11,303,16,"dismiss"],[296,18,303,7],[296,19,303,24,"log"],[296,22,303,7],[296,24,303,46],[297,0,304,2],[297,8,304,6,"logs"],[297,12,304,10],[297,13,304,11,"has"],[297,16,304,6],[297,17,304,15,"log"],[297,20,304,6],[297,21,304,2],[297,23,304,21],[298,0,305,4,"logs"],[298,6,305,4,"logs"],[298,10,305,8],[298,11,305,9,"delete"],[298,17,305,4],[298,18,305,16,"log"],[298,21,305,4],[299,0,306,4,"handleUpdate"],[299,6,306,4,"handleUpdate"],[299,18,306,16],[300,0,307,3],[301,0,308,1],[303,0,310,7],[303,11,310,16,"setWarningFilter"],[303,27,310,7],[303,28,310,33,"filter"],[303,34,310,7],[303,36,310,62],[304,0,311,2,"warningFilter"],[304,4,311,2,"warningFilter"],[304,17,311,15],[304,20,311,18,"filter"],[304,26,311,2],[305,0,312,1],[307,0,314,7],[307,11,314,16,"setAppInfo"],[307,21,314,7],[307,22,314,27,"info"],[307,26,314,7],[307,28,314,54],[308,0,315,2,"appInfo"],[308,4,315,2,"appInfo"],[308,11,315,9],[308,14,315,12,"info"],[308,18,315,2],[309,0,316,1],[311,0,318,7],[311,11,318,16,"getAppInfo"],[311,21,318,7],[311,24,318,39],[312,0,319,2],[312,11,319,9,"appInfo"],[312,18,319,16],[312,22,319,20],[312,26,319,9],[312,29,319,27,"appInfo"],[312,36,319,34],[312,38,319,9],[312,41,319,39],[312,45,319,2],[313,0,320,1],[315,0,322,7],[315,11,322,16,"checkWarningFilter"],[315,29,322,7],[315,30,322,35,"format"],[315,36,322,7],[315,38,322,64],[316,0,323,2],[316,11,323,9,"warningFilter"],[316,24,323,22],[316,25,323,23,"format"],[316,31,323,22],[316,32,323,2],[317,0,324,1],[319,0,326,7],[319,11,326,16,"addIgnorePatterns"],[319,28,326,7],[319,29,327,2,"patterns"],[319,37,326,7],[319,39,328,8],[320,0,331,2],[320,8,331,8,"newPatterns"],[320,19,331,19],[320,22,331,22,"patterns"],[320,30,331,30],[320,31,331,31,"filter"],[320,37,331,22],[320,38,331,38],[320,48,331,39,"pattern"],[320,55,331,38],[320,57,331,66],[321,0,332,4],[321,10,332,8,"pattern"],[321,17,332,15],[321,29,332,27,"RegExp"],[321,35,332,4],[321,37,332,35],[322,0,333,6],[322,62,333,36,"ignorePatterns"],[322,76,333,50],[322,77,333,51,"entries"],[322,84,333,36],[322,86,333,6],[322,129,333,62],[323,0,333,62],[323,14,333,17,"existingPattern"],[323,29,333,62],[325,0,334,8],[325,14,335,10,"existingPattern"],[325,29,335,25],[325,41,335,37,"RegExp"],[325,47,335,10],[325,51,336,10,"existingPattern"],[325,66,336,25],[325,67,336,26,"toString"],[325,75,336,10],[325,82,336,41,"pattern"],[325,89,336,48],[325,90,336,49,"toString"],[325,98,336,41],[325,100,334,8],[325,102,337,10],[326,0,338,10],[326,19,338,17],[326,24,338,10],[327,0,339,9],[328,0,340,7],[330,0,341,6],[330,15,341,13],[330,19,341,6],[331,0,342,5],[333,0,343,4],[333,13,343,11],[333,14,343,12,"ignorePatterns"],[333,28,343,26],[333,29,343,27,"has"],[333,32,343,12],[333,33,343,31,"pattern"],[333,40,343,12],[333,41,343,4],[334,0,344,3],[334,5,331,22],[334,6,331,2],[336,0,346,2],[336,8,346,6,"newPatterns"],[336,19,346,17],[336,20,346,18,"length"],[336,26,346,6],[336,31,346,29],[336,32,346,2],[336,34,346,32],[337,0,347,4],[338,0,348,3],[340,0,349,2],[340,58,349,24,"newPatterns"],[340,69,349,2],[340,112,349,37],[341,0,349,37],[341,10,349,13,"pattern"],[341,17,349,37],[342,0,350,4,"ignorePatterns"],[342,6,350,4,"ignorePatterns"],[342,20,350,18],[342,21,350,19,"add"],[342,24,350,4],[342,25,350,23,"pattern"],[342,32,350,4],[343,0,356,4,"logs"],[343,6,356,4,"logs"],[343,10,356,8],[343,13,356,11],[343,17,356,15,"Set"],[343,20,356,11],[343,21,357,6,"Array"],[343,26,357,11],[343,27,357,12,"from"],[343,31,357,6],[343,32,357,17,"logs"],[343,36,357,6],[343,38,357,23,"filter"],[343,44,357,6],[343,45,357,30],[343,55,357,30,"log"],[343,58,357,33],[344,0,357,33],[344,15,357,37],[344,16,357,38,"isMessageIgnored"],[344,32,357,54],[344,33,357,55,"log"],[344,36,357,58],[344,37,357,59,"message"],[344,44,357,55],[344,45,357,67,"content"],[344,52,357,54],[344,53,357,33],[345,0,357,33],[345,7,357,6],[345,8,356,11],[345,9,356,4],[346,0,359,3],[348,0,360,2,"handleUpdate"],[348,4,360,2,"handleUpdate"],[348,16,360,14],[349,0,361,1],[351,0,363,7],[351,11,363,16,"setDisabled"],[351,22,363,7],[351,23,363,28,"value"],[351,28,363,7],[351,30,363,50],[352,0,364,2],[352,8,364,6,"value"],[352,13,364,11],[352,18,364,16,"_isDisabled"],[352,29,364,2],[352,31,364,29],[353,0,365,4],[354,0,366,3],[356,0,367,2,"_isDisabled"],[356,4,367,2,"_isDisabled"],[356,15,367,13],[356,18,367,16,"value"],[356,23,367,2],[357,0,368,2,"handleUpdate"],[357,4,368,2,"handleUpdate"],[357,16,368,14],[358,0,369,1],[360,0,371,7],[360,11,371,16,"isDisabled"],[360,21,371,7],[360,24,371,38],[361,0,372,2],[361,11,372,9,"_isDisabled"],[361,22,372,2],[362,0,373,1],[364,0,375,7],[364,11,375,16,"observe"],[364,18,375,7],[364,19,375,24,"observer"],[364,27,375,7],[364,29,375,58],[365,0,376,2],[365,8,376,8,"subscription"],[365,20,376,20],[365,23,376,23],[366,0,376,24,"observer"],[366,6,376,24,"observer"],[366,14,376,32],[366,16,376,24,"observer"],[367,0,376,23],[367,5,376,2],[368,0,377,2,"observers"],[368,4,377,2,"observers"],[368,13,377,11],[368,14,377,12,"add"],[368,17,377,2],[368,18,377,16,"subscription"],[368,30,377,2],[369,0,379,2,"observer"],[369,4,379,2,"observer"],[369,12,379,10],[369,13,379,11,"getNextState"],[369,25,379,23],[369,27,379,10],[369,28,379,2],[370,0,381,2],[370,11,381,9],[371,0,382,4,"unsubscribe"],[371,6,382,4,"unsubscribe"],[371,17,381,9],[371,42,382,24],[372,0,383,6,"observers"],[372,8,383,6,"observers"],[372,17,383,15],[372,18,383,16,"delete"],[372,24,383,6],[372,25,383,23,"subscription"],[372,37,383,6],[373,0,384,5],[374,0,381,9],[374,5,381,2],[375,0,386,1],[377,0,404,7],[377,11,404,16,"withSubscription"],[377,27,404,7],[377,28,405,2,"WrappedComponent"],[377,44,404,7],[377,46,406,33],[378,0,406,33],[378,8,407,8,"LogBoxStateSubscription"],[378,31,406,33],[379,0,406,33],[381,0,406,33],[383,0,406,33],[384,0,406,33],[386,0,406,33],[388,0,406,33],[389,0,406,33],[390,0,406,33],[392,0,406,33],[393,0,406,33],[393,14,418,4,"state"],[393,19,406,33],[393,22,418,12],[394,0,419,6,"logs"],[394,10,419,6,"logs"],[394,14,419,10],[394,16,419,12],[394,20,419,16,"Set"],[394,23,419,12],[394,25,418,12],[395,0,420,6,"isDisabled"],[395,10,420,6,"isDisabled"],[395,20,420,16],[395,22,420,18],[395,27,418,12],[396,0,421,6,"hasError"],[396,10,421,6,"hasError"],[396,18,421,14],[396,20,421,16],[396,25,418,12],[397,0,422,6,"selectedLogIndex"],[397,10,422,6,"selectedLogIndex"],[397,26,422,22],[397,28,422,24],[397,29,422,25],[398,0,418,12],[398,9,406,33],[400,0,406,33],[400,14,453,4,"_handleDismiss"],[400,28,406,33],[400,31,453,21],[400,43,453,33],[401,0,457,6],[401,28,457,50],[401,34,457,55,"state"],[401,39,457,6],[402,0,457,6],[402,14,457,13,"selectedLogIndex"],[402,30,457,6],[402,45,457,13,"selectedLogIndex"],[402,61,457,6],[403,0,457,6],[403,14,457,37,"stateLogs"],[403,23,457,6],[403,38,457,31,"logs"],[403,42,457,6],[404,0,458,6],[404,14,458,12,"logsArray"],[404,23,458,21],[404,26,458,24,"Array"],[404,31,458,29],[404,32,458,30,"from"],[404,36,458,24],[404,37,458,35,"stateLogs"],[404,46,458,24],[404,47,458,6],[406,0,459,6],[406,14,459,10,"selectedLogIndex"],[406,30,459,26],[406,34,459,30],[406,38,459,6],[406,40,459,36],[407,0,460,8],[407,16,460,12,"logsArray"],[407,25,460,21],[407,26,460,22,"length"],[407,32,460,12],[407,35,460,31],[407,36,460,12],[407,40,460,36],[407,41,460,8],[407,43,460,39],[408,0,461,10,"setSelectedLog"],[408,14,461,10,"setSelectedLog"],[408,28,461,24],[408,29,461,25],[408,30,461,26],[408,31,461,24],[408,32,461,10],[409,0,462,9],[409,13,460,8],[409,19,462,15],[409,23,462,19,"selectedLogIndex"],[409,39,462,35],[409,43,462,39,"logsArray"],[409,52,462,48],[409,53,462,49,"length"],[409,59,462,39],[409,62,462,58],[409,63,462,15],[409,65,462,61],[410,0,463,10,"setSelectedLog"],[410,14,463,10,"setSelectedLog"],[410,28,463,24],[410,29,463,25,"selectedLogIndex"],[410,45,463,41],[410,48,463,44],[410,49,463,24],[410,50,463,10],[411,0,464,9],[413,0,466,8,"dismiss"],[413,12,466,8,"dismiss"],[413,19,466,15],[413,20,466,16,"logsArray"],[413,29,466,25],[413,30,466,26,"selectedLogIndex"],[413,46,466,25],[413,47,466,15],[413,48,466,8],[414,0,467,7],[415,0,468,5],[415,9,406,33],[417,0,406,33],[417,14,470,4,"_handleMinimize"],[417,29,406,33],[417,32,470,22],[417,44,470,34],[418,0,471,6,"setSelectedLog"],[418,10,471,6,"setSelectedLog"],[418,24,471,20],[418,25,471,21],[418,26,471,22],[418,27,471,20],[418,28,471,6],[419,0,472,5],[419,9,406,33],[421,0,406,33],[421,14,474,4,"_handleSetSelectedLog"],[421,35,406,33],[421,38,474,28],[421,48,474,29,"index"],[421,53,474,28],[421,55,474,53],[422,0,475,6,"setSelectedLog"],[422,10,475,6,"setSelectedLog"],[422,24,475,20],[422,25,475,21,"index"],[422,30,475,20],[422,31,475,6],[423,0,476,5],[423,9,406,33],[425,0,406,33],[426,0,406,33],[428,0,406,33],[429,0,406,33],[430,0,406,33],[430,15,412,4],[430,42,412,22,"err"],[430,45,412,4],[430,47,412,34,"errorInfo"],[430,56,412,4],[430,58,412,76],[431,0,413,6,"reportLogBoxError"],[431,10,413,6,"reportLogBoxError"],[431,27,413,23],[431,28,413,24,"err"],[431,31,413,23],[431,33,413,29,"errorInfo"],[431,42,413,38],[431,43,413,39,"componentStack"],[431,57,413,23],[431,58,413,6],[432,0,414,5],[433,0,406,33],[434,0,406,33],[435,0,406,33],[435,15,425,4],[435,33,425,25],[436,0,426,6],[436,14,426,10],[436,19,426,15,"state"],[436,24,426,10],[436,25,426,21,"hasError"],[436,33,426,6],[436,35,426,31],[437,0,429,8],[437,19,429,15],[437,23,429,8],[438,0,430,7],[440,0,432,6],[440,17,433,8],[440,37,433,9],[440,53,433,8],[441,0,434,10],[441,12,434,10],[441,16,434,14],[441,18,434,16,"Array"],[441,23,434,21],[441,24,434,22,"from"],[441,28,434,16],[441,29,434,27],[441,34,434,32,"state"],[441,39,434,27],[441,40,434,38,"logs"],[441,44,434,16],[441,45,433,8],[442,0,435,10],[442,12,435,10],[442,22,435,20],[442,24,435,22],[442,29,435,27,"state"],[442,34,435,22],[442,35,435,33,"isDisabled"],[442,45,433,8],[443,0,436,10],[443,12,436,10],[443,28,436,26],[443,30,436,28],[443,35,436,33,"state"],[443,40,436,28],[443,41,436,39,"selectedLogIndex"],[443,57,433,8],[444,0,433,8],[445,0,433,8],[446,0,433,8],[447,0,433,8],[448,0,433,8],[449,0,433,8],[450,0,433,8],[450,12,432,6],[451,0,439,5],[452,0,406,33],[453,0,406,33],[454,0,406,33],[454,15,441,4],[454,44,441,30],[455,0,441,30],[457,0,442,6],[457,15,442,11,"_subscription"],[457,28,442,6],[457,31,442,27,"observe"],[457,38,442,34],[457,39,442,35],[457,49,442,35,"data"],[457,53,442,39],[457,55,442,43],[458,0,443,8],[458,12,443,8],[458,18,443,12],[458,19,443,13,"setState"],[458,27,443,8],[458,28,443,22,"data"],[458,32,443,8],[459,0,444,7],[459,11,442,34],[459,12,442,6],[460,0,445,5],[461,0,406,33],[462,0,406,33],[463,0,406,33],[463,15,447,4],[463,47,447,33],[464,0,448,6],[464,14,448,10],[464,19,448,15,"_subscription"],[464,32,448,10],[464,36,448,32],[464,40,448,6],[464,42,448,38],[465,0,449,8],[465,17,449,13,"_subscription"],[465,30,449,8],[465,31,449,27,"unsubscribe"],[465,42,449,8],[466,0,450,7],[467,0,451,5],[468,0,406,33],[469,0,406,33],[470,0,406,33],[470,15,408,4],[470,51,408,38],[471,0,409,6],[471,17,409,13],[472,0,409,14,"hasError"],[472,12,409,14,"hasError"],[472,20,409,22],[472,22,409,24],[473,0,409,13],[473,11,409,6],[474,0,410,5],[475,0,406,33],[476,0,406,33],[477,0,406,33],[477,6,407,40,"React"],[477,11,407,45],[477,12,407,46,"Component"],[477,21,406,33],[479,0,479,2],[479,11,479,9,"LogBoxStateSubscription"],[479,34,479,2],[480,0,480,1]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","addIgnorePatterns","patterns.filter$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCCyE;CDU;AEK;CFM;OGE;CHY;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;wBCyB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMkB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;sCCK;GDa;8BPa,6CO;C9BI;OgCE;ChCM;OiCE;CjCE;OkCE;ICO;KDE;ClCE;OoCkB;ECG;ICC;KDE;IEE;KFE;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CpCG"}},"type":"js/module"}]}