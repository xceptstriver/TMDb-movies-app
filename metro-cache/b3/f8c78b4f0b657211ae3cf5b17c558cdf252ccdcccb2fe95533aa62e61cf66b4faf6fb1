{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false,"locs":[]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false,"locs":[]}},{"name":"react","data":{"isAsync":false,"locs":[]}},{"name":"react-native","data":{"isAsync":false,"locs":[]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _this = this,\n      _jsxFileName = \"/home/moglix/tmdb_movies_app/src/components/GenreView.js\",\n      _s = $RefreshSig$();\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var GenreView = function GenreView(props) {\n    _s();\n\n    var bkgStyle = props.bkgStyle,\n        isDarkMode = props.isDarkMode,\n        genre = props.genre,\n        onSelect = props.onSelect;\n\n    var _React$useState = _react.default.useState(false),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        isSelected = _React$useState2[0],\n        setIsSelected = _React$useState2[1];\n\n    var color = {\n      bkgColor: isSelected ? isDarkMode ? '#EBEBEB' : '#6930C3' : bkgStyle.bkgColor,\n      txtColor: isSelected ? isDarkMode ? '#050505' : '#EBEBEB' : bkgStyle.txtColor,\n      borderColor: isSelected ? isDarkMode ? '#EBEBEB' : '#6930C3' : bkgStyle.txtColor\n    };\n\n    _react.default.useEffect(function () {\n      onSelect(genre, isSelected);\n    }, [isSelected]);\n\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        setIsSelected(!isSelected);\n      },\n      style: _objectSpread(_objectSpread({}, styles.genreWrapper), {}, {\n        borderColor: color.borderColor,\n        backgroundColor: color.bkgColor\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: _objectSpread(_objectSpread({}, styles.genreTxt), {}, {\n        color: color.txtColor\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, genre === 'Science_Fiction' ? 'Science Fiction' : genre === 'TV_Movie' ? 'TV Movie' : genre));\n  };\n\n  _s(GenreView, \"CacRf9f2+4Wx6hl/Ob/6GklkgIs=\");\n\n  _c = GenreView;\n\n  var styles = _reactNative.StyleSheet.create({\n    genreWrapper: {\n      alignSelf: 'center',\n      justifyContent: 'center',\n      paddingHorizontal: 20,\n      marginVertical: 10,\n      marginHorizontal: 5,\n      height: 40,\n      borderRadius: 20,\n      borderWidth: 1\n    },\n    genreTxt: {\n      fontSize: 15,\n      fontFamily: 'Roboto-Regular'\n    }\n  });\n\n  var _default = GenreView;\n  exports.default = _default;\n\n  var _c;\n\n  $RefreshReg$(_c, \"GenreView\");\n});","lineCount":103,"map":[[13,0,1,0],[15,0,2,0],[25,0,3,0],[25,6,3,6,"GenreView"],[25,15,3,15],[25,18,3,18],[25,27,3,6,"GenreView"],[25,36,3,18],[25,37,3,19,"props"],[25,42,3,18],[25,44,3,29],[26,0,3,29],[28,0,4,2],[28,8,4,9,"bkgStyle"],[28,16,4,2],[28,19,4,50,"props"],[28,24,4,2],[28,25,4,9,"bkgStyle"],[28,33,4,2],[29,0,4,2],[29,8,4,19,"isDarkMode"],[29,18,4,2],[29,21,4,50,"props"],[29,26,4,2],[29,27,4,19,"isDarkMode"],[29,37,4,2],[30,0,4,2],[30,8,4,31,"genre"],[30,13,4,2],[30,16,4,50,"props"],[30,21,4,2],[30,22,4,31,"genre"],[30,27,4,2],[31,0,4,2],[31,8,4,38,"onSelect"],[31,16,4,2],[31,19,4,50,"props"],[31,24,4,2],[31,25,4,38,"onSelect"],[31,33,4,2],[33,0,5,2],[33,26,5,38,"React"],[33,41,5,44,"useState"],[33,49,5,38],[33,50,5,53],[33,55,5,38],[33,56,5,2],[34,0,5,2],[35,0,5,2],[35,8,5,9,"isSelected"],[35,18,5,2],[36,0,5,2],[36,8,5,21,"setIsSelected"],[36,21,5,2],[38,0,7,2],[38,8,7,8,"color"],[38,13,7,13],[38,16,7,16],[39,0,8,4,"bkgColor"],[39,6,8,4,"bkgColor"],[39,14,8,12],[39,16,8,14,"isSelected"],[39,26,8,24],[39,29,9,8,"isDarkMode"],[39,39,9,18],[39,42,10,10],[39,51,9,18],[39,54,11,10],[39,63,8,24],[39,66,12,8,"bkgStyle"],[39,74,12,16],[39,75,12,17,"bkgColor"],[39,83,7,16],[40,0,13,4,"txtColor"],[40,6,13,4,"txtColor"],[40,14,13,12],[40,16,13,14,"isSelected"],[40,26,13,24],[40,29,14,8,"isDarkMode"],[40,39,14,18],[40,42,15,10],[40,51,14,18],[40,54,16,10],[40,63,13,24],[40,66,17,8,"bkgStyle"],[40,74,17,16],[40,75,17,17,"txtColor"],[40,83,7,16],[41,0,18,4,"borderColor"],[41,6,18,4,"borderColor"],[41,17,18,15],[41,19,18,17,"isSelected"],[41,29,18,27],[41,32,19,8,"isDarkMode"],[41,42,19,18],[41,45,20,10],[41,54,19,18],[41,57,21,10],[41,66,18,27],[41,69,22,8,"bkgStyle"],[41,77,22,16],[41,78,22,17,"txtColor"],[42,0,7,16],[42,5,7,2],[44,0,25,2,"React"],[44,19,25,8,"useEffect"],[44,28,25,2],[44,29,25,18],[44,41,25,24],[45,0,26,4,"onSelect"],[45,6,26,4,"onSelect"],[45,14,26,12],[45,15,26,13,"genre"],[45,20,26,12],[45,22,26,20,"isSelected"],[45,32,26,12],[45,33,26,4],[46,0,27,3],[46,5,25,2],[46,7,27,5],[46,8,27,6,"isSelected"],[46,18,27,5],[46,19,25,2],[48,0,29,2],[48,11,30,4],[48,40,30,5],[48,69,30,4],[49,0,31,6],[49,6,31,6],[49,19,31,19],[49,21,31,21],[49,24,30,4],[50,0,32,6],[50,6,32,6],[50,13,32,13],[50,15,32,15],[50,34,32,21],[51,0,33,8,"setIsSelected"],[51,8,33,8,"setIsSelected"],[51,21,33,21],[51,22,33,22],[51,23,33,23,"isSelected"],[51,33,33,21],[51,34,33,8],[52,0,34,7],[52,7,30,4],[53,0,35,6],[53,6,35,6],[53,11,35,11],[53,45,36,11,"styles"],[53,51,36,17],[53,52,36,18,"genreWrapper"],[53,64,35,11],[54,0,37,8,"borderColor"],[54,8,37,8,"borderColor"],[54,19,37,19],[54,21,37,21,"color"],[54,26,37,26],[54,27,37,27,"borderColor"],[54,38,35,11],[55,0,38,8,"backgroundColor"],[55,8,38,8,"backgroundColor"],[55,23,38,23],[55,25,38,25,"color"],[55,30,38,30],[55,31,38,31,"bkgColor"],[56,0,35,11],[56,8,30,4],[57,0,30,4],[58,0,30,4],[59,0,30,4],[60,0,30,4],[61,0,30,4],[62,0,30,4],[63,0,30,4],[63,7,40,6],[63,36,40,7],[63,53,40,6],[64,0,41,8],[64,6,41,8],[64,11,41,13],[64,45,42,13,"styles"],[64,51,42,19],[64,52,42,20,"genreTxt"],[64,60,41,13],[65,0,43,10,"color"],[65,8,43,10,"color"],[65,13,43,15],[65,15,43,17,"color"],[65,20,43,22],[65,21,43,23,"txtColor"],[66,0,41,13],[66,8,40,6],[67,0,40,6],[68,0,40,6],[69,0,40,6],[70,0,40,6],[71,0,40,6],[72,0,40,6],[73,0,40,6],[73,7,45,9,"genre"],[73,12,45,14],[73,17,45,19],[73,34,45,9],[73,37,46,12],[73,54,45,9],[73,57,47,12,"genre"],[73,62,47,17],[73,67,47,22],[73,77,47,12],[73,80,48,12],[73,90,47,12],[73,93,49,12,"genre"],[73,98,40,6],[73,99,30,4],[73,100,29,2],[74,0,53,1],[74,3,3,0],[76,5,3,6,"GenreView"],[76,14],[78,7,3,6,"GenreView"],[78,16],[80,0,55,0],[80,6,55,6,"styles"],[80,12,55,12],[80,15,55,15,"StyleSheet"],[80,39,55,26,"create"],[80,45,55,15],[80,46,55,33],[81,0,56,2,"genreWrapper"],[81,4,56,2,"genreWrapper"],[81,16,56,14],[81,18,56,16],[82,0,57,4,"alignSelf"],[82,6,57,4,"alignSelf"],[82,15,57,13],[82,17,57,15],[82,25,56,16],[83,0,58,4,"justifyContent"],[83,6,58,4,"justifyContent"],[83,20,58,18],[83,22,58,20],[83,30,56,16],[84,0,59,4,"paddingHorizontal"],[84,6,59,4,"paddingHorizontal"],[84,23,59,21],[84,25,59,23],[84,27,56,16],[85,0,60,4,"marginVertical"],[85,6,60,4,"marginVertical"],[85,20,60,18],[85,22,60,20],[85,24,56,16],[86,0,61,4,"marginHorizontal"],[86,6,61,4,"marginHorizontal"],[86,22,61,20],[86,24,61,22],[86,25,56,16],[87,0,62,4,"height"],[87,6,62,4,"height"],[87,12,62,10],[87,14,62,12],[87,16,56,16],[88,0,63,4,"borderRadius"],[88,6,63,4,"borderRadius"],[88,18,63,16],[88,20,63,18],[88,22,56,16],[89,0,64,4,"borderWidth"],[89,6,64,4,"borderWidth"],[89,17,64,15],[89,19,64,17],[90,0,56,16],[90,5,55,33],[91,0,66,2,"genreTxt"],[91,4,66,2,"genreTxt"],[91,12,66,10],[91,14,66,12],[92,0,67,4,"fontSize"],[92,6,67,4,"fontSize"],[92,14,67,12],[92,16,67,14],[92,18,66,12],[93,0,68,4,"fontFamily"],[93,6,68,4,"fontFamily"],[93,16,68,14],[93,18,68,16],[94,0,66,12],[95,0,55,33],[95,3,55,15],[95,4,55,0],[97,17,72,15,"GenreView"],[97,26]],"functionMap":{"names":["<global>","GenreView","React.useEffect$argument_0","TouchableOpacity.props.onPress"],"mappings":"AAA;kBCE;kBCsB;GDE;eEK;OFE;CDmB"}},"type":"js/module"}]}